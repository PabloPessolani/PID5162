BITACORA MUK


En el directorio raiz de muk se encuentra el programa main.
luego tiene diversos subdirectorios identicos a MOL
	muk
		debug.h
		macros.h
		muk.c
		
		- tasks
			systask
			libdriver
			rdisk
			eth
			
		- servers
			pm
			rs
			is
			net 
			
		- apps
			webserver
			
En cada uno de estos directorios se ejecuta crea un archivo objeto 
para ello hay que cambiar el Makefile y el main cambia de nombre 
y de formato para ser invocado desde el main principal

main ejecuta cada una de las tareas y servidores como un thread.
main se deberia bindear como un endpoint

		pthread_init( pth_systask, args_systask)
		receive_T()
		pthread_init( pm, args_pm)
		receive_T()
		
		for( i = 0; i < N; i++)
			send() a cada servidor para que comience a trabajar
			
ciertas tareas se bindean solas.
	systask
	pm
	rs 
	
las otras deben bindearse dentro del pth_xxxxx 
pth_xxxxx( void *xxxx_args){
	bindear al proceso si es necesario.
	convertir xxxx_args en argc, argv
	invocar a muk_xxxxx
}	
		
		
=======================================================================================
20190303:



root@node0:/usr/src/dvs/dvk-tests# cd /usr/src/dvs/dvk-tests/
root@node0:/usr/src/dvs/dvk-tests# ./tests.sh 0 0
root@node0:/usr/src/dvs/dvk-tests# cd ../dvs-apps/dc_init/
root@node0:/usr/src/dvs/dvs-apps/dc_init# . ./DC0.sh 
root@node0:/usr/src/dvs/dvs-apps/dc_init# echo $DC0
	548
root@node0:/usr/src/dvs/dvs-apps/dc_init# ps -ef | grep dc_init
	root       548     1  0 10:58 ?        00:00:00 ./dc_init DC0.cfg
	root       571   522  0 11:00 pts/0    00:00:00 grep dc_init


root@node0:/usr/src/dvs# cd /usr/src/dvs/vos/muk
root@node0:/usr/src/dvs/vos/muk# nsenter -p -t$DC0 ./muk 0 > muk_stdout.txt 2> muk_stderr.txt 
	DEBUG 2:dvk_open:40: Open dvk device file /dev/dvk
	 muk.c:get_dvs_params:19:
	DEBUG 2:dvk_getdvsinfo:113: 
	DEBUG 2:dvk_getdvsinfo:115: ioctl ret=0
	 muk.c:get_dvs_params:21:local_nodeid=0
	 muk.c:get_dvs_params:24:d_nr_dcs=32 d_nr_nodes=32 d_nr_procs=221 d_nr_tasks=35 d_nr_sysprocs=64 
	 muk.c:main:70:dcid=0
	 muk.c:get_dc_params:35:dcid=0
	DEBUG 2:dvk_getdcinfo:163: dcid=0
	DEBUG 2:dvk_getdcinfo:167: ioctl ret=0 errno=0
	 muk.c:get_dc_params:43:dc_dcid=0 dc_nr_procs=221 dc_nr_tasks=34 dc_nr_sysprocs=64 dc_nr_nodes=32
	 muk.c:get_dc_params:44:flags=0 dc_nodes=3 dc_pid=548 dc_name=DC0

	 
	root@node0:/usr/src/dvs/vos/muk# nsenter -p -t$DC0 ./muk 0
	DEBUG 53:dvk_open:40: Open dvk device file /dev/dvk
	 muk.c:get_dvs_params:13:
	DEBUG 53:dvk_getdvsinfo:113: 
	DEBUG 53:dvk_getdvsinfo:115: ioctl ret=0
	 muk.c:get_dvs_params:15:local_nodeid=0
	 muk.c:get_dvs_params:18:d_nr_dcs=32 d_nr_nodes=32 d_nr_procs=221 d_nr_tasks=35 d_nr_sysprocs=64 
	 muk.c:main:154:dcid=0
	 muk.c:get_dc_params:29:dcid=0
	DEBUG 53:dvk_getdcinfo:163: dcid=0
	DEBUG 53:dvk_getdcinfo:167: ioctl ret=0 errno=0
	 muk.c:get_dc_params:37:dc_dcid=0 dc_nr_procs=221 dc_nr_tasks=34 dc_nr_sysprocs=64 dc_nr_nodes=32
	 muk.c:get_dc_params:38:flags=0 dc_nodes=3 dc_pid=548 dc_name=DC0
	 muk.c:main:158:Starting SYSTASK thread
	 muk.c:main:163:st_pth=3076238144
	 muk.c:pth_systask:112:str_arg=systask arg1 arg2 arg3
	 muk.c:pth_systask:114:len=24 argc=4
	 muk.c:pth_systask:116:argv[0]=systask
	 muk.c:pth_systask:116:argv[1]=arg1
	 muk.c:pth_systask:116:argv[2]=arg2
	 muk.c:pth_systask:116:argv[3]=arg3
	 muk.c:pth_systask:120:my_pth=3076238144
	 muk.c:pth_systask:123:st_tid=54
	DEBUG 53:dvk_bind_X:535: cmd=0 dcid=0 pid=54 endpoint=-2 nodeid=-1
	DEBUG 53:dvk_bind_X:544: ioctl ret=-1 errno=2
	 muk.c:pth_systask:126:st_ep=-2

	PROBLEMA: QUEDA SIN HACER EL JOIN 
		
TODO: MIGRAR SYSTASK COMO THREAD
			- NO CONSIDERAR SPREAD
			
PARA MIGRAR:
	- Aquellas variables globales comunes tales como local_nodeid, dcu, dvs, etc. solo deberian ir en un muk/glo.h
		las variables globales especificas van en el glo.
	- La systask (y todas la tareas) se deberian compilar como bibliotecas de MUK 
	- reemplazar _exit() por pthread_exit(&rcode);
	- main se reemplazo por main_xxxxx
	- reemplazar TASKDEBUG_ por MUKDEBUG
	- renombre todas las funciones do_xxxxx por st_xxxxx
	- renombre todos los archivos fuentes pm_xxxx.c st_xxxx.c 
	- renombrar errores EMOLxxx x EDVSxxxx
	
EN CADA INICIALIZACION de los hilos hacer esto:

	MUKDEBUG(DVS_USR_FORMAT,DVS_USR_FIELDS(dvs_ptr));
	MUKDEBUG(DC_USR1_FORMAT,DC_USR1_FIELDS(dc_ptr));
	MUKDEBUG(DC_USR2_FORMAT,DC_USR2_FIELDS(dc_ptr));

	MUKDEBUG("Get fs_ep info\n");
	fs_proc_ptr = (proc_usr_t *) PROC_MAPPED(fs_ep);
	MUKDEBUG(PROC_USR_FORMAT,PROC_USR_FIELDS(fs_proc_ptr));
	
	/* Register into SYSTASK (as an autofork) */
	MUKDEBUG("Register FS into SYSTASK fs_pid=%d\n",fs_pid);
	fs_ep = sys_bindproc(fs_ep, fs_pid, LOCAL_BIND);
	if(fs_ep < 0) ERROR_PT_EXIT(fs_ep);
	
	// set the name of FS 
	rcode = sys_rsetpname(fs_ep, "fs", local_nodeid);
	if(rcode < 0) ERROR_PT_EXIT(rcode);
	
	

ARRANCO SYSTASK !!!!!

	root@node0:/usr/src/dvs/dvs-apps/dc_init# ps -T -p 2309
	  PID  SPID TTY          TIME CMD
	 2309  2309 pts/0    00:00:00 muk <<<<< MUK MAIN 
	 2309  2310 pts/0    00:00:00 muk <<<<< SYSTASK THREAD
	 
	 root@node0:/usr/src/dvs/dvs-apps/dc_init# cat /proc/dvs/DC0/procs 
		DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
		0  -2    -2  2310/56     0    8   20 31438 27342 27342 27342 muk <<<<< SYSTASK THREAD
		
		
=======================================================================================
20190304:
			Se migro PM, LIBTIMER, LIBMOLLIB Y LIBSYSLIB 
				
			LEVANTARON CORRECTAMENTE SYSTASK, PM Y RDISK 
			
root@node0:~# cat /proc/dvs/DC0/procs 
DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2   565/3      0    8   20 31438 27342 27342 27342 systask        
 0   0     0   568/4      0    8    0 31438 27342 27342 27342 pm             
 0   3     3   569/5      0    8    0 31438 27342 27342 27342 rdisk  
			
root@node0:~# ps -T -p 564
  PID  SPID TTY          TIME CMD
  564   564 pts/0    00:00:00 muk
  564   565 pts/0    00:00:00 muk
  564   568 pts/0    00:00:00 muk
  564   569 pts/0    00:00:00 muk

  
   
=======================================================================================
20190307:
	Arregle varios problemas. 
	EL PROBLEMA ACTUAL ES QUE HAY KILOMBO CON LA LECTURA DE LOS ARCHIVOS DE CONFIGURACION
	HAY QUE HACER QUE LA LIBRERIA SEA INDEPENDIENTE 
	EN CADA UNO DE LOS PROCESOS (RDISK, FS, NWEB) DEBEN SETEARSE LOS PARAMETROS SOLAMENTE 
	
	lib/config/configfile.c:
		config_read
			read_file
				read_list
					read_line
						read_file (usado para include)
						read_list
						read_word
	
	RDISK :
		rdisk.c
			parse_config
			
		parse_config.c	
			parse_config
				rd_cfg_ident DATA
				
		
=======================================================================================
20190309/10:
	
root@node0:/usr/src/dvs/vos/muk# cat /proc/dvs/DC0/procs 
DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2   621/3      0    8   20 31438 27342 27342 27342 systask        
 0   0     0   624/4      0    8    0 31438 27342 27342 27342 pm             
 0   1     1   628/6      0    8    0 31438 27342 27342 27342 fs             
 0   3     3   625/5      0    8    0 31438 27342 27342 27342 rdisk          
 0  14    14   630/7      0    0    0 27342 27342 27342 27342 nweb           
root@node0:/usr/src/dvs/vos/muk# netstat -nat
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State      
tcp        0      0 0.0.0.0:4803            0.0.0.0:*               LISTEN     
tcp        0      0 0.0.0.0:8080            0.0.0.0:*               LISTEN     
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     
tcp        0      0 0.0.0.0:3001            0.0.0.0:*               LISTEN     
tcp        1      0 192.168.1.100:8080      192.168.1.2:64023       CLOSE_WAIT 
tcp        0      1 192.168.1.100:33784     192.168.1.101:3000      SYN_SENT   
tcp        1      0 192.168.1.100:8080      192.168.1.2:64022       CLOSE_WAIT 
tcp        0     52 192.168.1.100:22        192.168.1.2:63988       ESTABLISHED
tcp        0      0 192.168.1.100:22        192.168.1.2:63979       ESTABLISHED
tcp        0      0 192.168.1.100:22        192.168.1.2:63978       ESTABLISHED
tcp6       0      0 :::80                   :::*                    LISTEN     
tcp6       0      0 :::22                   :::*                    LISTEN    					
	
	
LEVANTA PERO:
		HAY ERROR EN VCOPY STDERR 
			ERROR: 2:dvk_getpriv:453: rcode=-109
			ERROR: 2:dvk_vcopy:61: rcode=-1
			ERROR: stadir.c:stat_inode:218: rcode=-1
			ERROR: m3nweb.c:nweb_server:251: rcode=1
			ERROR: 2:dvk_bind_X:551: rcode=-337
			ERROR: m3nweb.c:nweb_server:175: rcode=-306
			
		EN STDOUT : WEB SERVER EN EP=14, INSTANCIA DE WEB SERVER EN EP=22
			 main.c:get_work:161:source=22 type=28 m1i1=0 m1i2=0 m1i3=0 m1p1=0xb6705000 m1p2=(nil) m1p3=(nil) 
			 main.c:get_work:162:source=22 type=28 m3i1=0 m3i2=0 m3p1=(nil) m3ca1=[]
			 main.c:get_work:184:fs_call_nr = 28 
			 filedes.c:get_filp:75:fild is=0
			DEBUG 2:dvk_vcopy:52: src_ep=1 dst_ep=22 bytes=36
			DEBUG 2:dvk_vcopy:60: ioctl ret=-1 errno=1
			 main.c:reply:400: Send a reply to a user process.
			 main.c:reply:404:source=1 type=-1 m1i1=0 m1i2=0 m1i3=0 m1p1=(nil) m1p2=(nil) m1p3=(nil) 
			DEBUG 2:dvk_send_T:345: endpoint=22 timeout=-1
			DEBUG 2:dvk_send_T:350: ioctl ret=76 errno=1
			 main.c:get_work:157: LISTENING . 

			 
			 
			 
PORQUE RDISK NO HACE CASO A LA CANTIDAD DE REQUESTS?????

RECEIVE: m_source=1, m_type=1033, DEVICE=0, IO_ENDPT=1, POSITION=11000, COUNT=27, ADDRESS:B729FE80, compress(m2_l2):0
 driver.c:driver_task:154:device_caller= 1, rd_mess.m_source= 1
 driver.c:driver_task:187:m_type: 1033 - (DEV_GATHER= 1033 ? DEV_SCATTER=1032)
 driver.c:do_vrdwt:352:nr_req: 27, NR_IOREQS=64 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 27
 driver.c:do_vrdwt:360:proc_nr: 1 - driver_ep: 3
 driver.c:do_vrdwt:361:MUK_vcopy 1->35534 bytes=512 
 driver.c:do_vrdwt:369:iovec[0].iov_addr 3073040872
 driver.c:do_vrdwt:370:iovec[0].iov_size 4096
 rdisk.c:rd_prepare:227:device = 0 (rd_device = 0)
 rdisk.c:rd_prepare:229:Prepare for I/O on a given minor device: (1B135C4;0), (1474560;0)
 driver.c:do_vrdwt:381:mp->DEVICE (RAM_DEV=0): 0
 driver.c:do_vrdwt:384:nr_req: 64				<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 64!!!! 
 rdisk.c:rd_transfer:258:rd_device: 0
 rdisk.c:rd_transfer:259:proc_nr=1 opcode=1033 nr_req=64 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 64!!!!
 utility.c:cv64ul:31:f_cv64ul: 1474560
 rdisk.c:rd_transfer:271:posit: 11000
 rdisk.c:rd_transfer:272:nr_req: 64				<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 64!!!!
 rdisk.c:rd_transfer:278:count: 4096
 
 
 
 DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2   571/3      0    8   20 31438 27342 27342 27342 systask        
 0   0     0   574/4      0    8    0 31438 27342 27342 27342 pm             
 0   1     1   577/6      0    8    0 31438 27342 27342 27342 fs             
 0   3     3   575/5      0    8    0 31438 27342 27342 27342 rdisk          
 0  14    14   580/7      0    0    0 27342 27342 27342 27342 nweb           
 0  22    22   594/8      0    0    0 27342 27342 27342 27342 muk      <<<<<<<<<<<<<<<<  ACA TA        
root@node0:/usr/src/dvs/vos/muk# cat /proc/dvs/DC0/procs 
DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2   571/3      0    8   20 31438 27342 27342 27342 systask        
 0   0     0   574/4      0    8    0 31438 27342 27342 27342 pm             
 0   1     1   577/6      0    8    0 31438 27342 27342 27342 fs             
 0   3     3   575/5      0    8    0 31438 27342 27342 27342 rdisk          
 0  14    14   580/7      0    0    0 27342 27342 27342 27342 nweb    !!!!!!!!!!! ACA NO TA
 
 
		
=======================================================================================
20190311: 
		Hice varias modificaciones el el DVK ----- OJO POR SI NO FUNCIONA !!! ----------------

			Particularmente lo relacionado a LIST_DEL_INIT reemplace por LIST_DEL 
			Ademas modifique en el FOR_EACH_........ de la busqueda de mensajes 
			el LOCK de los procesos 
			Tambien agruegue las macros de LOCK_PROC sin debug cuando hay DEBUG para
			que no contamine el dmesg cuando se hace unbind .
					LOCK_PROC se reemplaza por lock_proc 
					
			Tambien agregue DEBUG a LIST_DEL y LIST_DEL_INIT
			
=======================================================================================
20190312: 
			No bindear el NWEB main thread en MUK
			El main thread crea su hijo web_server el cual se bindea.
			El main thread recibe algo en el accept() 
			se hace el dup()
			COND_SIGNAL del hijo quien da tratamiento al cliente.
			Luego hace COND_WAIT esperando que el hijo termine.
			
			el hijo hace el bind segun el archivo de configuracion
			luego entra en loop esperando la señal del parent con COND_WAIT 
			Ahora tiene el descriptor del socket para trabajar.
			Hace todo el trabajo.
			Cierra el socket 
			Cierra el archivo de molFS.
			Registra en el archivo de log.
			hace el COND_SIGNAL para su padre 
		
=======================================================================================
20190313: 	En macros.h 
				#define DVK_VCOPY_FUNCTION
			permite seleccionar si se utiliza dvk_vcopy del kernel de M3-IPC o 
			si se utiliza memcpy directamente.
			Atención. Si las variables estan en el STACK no deberian poder copiarse
			con memcpy!!!!!
			
		TODO: Deberian reemplazarse las memcpy y dvk_copy por 
		#define MUK_vcopy(rc, sep, sad, dep, dad, b) 
		
		
rdisk.c:rd_transfer:278:count: 1024
 rdisk.c:rd_transfer:282:user_vir B7216840
 utility.c:cv64ul:31:f_cv64ul: 34137540
 rdisk.c:rd_transfer:295:DRIVER - position I/O(mem_phys) 208E9C4
 rdisk.c:rd_transfer:299:
<DEV_GATHER>
 rdisk.c:rd_transfer:305:bytes: 1024
 rdisk.c:rd_transfer:308:img_ptr=/usr/src/dvs/vos/mol/images/minixweb.img img_p=5 st_size=1474560 st_blksize=4096 localbuff=208F000 buff_size=65536 active=1 available=1
 rdisk.c:rd_transfer:312:pread: bytes=1024
 rdisk.c:rd_transfer:317:MUK_vcopy 3->1 bytes=1024 
root@node0:/usr/src/dvs/vos/muk# tail -40 muk_stdout.txt 
 rdisk.c:rd_transfer:312:pread: bytes=1024
 rdisk.c:rd_transfer:317:MUK_vcopy 3->1 bytes=1024 
DEBUG 2:dvk_vcopy:52: src_ep=3 dst_ep=1 bytes=1024
DEBUG 2:dvk_vcopy:60: ioctl ret=1024 errno=0
 rdisk.c:rd_transfer:321:DRIVER: MUK_vcopy(DRIVER -> proc_nr) rcode=1024
 rdisk.c:rd_transfer:322:bytes= 1024
 rdisk.c:rd_transfer:323:DRIVER - Offset (read) 208F000
 rdisk.c:rd_transfer:324:mem_phys: 208F000 (in DRIVER)
 rdisk.c:rd_transfer:325:user_vir: B7216840 (in proc_nr 1)
 rdisk.c:rd_transfer:420:subtotal de bytes
 rdisk.c:rd_transfer:422:subtotal de bytes tbytes=0 nr_req=1
 rdisk.c:rd_transfer:278:count: 1024
 rdisk.c:rd_transfer:282:user_vir B7216840
 utility.c:cv64ul:31:f_cv64ul: 34137540
 rdisk.c:rd_transfer:295:DRIVER - position I/O(mem_phys) 208E9C4
 rdisk.c:rd_transfer:299:
<DEV_GATHER>
 rdisk.c:rd_transfer:305:bytes: 1024
 rdisk.c:rd_transfer:308:img_ptr=/usr/src/dvs/vos/mol/images/minixweb.img img_p=5 st_size=1474560 st_blksize=4096 localbuff=208F000 buff_size=65536 active=1 available=1
 rdisk.c:rd_transfer:312:pread: bytes=1024
 rdisk.c:rd_transfer:317:MUK_vcopy 3->1 bytes=1024 
DEBUG 2:dvk_vcopy:52: src_ep=3 dst_ep=1 bytes=1024
DEBUG 2:dvk_vcopy:60: ioctl ret=1024 errno=0
 rdisk.c:rd_transfer:321:DRIVER: MUK_vcopy(DRIVER -> proc_nr) rcode=1024
 rdisk.c:rd_transfer:322:bytes= 1024
 rdisk.c:rd_transfer:323:DRIVER - Offset (read) 208F000
 rdisk.c:rd_transfer:324:mem_phys: 208F000 (in DRIVER)
 rdisk.c:rd_transfer:325:user_vir: B7216840 (in proc_nr 1)
 rdisk.c:rd_transfer:420:subtotal de bytes
 rdisk.c:rd_transfer:422:subtotal de bytes tbytes=0 nr_req=1
 rdisk.c:rd_transfer:278:count: 1024
 rdisk.c:rd_transfer:282:user_vir B7216840
 utility.c:cv64ul:31:f_cv64ul: 34137540
 rdisk.c:rd_transfer:295:DRIVER - position I/O(mem_phys) 208E9C4
 rdisk.c:rd_transfer:299:
<DEV_GATHER>
 rdisk.c:rd_transfer:305:bytes: 1024
 rdisk.c:rd_transfer:308:img_ptr=/usr/src/dvs/vos/mol/images/minixweb.img img_p=5 st_size=1474560 st_blksize=4096 localbuff=208F000 buff_size=65536 active=1 available=1
 rdisk.c:rd_transfer:312:pread: bytes=1024
 rdisk.c:rd_transfer:317:MUK_vcopy 3->1 bytes=1024 
 
 
 ERROR: RDISK:dvk_ioctl:228: rcode=1024  <<<<<<
 
=======================================================================================
20190314:
		En macros.h #define DVK_VCOPY_FUNCTION
		
				root@node0:~# cat /proc/dvs/DC0/procs 
DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2   785/3      0    8   20 31438 27342 27342 27342 systask        
 0   0     0   788/4      0    8    0 31438 27342 27342 27342 pm             
 0   1     1   791/6      0    8    0     3 27342 27342 27342 fs             
 0   3     3   790/5      0    0    0 27342 27342 27342 27342 rdisk     
		
		Deberia haber reportado enpoint 22 de nweb,  porque el child thread ya deberia haber bindeado
		
		stderr reporta
			ERROR: 2:dvk_getpriv:453: rcode=-109
			VCOPY rcode=1024

 
=======================================================================================
20190316:			
		
ERROR: 2:dvk_getpriv:453: rcode=-109
ERROR: open.c:common_open:113: rcode=-2
ERROR: m3nweb.c:nweb_server:225: rcode=-2
ERROR: m3nweb.c:nweb_server:227: rcode=0
		
PARA MONTAR LA IMAGEN
		mount -t minix -o loop /usr/src/dvs/vos/mol/images/minixweb.img /mnt		
		
root@node0:/usr/src/dvs/vos/muk# ls -l /mnt
total 684
-rw------- 1 root root    793 oct 15 10:48 debug.h
-rw------- 1 root root 103630 oct 15 10:48 index.html
-rw------- 1 root root    984 oct 15 10:48 macros.h
-rw-r--r-- 1 root root 100000 mar 16 16:27 muk.txt
-rw-r--r-- 1 root root 320742 mar 16 16:03 test.tar.gz
-rw-r--r-- 1 root root 142097 mar 16 16:04 test.zip


EL PROBLEMA PARECERIA SER QUE CUANDO  NWEB trata de leer el archivo desde MOLFS, el LOOP 
NO FINALIZA POR FIN DE ARCHIVO.

		while (  (rbytes = mol_read(file_fd, nw_out_buf, WEBMAXBUF)) > 0 ) {
			MUKDEBUG("rbytes:%d\n",rbytes);
			write(socket_fd,nw_out_buf, rbytes);
			total_bytes += rbytes;
			MUKDEBUG("total_bytes:%d\n",total_bytes);
		}
			
=======================================================================================
20190317:			
	TODOS LOS VCOPY Y MEMCOPY se cambiaron por MUK_vcopy
	Se controlaron los valores de retorno (r < 0) en lugar de (r!=OK)
	
root@node0:/usr/src/dvs/vos/muk# cat /proc/dvs/DC0/procs 
DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2   583/3      0    8   20 31438 27342 27342 27342 systask        
 0   0     0   586/4      0    8    0 31438 27342 27342 27342 pm             
 0   1     1   589/6      0    8    0 31438 27342 27342 27342 fs  <<<<<<<<<<<<<<<<<<          
 0   3     3   587/5      0    8    0 31438 27342 27342 27342 rdisk          
 0  22    22   592/7      0    0    0 27342 27342 27342 27342 muk    
 
[  129.198573] DEBUG 589:dvk_ioctl:204: cmd=4004E302 arg=B54FE290
[  129.198574] DEBUG 589:dvk_ioctl:224: DVK_CALL=2 (mini_send) 
[  129.198575] DEBUG 589:io_mini_send:24: 
[  129.198577] DEBUG 589:new_mini_send:39: dst_ep=22
[  129.198578] DEBUG 589:check_caller:536: caller_pid=589 caller_tgid=582
[  129.198580] DEBUG 589:check_caller:572: WLOCK_PROC ep=1 count=0
[  129.198581] DEBUG 589:check_caller:601: WUNLOCK_PROC ep=1 count=0
[  129.198582] DEBUG 589:check_caller:604: dcid=0
[  129.198583] DEBUG 589:check_caller:608: RLOCK_DC dc=0 count=0
[  129.198585] DEBUG 589:check_caller:612: RUNLOCK_DC dc=0 count=0
[  129.198586] DEBUG 589:check_caller:618: caller_pid=589 
[  129.198587] DEBUG 589:new_mini_send:51: RLOCK_PROC ep=1 count=0
[  129.198588] DEBUG 589:new_mini_send:55: caller_nr=1 caller_ep=1 dst_ep=22 
[  129.198590] DEBUG 589:new_mini_send:58: RUNLOCK_PROC ep=1 count=0
[  129.198591] DEBUG 589:new_mini_send:60: dcid=0
[  129.198592] DEBUG 589:new_mini_send:64: RLOCK_DC dc=0 count=0
[  129.198593] DEBUG 589:new_mini_send:67: RUNLOCK_DC dc=0 count=0
[  129.198594] DEBUG 589:new_mini_send:82: WLOCK_PROC ep=1 count=0
[  129.198596] DEBUG 589:new_mini_send:86: WLOCK_PROC ep=22 count=0
[  129.198597] DEBUG 589:new_mini_send:90: dst_nr=22 dst_ep=22
[  129.198598] DEBUG 589:new_mini_send:109: dst_ptr->p_usr.p_nodeid=0
[  129.198599] DEBUG 589:new_mini_send:113: RLOCK_DC dc=0 count=0
[  129.198601] DEBUG 589:new_mini_send:117: RUNLOCK_DC dc=0 count=0
[  129.198602] DEBUG 589:new_mini_send:132: dcid=0 caller_pid=589 caller_nr=1 dst_ep=22 
[  129.198603] DEBUG 589:new_mini_send:210: destination is waiting. Copy the message and wakeup destination
[  129.198605] DEBUG 589:copy_usr2usr:886: rqtr_ep=1 src_ep=1 src_lpid=589 src_vpid=6 src_addr=b77afe60
[  129.198607] DEBUG 589:copy_usr2usr:889: dst_ep=22 dst_lpid=592 dst_vpid=7 dst_addr=b4cfb000 bytes=76
[  129.198608] DEBUG 589:copy_usr2usr:893: task_pid_nr(current)=589
[  129.198609] DEBUG 589:copy_usr2usr:896: WRITE
[  129.198610] DEBUG 589:copy_usr2usr:901: task_pid_nr(dst_ptr->p_task)=592
[  129.198612] DEBUG 589:dvk_vm_rw:441: pid=592 liovcnt=1 riovcnt=1 flags=0 vm_write=1
[  129.198613] DEBUG 589:dvk_check_iovect:1280: type=1 nr_segs=1
[  129.198614] DEBUG 589:dvk_rw_check_kvector:862: type=1 nr_segs=1
[  129.198616] DEBUG 589:dvk_rw_check_kvector:862: type=-1 nr_segs=1
[  129.198617] DEBUG 589:dvk_vm_rw_core:277: pid=592 riovcnt=1 flags=0 vm_write=1
[  129.198618] DEBUG 589:dvk_vm_rw_core:331: i=0 rc=0
[  129.198627] DEBUG 589:dvk_vm_rw_core:349: rc=76
[  129.198628] DEBUG 589:dvk_vm_rw_core:356: rc=76
[  129.198629] DEBUG 589:copy_usr2usr:954: len=76
[  129.198631] DEBUG 589:inherit_cpu:288: cpuid=0 vpid=ld
[  129.198636] DEBUG 589:inherit_cpu:296: nr=22 endp=22 dcid=0 lpid=592 p_cpumask=FFFFFFFF nodemap=1 name=muk 
[  129.198637] DEBUG 589:new_mini_send:221: BEFORE UP lpid=592 p_sem=-1 rcode=76
[  129.198645] DEBUG 589:new_mini_send:222: WUNLOCK_PROC ep=22 count=0
[  129.198646] DEBUG 589:new_mini_send:257: WUNLOCK_PROC ep=1 count=0
[  129.198647] ERROR: 589:dvk_ioctl:228: rcode=76
[  129.198652] DEBUG 592:sleep_proc:368: endpoint=22 ret=0 p_rcode=76
[  129.198654] DEBUG 592:sleep_proc:369: endpoint=22 flags=0 cpuid=0
[  129.198655] DEBUG 592:sleep_proc:370: WLOCK_PROC ep=22 count=0
[  129.198657] DEBUG 592:sleep_proc:417: nr=22 endp=22 dcid=0 lpid=592 p_cpumask=FFFFFFFF nodemap=1 name=muk 
[  129.198658] DEBUG 592:sleep_proc:419: someone wakeups me: sem=0 p_rcode=0
[  129.198660] DEBUG 592:new_mini_sendrec:748: WUNLOCK_PROC ep=22 count=0
[  129.199411] muk[589]: segfault at 10040 ip b72d8ef1 sp b54fe2f0 error 4 in libfs.so[b72d1000+1a000]

RESPUESTA DE FS->NWEB
 main.c:main_fs:104:rcode (RESPUESTA syscall) 65536
 main.c:reply:395:Send a reply to a user process.
 main.c:reply:399:source=1 type=65536 m1i1=0 m1i2=0 m1i3=0 m1p1=(nil) m1p2=(nil) m1p3=(nil) 
DEBUG 2:dvk_send_T:345: endpoint=22 timeout=-1
DEBUG 2:dvk_sendrec_T:384: ioctl ret=0 errno=0
 m3nweb.c:nweb_server:246:rbytes:65536
 m3nweb.c:nweb_server:249:total_bytes:65636
DEBUG 2:dvk_send_T:350: ioctl ret=76 errno=0
 main.c:reply:402:rcode=0
 read.c:read_ahead:489: <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
 
	
SI SACO EL READAHEAD ANDA , PERO LENTO APARENTEMENTE!!
#ifdef READAHEAD			
			if (rdahead_inode != NIL_INODE) {
				read_ahead(); /* do block read ahead */
			}
#endif // READAHEAD		

=======================================================================================
20190317:
			ANDUVO!!!!!!

root@node0:~# cd /tmp
root@node0:/tmp#  wget -v  http://192.168.1.100:8081/index.html  -O index.html
--2019-03-18 07:29:15--  http://192.168.1.100:8081/index.html
Conectando con 192.168.1.100:8081... conectado.
PeticiÃ³n HTTP enviada, esperando respuesta... 200 OK
Longitud: 103630 (101K) [text/html]
Grabando a: âindex.htmlâ

index.html            100%[========================>] 101,20K   392KB/s    in 0,3s    

2019-03-18 07:29:16 (392 KB/s) - âindex.htmlâguardado [103630/103630]

root@node0:/tmp#  wget -v  http://192.168.1.100:8081/test.tar.gz  -O test.tar.gz
--2019-03-18 07:29:51--  http://192.168.1.100:8081/test.tar.gz
Conectando con 192.168.1.100:8081... conectado.
PeticiÃ³n HTTP enviada, esperando respuesta... 200 OK
Longitud: 320742 (313K) [image/gz]
Grabando a: âtest.tar.gzâ

test.tar.gz           100%[========================>] 313,22K  1,56MB/s    in 0,2s    

2019-03-18 07:29:51 (1,56 MB/s) - âtest.tar.gzâguardado [320742/320742]

root@node0:/tmp#  wget -v  http://192.168.1.100:8081/test.zip  -O test.zip
--2019-03-18 07:30:02--  http://192.168.1.100:8081/test.zip
Conectando con 192.168.1.100:8081... conectado.
PeticiÃ³n HTTP enviada, esperando respuesta... 200 OK
Longitud: 142097 (139K) [image/zip]
Grabando a: âtest.zipâ

test.zip              100%[========================>] 138,77K   715KB/s    in 0,2s    

2019-03-18 07:30:02 (715 KB/s) - âtest.zipâguardado [142097/142097]

root@node0:/tmp#  wget -v  http://192.168.1.100:8081/muk.txt  -O muk.txt
--2019-03-18 07:30:19--  http://192.168.1.100:8081/muk.txt
Conectando con 192.168.1.100:8081... conectado.
PeticiÃ³n HTTP enviada, esperando respuesta... 200 OK
Longitud: 100000 (98K) [text/txt]
Grabando a: âmuk.txtâ

muk.txt               100%[========================>]  97,66K  --.-KB/s    in 0,04s   

2019-03-18 07:30:19 (2,71 MB/s) - âmuk.txtâguardado [100000/100000]

VERIFICACION !!
root@node0:/tmp# mount -t minix -o loop /usr/src/dvs/vos/mol/images/minixweb.img /mnt/usbstick/
root@node0:/tmp# diff muk.txt /mnt/usbstick/muk.txt
root@node0:/tmp# diff test.tar.gz /mnt/usbstick/test.tar.gz 
root@node0:/tmp# diff test.zip /mnt/usbstick/test.zip 

	

root@node0:~# mkfs.minix -3 /usr/src/dvs/vos/muk/images/minixweb100.img

root@node0:/usr/src/dvs/dvk-tests# ls -l /usr/src/dvs/vos/muk/images
total 104428
-rw-r--r-- 1 root root   1474560 mar  3 08:14 floppy3RWX.img
-rw-r--r-- 1 root root   1474560 mar  3 08:14 imgMinix.flp
-rw-r--r-- 1 root root    103630 mar  3 08:14 index.html
-rw-r--r-- 1 root root 102400000 mar 18 08:00 minixweb100.img <<<<<<<<<<<<< 
-rw-r--r-- 1 root root   1474560 mar 18 07:32 minixweb.im

root@node0:/tmp# mount -t minix -o loop /usr/src/dvs/vos/muk/images/minixweb100.img /mnt
	
	./randomtext 512000 100 10 PAP > /mnt/file50M.txt
	./randomtext 102400 100 10 PAP > /mnt/file10M.txt
	
root@node0:/usr/src/dvs/dvk-tests# ls -l /mnt
total 60120
-rw-r--r-- 1 root root 10240000 mar 18 07:59 file10M.txt
-rw-r--r-- 1 root root 51200000 mar 18 07:59 file50M.txt
		
device MY_FILE_IMG {
	major			3;
	minor			0;
	type			FILE_IMAGE;
 	image_file 		"/usr/src/dvs/vos/muk/images/minixweb100.img"; <<<<<<<<<<<<
	buffer			4096;
	volatile		NO;
	replicated		NO;
};
	

SE INSERTO "IS" COMO NUEVO SERVER PERO NO SE COMPLETARON LAS FUNCIONES.

root@node0:~# cat /proc/dvs/DC0/procs 
DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2   671/9      0    0   20 27342 27342 27342 27342 systask        
 0   0     0   675/11     0    8    0 31438 27342 27342 27342 pm             
 0   1     1   677/12     0    8    0 31438 27342 27342 27342 fs             
 0   3     3   674/10     0    8    0 31438 27342 27342 27342 rdisk          
 0   8     8   679/13     0    8    0 31438 27342 27342 27342 is             
 0  22    22   682/14     0    0    0 27342 27342 27342 27342 nweb  
 
   CUANDO SE ENVIO UNA SIGNAL A SYSTASK DENTRO DEL NAMESPACE 
  nsenter -p -t$DC0  kill -SIGUSR1 9
		LA SALIDA DIO OK RESPONDIENDO EL IS 
		is.c:is_handler:71:signo:10
	 
	
 PROTEGER CON LOCKS CADA SERVIDOR PARA QUE NO SE UTILICEN LAS MISMAS ESTRUCTURAS DE DATOS.
 
		LOCK( XXX_MUTEX)
		While(TRUE)  
			UNLOCK( XXX_MUTEX)
			receive
			LOCK( XXX_MUTEX)

 ESTRUCTURA COMPARTIDAS
		kproc_map : PROPIETARIO SYSTASK 
		
		
=======================================================================================
20190318/9:
			SE HIZO EL DUMP DE SYSTASK, PM Y FS
						
===========================================================================
======================  dmp_sys_dc  =======================================
===========================================================================

dcid=0
flags=0
nr_procs=221
nr_tasks=34
nr_sysprocs=64
nr_nodes=32
dc_nodes=3
dc_pid=665
warn2proc=27342
warnmsg=-1
dc_name=DC0
nodes 33222222222211111111110000000000
      10987654321098765432109876543210
      ------------------------------XX
	  
===========================================================================
====================== dmp_sys_proc =======================================
===========================================================================

DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2   854/3      0    0   20 27342 27342 27342 27342 systask        
 0   0     0   858/5      0    8    0 31438 27342 27342 27342 pm             
 0   1     1   860/6      0    8    0 31438 27342 27342 27342 fs             
 0   3     3   857/4      0    8    0 31438 27342 27342 27342 rdisk          
 0   8     8   861/7      0    8    0    -2 27342 27342 27342 is             
 0  22    22   863/8      0    0    0 27342 27342 27342 27342 nweb 
 
 ===========================================================================
====================== dmp_sys_stats ======================================
===========================================================================

DC pnr -endp -lpid/vpid- nd --lsnt-- --rsnt-- -lcopy-- -rcopy-- name
 0  -2    -2   854/    3  0       19        0        0        0 systask        
 0   0     0   858/    5  0       11        0        0        0 pm             
 0   1     1   860/    6  0        6        0        0        0 fs             
 0   3     3   857/    4  0        6        0        2        0 rdisk          
 0   8     8   861/    7  0        5        0        0        0 is             
 0  22    22   863/    8  0        3        0        0        0 nweb
 
 
 ===========================================================================
======================  rd_do_dump  =======================================
===========================================================================

ifd --size-- blksize buffsize act image_name
  5  1474560    4096     4096   1 /usr/src/dvs/vos/muk/images/minixweb.img
  

  ===========================================================================
====================== dmp_pm_proc =======================================
===========================================================================

-endp- -pid- -ppid flags nice pgroup -ruid -euid -rgid -egid name
     0     0     0  3001  -10      0    -1    -1    -1    -1 pm             
     1     1     0  2001  -10     -1    -1    -1    -1    -1 fs             
     3     0     0     1    0      0    -1    -1    -1    -1 rdisk          
     8     8     0  2001  -10     -1    -1    -1    -1    -1 is             
    22    22     0  2001  -10     -1    -1    -1    -1    -1 nweb    
		
PROBLEMAS: 		
===========================================================================
====================== dmp_fs_proc =======================================
===========================================================================

-endp- -pid- -tty- -task -ruid -euid -rgid -egid name
     1     1    -1    -1     0     0     0     0 pm     <<<<<< NO COINCIDE EL ENPDOINT  NI EL PID QUE NO DEBE SER 1        
 27342    -1    -1    -1     0     0     0     0 fs             
 27342    -1    -1    -1     0     0     0     0 rdisk          
 27342    -1    -1    -1     0     0     0     0 is             
 27342    -1    -1    -1     0     0     0     0 nweb  <<<<< DEBERIAN TENER PID ASIGNADO
 

===========================================================================
====================== dmp_fs_super =======================================
===========================================================================

dev magic ninode nzones iblock zblock 1data maxsiz bzize inoblk dzones izones ver
300  4D5A    768      0      1      1    16     -1   4096     64      7   1024 3
			
ARREGLAR  
	char* get_process_name_by_pid( int pid, char *name)
	NO VA A FUNCIONAR PORQUE EL PID ES DEL NAMESPACE
	UTILIZA EL ACCESO A /proc 
		sprintf(name, "/proc/%d/cmdline",pid);
	sys_bindproc.c:get_process_name_by_pid:56:name=[/proc/6/cmdline] <<<<<<<<<<<<<<<<<<
	
=======================================================================================
20190320:
	SE INCLUYO m3ftpd ATENCION!!!!!!!!!!!!!!!!!!!!!!!!!
		Originalmente trabajaba sobre archivo LINUX 
		Pero ahora trabaja sobre archivo MOL
		
	SE INCLUYO EL SOPORTE WEB en el IS 
		Funciona de la siguiente  manera.
			Eventos:
				-> SIGNAL => DUMP de todos los reportes  por STDOUT
				-> WEB => Envia un mensaje a cada uno de  los servidores solicitando el DUMP.
			ATENCION: como el web information server trabaja con M3-IPC se tuvo que poner
					un MUTEX para M3-IPC y evitar conflictos.
			

=======================================================================================
20190321:
 
  
FTP APARECE BIEN 
root@node0:~# cat /proc/dvs/DC0/procs 
DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2   615/3      0    8   20 31438 27342 27342 27342 systask        
 0   0     0   618/5      0    8    0 31438 27342 27342 27342 pm             
 0   1     1   620/6      0    8    0 31438 27342 27342 27342 fs             
 0   3     3   617/4      0    8    0 31438 27342 27342 27342 rdisk          
 0   8     8   622/7      0    0    0 27342 27342 27342 27342 is             
 0  14    14   628/10     0    8    0 31438 27342 27342 27342 m3ftp          
 0  22    22   624/9      0    0    0 27342 27342 27342 27342 nweb 


WIS: http://192.168.1.100:8080/
	
 is.c:wis_server:313:MTX_LOCK m3ipc_mutex 
 is.c:wis_server:381:MTX_UNLOCK m3ipc_mutex 
Error: socket() system call.Error: socket() system call.
 
 ERROR: is.c:main_wis:409: rcode=-9
 
 
 muk.c:pth_is:327:rcode=8
 is.c:main_is:125:IS: Starting...
 is.c:init_is:442:
 is.c:init_is:444:d_nr_dcs=32 d_nr_nodes=32 d_nr_procs=221 d_nr_tasks=35 d_nr_sysprocs=64 
 is.c:init_is:445:dc_dcid=0 dc_nr_procs=221 dc_nr_tasks=34 dc_nr_sysprocs=64 dc_nr_nodes=32
 is.c:init_is:446:flags=0 dc_nodes=3 dc_pid=554 dc_name=DC0
 is.c:init_is:448:Get IS_PROC_NR info
 is.c:init_is:450:nr=8 endp=8 dcid=0 flags=0 misc=0 lpid=578 vpid=7 nodeid=0 name=cmdline 
 is.c:init_is:453:Register IS into SYSTASK(local_nodeid) is_pid=7
 sys_bindproc.c:sys_rbindproc:26:SYS_BINDPROC request to SYSTASK(local_nodeid)(0) sysproc_ep=8 lpid=7 oper=1
 sys_bindproc.c:get_process_name_by_pid:56:name=[/proc/7/cmdline]
DEBUG 2:dvk_sendrec_T:379: endpoint=-2 timeout=-1
DEBUG 2:dvk_send_T:350: ioctl ret=76 errno=0
 system.c:main_systask:64:SYSTASK is waiting for requests
DEBUG 2:dvk_receive_T:362: endpoint=31438 timeout=-1
DEBUG 2:dvk_receive_T:367: ioctl ret=76 errno=0
 system.c:main_systask:68:dvk_receive rcode=0
 system.c:main_systask:76:RECEIVE msg:source=8 type=1568 m4l1=7 m4l2=8 m4l3=1 m4l4=1818520931 m4l5=6647401
 system.c:main_systask:85:call_nr=32 sys_who_e=8
 system.c:main_systask:90:Calling vector 32
 st_bindproc.c:st_bindproc:53:source=8 type=1568 m3i1=7 m3i2=8 m3p1=0x1 m3ca1=[cmdline]
 st_bindproc.c:st_bindproc:59:sysproc_lpid=7, sysproc_ep=8 sysproc_nr=8 sysproc_oper=1 
 st_bindproc.c:st_bindproc:74:nr=8 endp=8 dcid=0 flags=8 misc=0 lpid=578 vpid=7 nodeid=0 name=cmdline 
 st_bindproc.c:st_bindproc:144:nr=8 endp=8 dcid=0 flags=8 misc=0 lpid=578 vpid=7 nodeid=0 name=cmdline 
 st_bindproc.c:st_bindproc:152:nr=8 endp=8 dcid=0 flags=8 misc=0 lpid=578 vpid=7 nodeid=0 name=cmdline 
DEBUG 2:dvk_getpriv:447: dcid=0 endpoint=8 
DEBUG 2:dvk_getpriv:452: ioctl ret=0 errno=0
 st_bindproc.c:st_bindproc:159:priv_id=42 priv_warn=27342 priv_level=0 trap=0 call=0
 system.c:main_systask:101:REPLY msg:source=8 type=0 m1i1=8 m1i2=1 m1i3=1 m1p1=0x6c646d63 m1p2=0x656e69 m1p3=(nil) 
DEBUG 2:dvk_send_T:345: endpoint=8 timeout=-1
DEBUG 2:dvk_sendrec_T:384: ioctl ret=0 errno=0
 sys_bindproc.c:sys_rbindproc:39:endpoint=8
 sys_setpname.c:sys_rsetpname:16:Sending SYS_SETPNAME request to SYSTASK(local_nodeid) p_ep=8 p_name=is
DEBUG 2:dvk_sendrec_T:379: endpoint=-2 timeout=-1
DEBUG 2:dvk_send_T:350: ioctl ret=76 errno=0
 system.c:main_systask:64:SYSTASK is waiting for requests
DEBUG 2:dvk_receive_T:362: endpoint=31438 timeout=-1
DEBUG 2:dvk_receive_T:367: ioctl ret=76 errno=0
 system.c:main_systask:68:dvk_receive rcode=0
 system.c:main_systask:76:RECEIVE msg:source=8 type=1571 m4l1=8 m4l2=8 m4l3=1 m4l4=29545 m4l5=0
 system.c:main_systask:85:call_nr=35 sys_who_e=8
 system.c:main_systask:90:Calling vector 35
 st_bindproc.c:st_setpname:179:source=8 type=1571 m3i1=8 m3i2=8 m3p1=0x1 m3ca1=[is]
 st_bindproc.c:st_setpname:193:nr=8 endp=8 dcid=0 flags=8 misc=0 lpid=578 vpid=7 nodeid=0 name=cmdline 
 system.c:main_systask:101:REPLY msg:source=8 type=0 m1i1=8 m1i2=8 m1i3=1 m1p1=0x7369 m1p2=(nil) m1p3=(nil) 
DEBUG 2:dvk_send_T:345: endpoint=8 timeout=-1
DEBUG 2:dvk_sendrec_T:384: ioctl ret=0 errno=0
 is.c:init_is:463:wis_pth=3025128256
 is.c:main_is:131:MTX_LOCK muk_mutex 
 is.c:main_is:132:COND_SIGNAL muk_cond
 is.c:main_is:133:COND_WAIT is_cond muk_mutex
 muk.c:main:519:COND_SIGNAL is_cond
 muk.c:main:520:MTX_UNLOCK muk_mutex 
 is.c:main_is:134:MTX_UNLOCK muk_mutex 
 is.c:main_is:136:IS(0) main loop that gets work
 is.c:main_is:141:MTX_LOCK wis_mutex 
 is.c:main_is:142:COND_WAIT wis_cond wis_mutex
DEBUG 2:dvk_send_T:350: ioctl ret=76 errno=0
 system.c:main_systask:64:SYSTASK is waiting for requests
DEBUG 2:dvk_receive_T:362: endpoint=31438 timeout=-1
 is.c:main_wis:394:WIS service starting. 
 muk.c:main:526:Starting NW thread--------------------------------------
  
   
 
 EL SENDREC DESDE UN THREAD QUE NO ESTA BINDEADO DA ERROR EDVSNOTREADY
 DEBUG 5:dvk_sendrec_T:379: endpoint=-2 timeout=-1
 DEBUG 5:dvk_sendrec_T:384: ioctl ret=-1 errno=106
 
[ 5263.379540] DEBUG 807:dvk_ioctl:204: cmd=4004E305 arg=B44FC2A0
[ 5263.379545] DEBUG 807:dvk_ioctl:224: DVK_CALL=5 (mini_sendrec) 
[ 5263.379546] DEBUG 807:io_mini_sendrec:56: 
[ 5263.379549] DEBUG 807:new_mini_sendrec:507: srcdst_ep=-2
[ 5263.379551] DEBUG 807:check_caller:536: caller_pid=807 caller_tgid=797
[ 5263.379553] DEBUG 807:check_caller:556: RLOCK_TASK pid=797 count=1
[ 5263.379554] DEBUG 807:check_caller:564: RUNLOCK_TASK pid=797 count=1
[ 5263.379556] DEBUG 807:check_caller:572: WLOCK_PROC ep=-2 count=0
[ 5263.379560] DEBUG 807:check_caller:596: nr=-2 endp=-2 dcid=0 flags=8 misc=20 lpid=798 vpid=6 nodeid=0 name=systask 
[ 5263.379561] DEBUG 807:check_caller:597: WUNLOCK_PROC ep=-2 count=0
[ 5263.379562] ERROR: 807:check_caller:597: rcode=-106
[ 5263.379563] ERROR: 807:new_mini_sendrec:511: rcode=-106
[ 5263.379564] ERROR: 807:dvk_ioctl:228: rcode=-106
	
=======================================================================================
20190322:
		WEB SYS_DC_DUMP funciona pero el siguiente click en otro no imprime 


=======================================================================================
20190324:
	TODO: Poner los flags con su significado en lugar de numeros		
		
		ESTOS FUNCIONAN 
		Function using to dump MUK information.
		sys_dc_dmp (F1)	
		sys_proc_dmp (F2)	
		sys_stats_dmp (F3)	
		rd_dev_dmp (F5)
		pm_proc_dmp (F6)

		[  110.644309] muk[581]: segfault at 1 ip b722ad03 sp b53fe2b0 error 4 in libfs.so[b7215000+1c000]

=======================================================================================
20190325: FUNCIONARON CORRECTAMENTE TANTO LOS DUMPS DE TEXTO COMO DE HTML !!!
20190326:		AHORA FUNCIONA TODO 

===========================================================================
====================== dmp_fs_proc =======================================
===========================================================================

-endp- -pid- -tty- -task -ruid -euid -rgid -egid name
     0     0    -1    -1     0     0     0     0 pm             
     1     1    -1    -1     0     0     0     0 fs             
     3     0    -1    -1     0     0     0     0 rdisk          
     8     8    -1    -1     0     0     0     0 is             
    14    14    -1    -1     0     0     0     0 m3ftp          
    22    22    -1    -1     0     0     0     0 nweb    
		
=======================================================================================
20190325:
	Se convirtieron los numeros en los flags y miscelanous en letras de estado.
    Se aclarar en la pagina que significa cada letra.
	Se agrego la miscelanea MIS_UNIKERNEL que indica q el proceso se ejecuta dentro de UNIKERNEL
	   
	Se incorporo un archivo de configuracion para MUK que permite setear los endpoints de cada thread
		# this is a comment 
		muk SERVER1 {
			dcid		0;
			pm_ep		0;
			fs_ep		1;
			is_ep		8;
			rd_ep		3;
			nweb_ep		22;
			ftp_ep		14;
		};
	Con la excepcion de SYSTASK que toma el valor de acuerdo al nodeid.
	
		Por lo tanto ahora se arranca MUK 
	root@node0:/usr/src/dvs/vos/muk# nsenter -p -t$DC0 ./muk muk.cfg > muk_stdout.txt 2> muk_stderr.txt 


=======================================================================================
20190331:		NUEVO FORMATO DE MUK.CFG 

# this is a comment 
muk SERVER1 {
	dcid		0;
	pm_ep		0;
	fs_ep		1;
	is_ep		8;
	rd_ep		3;
	nweb_ep		22;
	ftp_ep		14;
	fs_cfg		"molfs.cfg";
	rd_cfg		"rdisk.cfg";
	web_cfg		"m3nweb.cfg";
	ftp_cfg 	"m3ftp.cfg";
};

=======================================================================================
20190401:
	Se dieron nombres a los endpoints de la impresion de sys_dmp.c 
	
DC pnr -endp -lpid/vpid- nd ------flag------ ----misc--- -getf -sndt -wmig -prxy name
 0  -2    -2   584/3      0 ---------------- -----L----U -NONE -NONE -NONE -NONE systask        
 0   0     0   586/5      0 --R------------- ----------U -ANY- -NONE -NONE -NONE pm             
 0   1     1   587/6      0 --R------------- ----------U -ANY- -NONE -NONE -NONE fs             
 0   3     3   585/4      0 --R------------- ----------U -ANY- -NONE -NONE -NONE rdisk          
 0   8     8   589/7      0 --R------------- ----------U systa -NONE -NONE -NONE is             
 0  14    14   592/10     0 --R------------- ----------U -ANY- -NONE -NONE -NONE m3ftp          
 0  22    22   591/9      0 ---------------- ----------U -NONE -NONE -NONE -NONE nwe	
	
	
=======================================================================================
20190410:
		Se realizo la prueba de RDISK externo y MUK completo (sin rdisk)

		DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
		 0  -2    -2   618/10     0    8  420 31438 27342 27342 27342 systask        
		 0   0     0   619/11     0    8  400 31438 27342 27342 27342 pm             
		 0   1     1   620/12     0    8  400 31438 27342 27342 27342 fs             
		 0   3     3   609/4      0    8   20 31438 27342 27342 27342 rdisk   <<<<<<<<       
		 0   8     8   622/13     0    0  400 27342 27342 27342 27342 is             
		 0  14    14   625/16     0    8  400 31438 27342 27342 27342 m3ftp          
		 0  22    22   624/15     0    0  400 27342 27342 27342 27342 nweb
 
		Se corrigieron errores en mol/rdisk !!!!!!!, relacionados con el valor de retorno de dvk_vcopy()
		se hicieron modificaciones en servers tambien por lo mismo
		Se incluyo soporte de .mht en el webserver 


=======================================================================================
20190410:		
		Probar RDISK REMOTO 
		- Levantar RADAR en NODE0
		- Levantar RDISK en NODE1
		- Levantar MUK en NODE0 
OJO!!! 
Cambie el archivo de configuracion/script rdisk.sh de mol/drivers/rdisk  para que no soporte replicacion

		- Cree el comando test_rmtbind 
		- modifique rdisk.sh para que haga el RMTBIND del FS.
		
EN NODE1: RDISK 
	root@node1:~# cd /usr/src/dvs/scripts/
	root@node1:/usr/src/dvs/scripts# ./rdisk.sh 1 0
	root@node1:/usr/src/dvs/scripts# . /usr/src/dvs/dvs-apps/dc_init/DC0.sh 
	root@node1:/usr/src/dvs/scripts# cd /usr/src/dvs/vos/mol/drivers/rdisk/ 
	root@node1:/usr/src/dvs/vos/mol/drivers/rdisk# nsenter -p -u -F -t$DC0 ./rdisk.sh 0
	DEBUG 2:dvk_open:40: Open dvk device file /dev/dvk
	 dvk_rmtbind fs0 with p_nr=1 to DC0 on node=0
	DEBUG 2:dvk_bind_X:535: cmd=2 dcid=0 pid=-1078346190 endpoint=1 nodeid=0
	DEBUG 2:dvk_bind_X:544: ioctl ret=1 errno=0
	================= building /tmp/rdisk0.cfg ====================
	device MY_FILE_IMG {
			major                   3;
			minor                   0;
			type                    FILE_IMAGE;
			image_file              "/usr/src/dvs/vos/mol/images/minixweb.img";
			volatile                NO;
			replicated              YES;
	  buffer                        4096;
	};
	Enter para continuar... 
	RDISK Enter para continuar... 
	./rdisk -rdDec /tmp/rdisk0.cfg > rdisk1.txt 2> rdisk_err1.txt
	DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
	 0   1     1    -1/-1     0 1000    0 27342 27342 27342 27342 fs0            
	 0   3     3   618/5      1    8   A0 31438 27342 27342 27342 rdisk          
		
EN NODE0: MUK
	root@node0:~# cd /usr/src/dvs/scripts/
	root@node0:/usr/src/dvs/scripts# ./rdisk.sh 0 0
	root@node0:/usr/src/dvs/scripts# cd ../dvs-apps/dc_init/ 
	root@node0:/usr/src/dvs/dvs-apps/dc_init# . ./DC0.sh 
	root@node0:/usr/src/dvs/dvs-apps/dc_init# cd ..
	root@node0:/usr/src/dvs/dvs-apps# cd radar/
	root@node0:/usr/src/dvs/dvs-apps/radar# ./radar radar.cfg &
	[1] 630
	root@node0:/usr/src/dvs/dvs-apps/radar# cat /proc/dvs/DC0/procs 
	DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
	 0   3     3    -1/-1     1 1000    0 27342 27342 27342 27342 RDISK0         
	root@node0:/usr/src/dvs/dvs-apps/radar# cd ..
	root@node0:/usr/src/dvs/dvs-apps# cd ..
	root@node0:/usr/src/dvs# cd vos/muk/
	root@node0:/usr/src/dvs/vos/muk# nsenter -p -t$DC0 ./muk muk.cfg > muk_stdout.txt 2> muk_stderr.txt &
	[2] 645
	root@node0:/usr/src/dvs/vos/muk# cat /proc/dvs/DC0/procs 
	DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
	 0  -2    -2   647/3      0    8  420 31438 27342 27342 27342 systask        
	 0   0     0   649/4      0    8  400 31438 27342 27342 27342 pm             
	 0   1     1   650/5      0    8  400 31438 27342 27342 27342 fs             
	 0   3     3    -1/-1     1 1000    0 27342 27342 27342 27342 RDISK0         
	 0   8     8   651/6      0    0  400 27342 27342 27342 27342 is             
	 0  14    14   654/9      0    8  400 31438 27342 27342 27342 m3ftp          
	 0  22    22   653/8      0    0  400 27342 27342 27342 27342 nweb           
			
		
		        		
=======================================================================================
=======================================================================================
=======================================================================================
OJO!!! 
Cambie el archivo de configuracion/script rdisk.sh de mol/drivers/rdisk  para que no soporte replicacion

PARA BENCHMARKS:
        - RAW_PROXY: BATCH, COMPRESS, AUTOBIND
		- TIPC_PROXY: BATCH, COMPRESS, AUTOBIND
		- SUPRIMIR DEBUGS
		- CREAR IMAGEN CON ARCHIVOS GRANDES 
		- HACER SECUENCIA DE EJECUCION DE SCRIPTS
		- GENERAR PENDRIVE USB X 2
		

PROBLEMA:
		Funciona, pero luego se cae despues de visitar la pagina web .

		
ERROR:
		1- EN ALGUN MOMENTO WIS SE CUELGA 
		2- NO HAY FORMA DE PONER EL TEXTO JUSTIFICADO "LEFT"
		3- EN ALGUN MOMENTO WEBSERVER SE CUELGA 
		

PARA PAPER:
		PRUEBAS DE RENDIMIENTO
			- RDISK INTERNO
			- RDISK FUERA DE MUK
			- RDISK REMOTO
			
journalctl -xb 		
systemctl reboot 


  
		








