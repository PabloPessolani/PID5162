/home/MoL_Module/mol-ipc/lib/syslib/sys_bindproc.c --> estos debugs no los anulé ](debería conmetar en lib debug.h)

SINCRONIZACIÓN DE VOLÚMENES
=============================
1.	Sincronización SIN Actualización dinámica:

1.1.	Método FULL_UPDATE

Escenario:

1.1.1.	NODO 0: Primario; NODO 1: Backup; NODO 0: Cliente

./rdisk -r<replicate> -[f<full_update>|d<diff_updates>] -D<dyn_updates> -z<compress> -c <config file>

NODO 0:
root@node0:/home/MoL_Module/mol-ipc#./rdisk.sh 0
(en el script: /rdisk -rfc rdisk3.cfg > rdisk$lcl.txt 2> rdisk_err$lcl.txt &)

NODO 1:
root@node1:/home/MoL_Module/mol-ipc#./rdisk.sh 1
(idem anterior)


1.1.2. Imágenes de disco en RAMDISK de Linux:

	1.1.2.1 Size:	- 1,44 MB
			- 1GB (por el momento no, por tiempo)
	
	1.1.2.2 Archivo de configuración: 1 imagen

	1.1.2.3 Datos:	- imágenes exactamente iguales
			
			Imágenes en: /home/MoL_Module/mol-ipc/tasks/rdisk/images#	

			Archivo de configuración: root@node0:/home/MoL_Module/mol-ipc/rdisk3.cfg
			(editar el archivo con las imágenes a utilizar)
			
			Ejemplo de operación:
			Buffer: 61440 (.cfg)
			rdisk.c:main:235:block size=4096[bytes] 4096	
			mastercopy.c:dev_transfer:336:Buffer - Transfer block: 32768 (para 1,44 mb)
mastercopy.c:dev_transfer:336:Buffer - Transfer block: 32768 (para 1 GB)	
			//-------------------------------------------------------(slavecopy.c) 
// Obtiene el tamaño máximo del bloque de-----------------  
// transferencia que es múltiplo de bloque de dispositivo
// y es MCD del tamaño de dispositivo------------------------
//------------------------------------------------------------------------	

Transfer method: FULL UPDATE
Started: 118/05/17 - 09:20:16
Total blocks transfered: 45 - Dev: 0
Blocks matched: 0 - Dev: 0
Blocks dynamic updates: 0 - Dev: 0
Total bytes Dev=0 : 1474560
Size of transfer: 1474560

			- imágenes totalmente diferentes

			- imágenes con: 10% - 50% - 75% de sus bloques diferentes
			(Modificarlas con:
/home/MoL_Module/mol-ipc/tasks/rdisk/rdisktests#./bk_write <file_image> <nro/tot_bk> <init_block>

/home/MoL_Module/mol-ipc/tasks/rdisk/rdisktests#./bk_write floppy.img 10 35



1.1.3. Cliente:	-sin petición de acción
		-con petición de acción

1.2.	Método DIFF_UPDATE

Escenario:

1.1.1.	NODO 0: Primario; NODO 1: Backup; NODO 0: Cliente

./rdisk -r<replicate> -[f<full_update>|d<diff_updates>] -D<dyn_updates> -z<compress> -c <config file>

NODO 0:
root@node0:/home/MoL_Module/mol-ipc#./rdisk.sh 0
(en el script: /rdisk -rdc rdisk3.cfg > rdisk$lcl.txt 2> rdisk_err$lcl.txt &)

NODO 1:
root@node1:/home/MoL_Module/mol-ipc#./rdisk.sh 1
(idem anterior)
1.1.2. Imágenes de disco en RAMDISK de Linux:

	1.1.2.1 Size:	- 1,44 MB
			- 1GB
	
	1.1.2.2 Archivo de configuración: 1 imagen

	1.1.2.3 Datos:	- imágenes exactamente iguales
			
			- imágenes totalmente diferentes

			- imágenes con: 10% - 50% - 75% de sus bloques diferentes
			
1.1.3. Cliente:	
		-sin petición de acción
		-con petición de acción

		NODO 0:
		/home/MoL_Module/mol-ipc/commands/demonize 
		./demonize -l 0 0 27 0 "/home/MoL_Module/mol-ipc/tasks/rdisk/rdisktests/01_test_devopen 0" > 01_test_devopen.txt 2> 01_test_devopenerr.txt

		./demonize -l 0 0 26 0 "/home/MoL_Module/mol-ipc/tasks/rdisk/rdisktests/02_test_devwrite 54000 5000 0" > 02_test_devwrite.txt 2> 02_test_deveriteerr.txt







2.	Sincronización CON Actualización dinámica:

2.1.	Método FULL_UPDATE

Escenario:

1.1.1.	NODO 0: Primario; NODO 1: Backup; NODO 0: Cliente

./rdisk -r<replicate> -[f<full_update>|d<diff_updates>] -D<dyn_updates> -z<compress> -c <config file>

(nodo 0 /1)
/rdisk -rfDc rdisk3.cfg > rdisk$lcl.txt 2> rdisk_err$lcl.txt &


1.1.2. Imágenes de disco en RAMDISK de Linux:

	1.1.2.1 Size:	- 1,44 MB
			- 1GB
	
	1.1.2.2 Archivo de configuración: 1 imagen

	1.1.2.3 Datos:	- imágenes exactamente iguales

			- imágenes totalmente diferentes

			- imágenes con: 10% - 50% - 75% de sus bloques diferentes
			
1.1.3. Cliente:	
		-sin petición de acción
		-con petición de acción

2.2.	Método DIFF_UPDATE

Escenario:

1.1.1.	NODO 0: Primario; NODO 1: Backup; NODO 0: Cliente

./rdisk -r<replicate> -[f<full_update>|d<diff_updates>] -D<dyn_updates> -z<compress> -c <config file>

(nodo 0 /1)
/rdisk -rdDc rdisk3.cfg > rdisk$lcl.txt 2> rdisk_err$lcl.txt &



1.1.2. Imágenes de disco en RAMDISK de Linux:

	1.1.2.1 Size:	- 1,44 MB
				
	1.1.2.2 Archivo de configuración: 1 imagen

	1.1.2.3 Datos:	- imágenes exactamente iguales
			
			- imágenes totalmente diferentes

			- imágenes con: 10% - 50% - 75% de sus bloques diferentes
			
1.1.3. Cliente:	-sin petición de acción
		-con petición de acción


PARA VER
=========
1) NODO 0: Primario; NODO 1: Backup; NODO 2: Cliente (no llegamos a hacer con tres nodos por la forma de que el nuevo proceso debe tomar su endpoint siempre usamos dos nodos)

2) Pruebas sólo con 1 archivo imagen

3) Si bien las imágenes fueron generadas desde Linux forzando tamaños de bloques distintos al hacer el mkfs; siempre toma bloques de 4KB; lo que hace q el tamaño de bloque de transferencia siempre sea el mismo

4) Nodo no replicado:

./rdisk -r<replicate> -[f<full_update>|d<diff_updates>] -D<dyn_updates> -z<compress> -c <config file>

(nodo 0)
/rdisk -c rdisk3.cfg > rdisk$lcl.txt 2> rdisk_err$lcl.txt &
