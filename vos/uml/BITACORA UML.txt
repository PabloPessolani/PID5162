AJE EL .CONFIG DE 
https://uml.devloop.org.uk/kernels.html
Y UN FS ROOT DEBIAN
http://fs.devloop.org.uk/

hice 
make menuconfig 
seleccione algunas cosas diferentes

luego para compilar 
make ARCH=um mrproper
make ARCH=um defconfig
make ARCH=um menuconfig
make ARCH=um

Deja el ejecutable en /usr/src/linux archivo "linux"

http://user-mode-linux.sourceforge.net/
http://uml.devloop.org.uk/index.html
http://fs.devloop.org.uk/ FILESYSTEMS 
http://uml.devloop.org.uk/kernels.html

BITACORA UML EN DVS 

cd /usr/src/dvs/vos/uml 
mount /dev/sdc8 uml1
entonces en  /1 
copio el "linux"
y el filesystem Debian

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
NO PUDE USAR NI LOS KERNELS NI LOS ROOTFS DE LAS PAGINAS DE UML 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

TUVE MUCHOS INCONVENIENTES PERO PUDE BOOTEAR CON (tanto de CONSOLA HOST como desde SSH ) 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6   mem=1024M 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 
En mi caso, /dev/sdc5, /dev/sdc6 y /dev/sdc7 es un Debian pristino instalado directamente desde la red

root@node0:/# mount /dev/sdc5 /mnt
root@node0:/# ls /mnt
bin   DC0ROOT.txt  etc   lib    mnt  proc  run   srv  tmp  var
boot  dev          home  media  opt  root  sbin  sys  usr
root@node0:/# umount  /mnt
root@node0:/# mount /dev/sdc6 /mnt
root@node0:/# ls /mnt
bin   DC1ROOT.txt  etc   lib    mnt  proc  run   srv  tmp  var
boot  dev          home  media  opt  root  sbin  sys  usr
root@node0:/# umount  /mnt
root@node0:/# mount /dev/sdc7 /mnt
root@node0:/# ls /mnt
bin   DC2ROOT.txt  etc   lib         media  opt   root  sbin  sys  usr
boot  dev          home  lost+found  mnt    proc  run   srv   tmp  var
root@node0:/# umount  /mnt

root@node0:/usr/src/dvs/vos/uml/uml1# fdisk -l /dev/sdc
Disco /dev/sdc: 20 GiB, 21474836480 bytes, 41943040 sectores
Unidades: sectores de 1 * 512 = 512 bytes
TamaÃ±o de sector (lÃ³gico/fÃ­sico): 512 bytes / 512 bytes
TamaÃ±o de E/S (mÃ­nimo/Ã³ptimo): 512 bytes / 512 bytes
Tipo de etiqueta de disco: dos
Identificador del disco: 0x79c16f1c

Disposit.  Inicio Comienzo    Final Sectores TamaÃ±o Id Tipo
/dev/sdc1             2048 41943039 41940992    20G  5 Extendida
/dev/sdc5             4096  2101247  2097152     1G 83 Linux  <<<< DEBIAN 
/dev/sdc6          2103296  4200447  2097152     1G 83 Linux <<<< DEBIAN 
/dev/sdc7          4202496  6299647  2097152     1G 83 Linux <<<< DEBIAN 
/dev/sdc8          6301696 41943039 35641344    17G 83 Linux <<<< El actual directorio de UML 

root@node0:/usr/src/dvs/vos/uml/uml1# mount | grep uml
/dev/sdc8 on /usr/src/dvs/vos/uml/uml1 type ext3 (rw,relatime,data=ordered)
ATENCION: No montar esto en forma permanente para que no quede en las imagenes BOOTCD 
MONTAR A MANO
root@node0:/# cd /usr/src/dvs/vos/uml/uml1/
root@node0:/usr/src/dvs/vos/uml# mount /dev/sdc8 uml1 


Si hay problemas con la password de root hacer:
root@node0:/# mount /dev/sdc5 /mnt
root@node0:/# cd /mnt
root@node0:/mnt# chroot .
root@node0:/mnt# passwd 
root@node0:/mnt# exit 
root@node0:/# umount  /mnt

Si fuese un archivo de imagen 
root@node0:/# mount -o loop  <archivo de imagen> /mnt
root@node0:/# cd /mnt
root@node0:/mnt# chroot .
root@node0:/mnt# passwd      <<<<<<<< AQUI CAMBIA LA PASSWORD 
root@node0:/mnt# exit 
root@node0:/# umount  /mnt

Cambiandole la password a la imagen de DEBIAN JESSIE pude bootear incluso desde SSH 
	* kernel32-4.3.5
	 * Debian-Jessie-x86-root_fs
root@node0:~# cd /usr/src/dvs/vos/uml/uml1/
root@node0:/usr/src/dvs/vos/uml/uml1# ./kernel32-4.3.5 con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=Debian-Jessie-x86-root_fs  mem=1024M 
Locating the bottom of the address space ... 0x0
Locating the top of the address space ... 0xc0000000
Core dump limits :
        soft - 0
        hard - NONE
Checking that ptrace can change system call numbers...OK
Checking syscall emulation patch for ptrace...OK
Checking advanced syscall emulation patch for ptrace...OK
Checking environment variables for a tempdir...none found
Checking if /dev/shm is on tmpfs...OK
Checking PROT_EXEC mmap in /dev/shm...OK
Adding 16322560 bytes to physical memory to account for exec-shield gap
[    0.000000] Initializing cgroup subsys cpuset
[    0.000000] Initializing cgroup subsys cpu
[    0.000000] Initializing cgroup subsys cpuacct
[    0.000000] Linux version 4.3.5 (root@virtual.nagafix.co.uk) (gcc version 4.9.3 (Gentoo 4.9.3 p1.2, pie-0.6.3) ) #4 Mon Feb 1 00:26:30 Local time zone must be set--see zic manua
[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 264049
[    0.000000] Kernel command line: con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=Debian-Jessie-x86-root_fs mem=1024M root=98:0
[    0.000000] PID hash table entries: 4096 (order: 2, 16384 bytes)
[    0.000000] Dentry cache hash table entries: 262144 (order: 8, 1048576 bytes)
[    0.000000] Inode-cache hash table entries: 131072 (order: 7, 524288 bytes)
[    0.000000] Memory: 1029596K/1064516K available (5556K kernel code, 345K rwdata, 2648K rodata, 139K init, 332K bss, 34920K reserved, 0K cma-reserved)
[    0.000000] SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=1, Nodes=1
[    0.000000] NR_IRQS:15
[    0.000000] clocksource: itimer: mask: 0xffffffffffffffff max_cycles: 0x1d854df40, max_idle_ns: 3526361616960 ns
[    0.040000] Calibrating delay loop... 1469.64 BogoMIPS (lpj=7348224)
[    0.040000] pid_max: default: 32768 minimum: 301
[    0.040000] Security Framework initialized
[    0.040000] SELinux:  Initializing.
[    0.040000] AppArmor: AppArmor disabled by boot time parameter
[    0.040000] Mount-cache hash table entries: 4096 (order: 2, 16384 bytes)
[    0.040000] Mountpoint-cache hash table entries: 4096 (order: 2, 16384 bytes)
[    0.040000] Initializing cgroup subsys io
[    0.040000] Initializing cgroup subsys devices
[    0.040000] Initializing cgroup subsys freezer
[    0.040000] Initializing cgroup subsys net_cls
[    0.040000] Checking for host processor cmov support...Yes
[    0.040000] Checking that host ptys support output SIGIO...Yes
[    0.040000] Checking that host ptys support SIGIO on close...No, enabling workaround
[    0.040000] devtmpfs: initialized
[    0.040000] Using 2.6 host AIO
[    0.040000] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns
[    0.040000] xor: measuring software checksum speed
[    0.140000]    8regs     :  3063.600 MB/sec
[    0.240000]    8regs_prefetch:  3154.400 MB/sec
[    0.340000]    32regs    :  2340.400 MB/sec
[    0.440000]    32regs_prefetch:  1859.200 MB/sec
[    0.440000] xor: using function: 8regs_prefetch (3154.400 MB/sec)
[    0.440000] NET: Registered protocol family 16
[    0.610000] raid6: int32x1  gen()   717 MB/s
[    0.780000] raid6: int32x1  xor()   488 MB/s
[    0.950000] raid6: int32x2  gen()   847 MB/s
[    1.120000] raid6: int32x2  xor()   519 MB/s
[    1.290000] raid6: int32x4  gen()   825 MB/s
[    1.460000] raid6: int32x4  xor()   539 MB/s
[    1.630000] raid6: int32x8  gen()   746 MB/s
[    1.800000] raid6: int32x8  xor()   475 MB/s
[    1.800000] raid6: using algorithm int32x2 gen() 847 MB/s
[    1.800000] raid6: .... xor() 519 MB/s, rmw enabled
[    1.800000] raid6: using intx1 recovery algorithm
[    1.800000] NetLabel: Initializing
[    1.800000] NetLabel:  domain hash size = 128
[    1.800000] NetLabel:  protocols = UNLABELED CIPSOv4
[    1.800000] NetLabel:  unlabeled traffic allowed by default
[    1.800000] clocksource: Switched to clocksource itimer
[    1.800000] FS-Cache: Loaded
[    1.800000] CacheFiles: Loaded
[    1.800000] NET: Registered protocol family 2
[    1.800000] TCP established hash table entries: 16384 (order: 4, 65536 bytes)
[    1.800000] TCP bind hash table entries: 16384 (order: 4, 65536 bytes)
[    1.800000] TCP: Hash tables configured (established 16384 bind 16384)
[    1.800000] UDP hash table entries: 1024 (order: 2, 16384 bytes)
[    1.800000] UDP-Lite hash table entries: 1024 (order: 2, 16384 bytes)
[    1.800000] NET: Registered protocol family 1
[    1.800000] RPC: Registered named UNIX socket transport module.
[    1.800000] RPC: Registered udp transport module.
[    1.800000] RPC: Registered tcp transport module.
[    1.800000] RPC: Registered tcp NFSv4.1 backchannel transport module.
[    1.800000] console [stderr0] disabled
[    1.800000] mconsole (version 2) initialized on /root/.uml/oNgXFf/mconsole
[    1.800000] Checking host MADV_REMOVE support...OK
[    1.800000] UML Watchdog Timer
[    1.800000] Host TLS support detected
[    1.800000] Detected host type: i386 (GDT indexes 6 to 9)
[    1.800000] futex hash table entries: 256 (order: -1, 3072 bytes)
[    1.800000] audit: initializing netlink subsys (disabled)
[    1.800000] audit: type=2000 audit(1556486507.255:1): initialized
[    1.800000] Initialise system trusted keyring
[    1.800000] VFS: Disk quotas dquot_6.6.0
[    1.800000] VFS: Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
[    1.800000] squashfs: version 4.0 (2009/01/31) Phillip Lougher
[    1.800000] FS-Cache: Netfs 'nfs' registered for caching
[    1.800000] NFS: Registering the id_resolver key type
[    1.800000] Key type id_resolver registered
[    1.800000] Key type id_legacy registered
[    1.800000] nfs4filelayout_init: NFSv4 File Layout Driver Registering...
[    1.800000] nfs4flexfilelayout_init: NFSv4 Flexfile Layout Driver Registering...
[    1.800000] Installing knfsd (copyright (C) 1996 okir@monad.swb.de).
[    1.800000] FS-Cache: Netfs 'cifs' registered for caching
[    1.800000] Key type cifs.spnego registered
[    1.800000] Key type cifs.idmap registered
[    1.800000] ntfs: driver 2.1.32 [Flags: R/W].
[    1.800000] fuse init (API version 7.23)
[    1.800000] NILFS version 2 loaded
[    1.800000] gfs2: GFS2 installed
[    1.800000] Key type big_key registered
[    2.070000] alg: rsa: test failed on vector 4, err=-74
[    2.070000] alg: No test for 842 (842-generic)
[    2.070000] jitterentropy: Initialization failed with host not compliant with requirements: 2
[    2.070000] NET: Registered protocol family 38
[    2.070000] Key type asymmetric registered
[    2.070000] Asymmetric key parser 'x509' registered
[    2.070000] Key type pkcs7_test registered
[    2.070000] Block layer SCSI generic (bsg) driver version 0.4 loaded (major 253)
[    2.070000] io scheduler noop registered
[    2.070000] io scheduler deadline registered
[    2.070000] io scheduler cfq registered (default)
[    2.070000] xz_dec_test: module loaded
[    2.070000] xz_dec_test: Create a device node with 'mknod xz_dec_test c 252 0' and write .xz files to it.
[    2.110000] brd: module loaded
[    2.110000] loop: module loaded
[    2.110000] nbd: registered device at major 43
[    2.110000] drbd: failed to initialize debugfs -- will not be available
[    2.110000] drbd: initialized. Version: 8.4.5 (api:1/proto:86-101)
[    2.110000] drbd: built-in
[    2.110000] drbd: registered as block device major 147
[    2.110000] PPP generic driver version 2.4.2
[    2.110000] PPP BSD Compression module registered
[    2.110000] PPP Deflate Compression module registered
[    2.110000] PPP MPPE Compression module registered
[    2.110000] NET: Registered protocol family 24
[    2.110000] SLIP: version 0.8.4-NET3.019-NEWTTY (dynamic channels, max=256) (6 bit encapsulation enabled).
[    2.110000] CSLIP: code copyright 1989 Regents of the University of California.
[    2.110000] SLIP linefill/keepalive option.
[    2.110000] watchdog: Software Watchdog: cannot register miscdev on minor=130 (err=-16).
[    2.110000] watchdog: Software Watchdog: a legacy watchdog module is probably present.
[    2.110000] softdog: Software Watchdog Timer: 0.08 initialized. soft_noboot=0 soft_margin=60 sec soft_panic=0 (nowayout=0)
[    2.110000] Netfilter messages via NETLINK v0.30.
[    2.110000] nfnl_acct: registering with nfnetlink.
[    2.110000] nf_conntrack version 0.5.0 (16087 buckets, 64348 max)
[    2.110000] nf_tables: (c) 2007-2009 Patrick McHardy <kaber@trash.net>
[    2.110000] nf_tables_compat: (c) 2012 Pablo Neira Ayuso <pablo@netfilter.org>
[    2.110000] xt_time: kernel timezone is -0000
[    2.110000] ip_set: protocol 6
[    2.110000] ip_tables: (C) 2000-2006 Netfilter Core Team
[    2.110000] ipt_CLUSTERIP: ClusterIP Version 0.8 loaded successfully
[    2.110000] arp_tables: (C) 2002 David S. Miller
[    2.110000] NET: Registered protocol family 10
[    2.110000] mip6: Mobile IPv6
[    2.110000] ip6_tables: (C) 2000-2006 Netfilter Core Team
[    2.110000] sit: IPv6 over IPv4 tunneling driver
[    2.200000] ip6_gre: GRE over IPv6 tunneling driver
[    2.200000] NET: Registered protocol family 17
[    2.200000] bridge: automatic filtering via arp/ip/ip6tables has been deprecated. Update your scripts to load br_netfilter if you need this.
[    2.200000] Bridge firewalling registered
[    2.200000] Ebtables v2.0 registered
[    2.200000] Key type dns_resolver registered
[    2.200000] Initialized stdio console driver
[    2.200000] Console initialized on /dev/tty0
[    2.200000] console [tty0] enabled
[    2.200000] Initializing software serial port version 1
[    2.200000] console [mc-1] enabled
[    2.200000] Loading compiled-in X.509 certificates
[    2.200000] Btrfs loaded
[    2.200000] Key type encrypted registered
[    2.200000] EXT2-fs (ubda): error: couldn't mount because of unsupported optional features (240)
[    2.200000] EXT4-fs (ubda): couldn't mount as ext3 due to feature incompatibilities
[    2.200000] EXT4-fs (ubda): mounted filesystem with ordered data mode. Opts: (null)
[    2.200000] VFS: Mounted root (ext4 filesystem) readonly on device 98:0.
[    2.200000] random: systemd urandom read with 15 bits of entropy available
[    2.200000] systemd[1]: systemd 215 running in system mode. (+PAM +AUDIT +SELINUX +IMA +SYSVINIT +LIBCRYPTSETUP +GCRYPT +ACL +XZ -SECCOMP -APPARMOR)
[    2.200000] systemd[1]: Detected virtualization 'vmware'.
[    2.200000] systemd[1]: Detected architecture 'x86'.

Welcome to Debian GNU/Linux 8 (jessie)!

[    2.200000] systemd[1]: No hostname configured.
[    2.200000] systemd[1]: Set hostname to <localhost>.
[    2.200000] systemd[1]: Failed to enable kbrequest handling: Inappropriate ioctl for device
[    2.680000] systemd[1]: Cannot add dependency job for unit dbus.socket, ignoring: Unit dbus.socket failed to load: No such file or directory.
[    2.680000] systemd[1]: Cannot add dependency job for unit display-manager.service, ignoring: Unit display-manager.service failed to load: No such file or directory.
[    2.680000] systemd[1]: Starting Forward Password Requests to Wall Directory Watch.
[    2.680000] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    2.680000] systemd[1]: Starting Remote File Systems (Pre).
[  OK  ] Reached target Remote File Systems (Pre).
[    2.680000] systemd[1]: Reached target Remote File Systems (Pre).
[    2.680000] systemd[1]: Starting Arbitrary Executable File Formats File System Automount Point.
[  OK  ] Set up automount Arbitrary Executable File Formats F...utomount Point.
[    2.680000] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    2.680000] systemd[1]: Starting Encrypted Volumes.
[  OK  ] Reached target Encrypted Volumes.
[    2.680000] systemd[1]: Reached target Encrypted Volumes.
[    2.680000] systemd[1]: Starting Dispatch Password Requests to Console Directory Watch.
[    2.680000] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    2.680000] systemd[1]: Starting Paths.
[  OK  ] Reached target Paths.
[    2.680000] systemd[1]: Reached target Paths.
[    2.680000] systemd[1]: Starting Swap.
[  OK  ] Reached target Swap.
[    2.680000] systemd[1]: Reached target Swap.
[    2.680000] systemd[1]: Starting Root Slice.
[  OK  ] Created slice Root Slice.
[    2.680000] systemd[1]: Created slice Root Slice.
[    2.680000] systemd[1]: Starting User and Session Slice.
[  OK  ] Created slice User and Session Slice.
[    2.680000] systemd[1]: Created slice User and Session Slice.
[    2.680000] systemd[1]: Starting /dev/initctl Compatibility Named Pipe.
[  OK  ] Listening on /dev/initctl Compatibility Named Pipe.
[    2.680000] systemd[1]: Listening on /dev/initctl Compatibility Named Pipe.
[    2.680000] systemd[1]: Starting Delayed Shutdown Socket.
[  OK  ] Listening on Delayed Shutdown Socket.
[    2.680000] systemd[1]: Listening on Delayed Shutdown Socket.
[    2.680000] systemd[1]: Starting Journal Socket (/dev/log).
[  OK  ] Listening on Journal Socket (/dev/log).
[    2.680000] systemd[1]: Listening on Journal Socket (/dev/log).
[    2.680000] systemd[1]: Starting udev Control Socket.
[  OK  ] Listening on udev Control Socket.
[    2.680000] systemd[1]: Listening on udev Control Socket.
[    2.680000] systemd[1]: Starting udev Kernel Socket.
[  OK  ] Listening on udev Kernel Socket.
[    2.680000] systemd[1]: Listening on udev Kernel Socket.
[    2.680000] systemd[1]: Starting Journal Socket.
[  OK  ] Listening on Journal Socket.
[    2.680000] systemd[1]: Listening on Journal Socket.
[    2.680000] systemd[1]: Starting System Slice.
[  OK  ] Created slice System Slice.
[    2.680000] systemd[1]: Created slice System Slice.
[    2.680000] systemd[1]: Starting File System Check on Root Device...
         Starting File System Check on Root Device...
[    2.680000] systemd[1]: Starting system-getty.slice.
[  OK  ] Created slice system-getty.slice.
[    2.830000] systemd[1]: Created slice system-getty.slice.
[    2.830000] systemd[1]: Starting Increase datagram queue length...
         Starting Increase datagram queue length...
[    2.830000] systemd[1]: Mounted Huge Pages File System.
[    2.890000] systemd[1]: Started Set Up Additional Binary Formats.
[    2.890000] systemd[1]: Starting Load Kernel Modules...
         Starting Load Kernel Modules...
[    2.890000] systemd[1]: Mounted Debug File System.
[    2.890000] systemd[1]: Starting udev Coldplug all Devices...
         Starting udev Coldplug all Devices...
[    2.890000] systemd[1]: Mounting POSIX Message Queue File System...
         Mounting POSIX Message Queue File System...
[    2.890000] systemd[1]: Started Create list of required static device nodes for the current kernel.
[    2.890000] systemd[1]: Starting Create Static Device Nodes in /dev...
         Starting Create Static Device Nodes in /dev...
[    2.890000] systemd[1]: Starting Slices.
[  OK  ] Reached target Slices.
[    2.890000] systemd[1]: Reached target Slices.
[  OK  ] Started Increase datagram queue length.
[    3.050000] systemd[1]: Started Increase datagram queue length.
[  OK  ] Started Load Kernel Modules.
[    3.050000] systemd[1]: Started Load Kernel Modules.
[  OK  ] Mounted POSIX Message Queue File System.
[    3.050000] systemd[1]: Mounted POSIX Message Queue File System.
[  OK  ] Started Create Static Device Nodes in /dev.
[    3.330000] systemd[1]: Started Create Static Device Nodes in /dev.
[  OK  ] Started File System Check on Root Device.
[    3.350000] systemd[1]: Started File System Check on Root Device.
[    3.510000] systemd[1]: Starting Remount Root and Kernel File Systems...
         Starting Remount Root and Kernel File Systems...
[    3.510000] systemd[1]: Starting udev Kernel Device Manager...
         Starting udev Kernel Device Manager...
[    3.510000] systemd[1]: Mounting Configuration File System...
         Mounting Configuration File System...
[    3.510000] systemd[1]: Starting Apply Kernel Variables...
         Starting Apply Kernel Variables...
[    3.510000] systemd[1]: Mounting FUSE Control File System...
         Mounting FUSE Control File System...
[    3.510000] systemd[1]: Starting Syslog Socket.
[  OK  ] Listening on Syslog Socket.
[    3.510000] systemd[1]: Listening on Syslog Socket.
[    3.510000] systemd[1]: Starting Sockets.
[  OK  ] Reached target Sockets.
[    3.510000] systemd[1]: Reached target Sockets.
[    3.510000] systemd[1]: Starting Journal Service...
         Starting Journal Service...
[  OK  ] Started Journal Service.
[    3.510000] systemd[1]: Started Journal Service.
[  OK  ] Mounted FUSE Control File System.
[  OK  ] Started Apply Kernel Variables.
[    3.900000] systemd-udevd[1187]: starting version 215
[    4.020000] EXT4-fs (ubda): re-mounted. Opts: (null)
[  OK  ] Mounted Configuration File System.
[  OK  ] Started udev Kernel Device Manager.
[  OK  ] Started Remount Root and Kernel File Systems.
[  OK  ] Started udev Coldplug all Devices.
[    4.384178] systemd-fsck[1110]: ROOT: clean, 16163/65536 files, 88947/262144 blocks
         Starting Load/Save Random Seed...
[  OK  ] Reached target Local File Systems (Pre).
         Mounting /tmp...
         Starting Copy rules generated while the root was ro...
[  OK  ] Mounted /tmp.
[  OK  ] Started Load/Save Random Seed.
[  OK  ] Started Copy rules generated while the root was ro.
[  OK  ] Reached target Local File Systems.
[  OK  ] Reached target Remote File Systems.
         Starting Trigger Flushing of Journal to Persistent Storage...
         Starting Create Volatile Files and Directories...
         Starting LSB: Raise network interfaces....
[  OK  ] Started Create Volatile Files and Directories.
         Starting Update UTMP about System Boot/Shutdown...
[    5.500000] systemd-journald[1191]: Received request to flush runtime journal from PID 1
[  OK  ] Started Trigger Flushing of Journal to Persistent Storage.
[  OK  ] Started Update UTMP about System Boot/Shutdown.
[  OK  ] Started LSB: Raise network interfaces..
[  OK  ] Reached target Network.
[  OK  ] Reached target System Initialization.
[  OK  ] Reached target Timers.
[  OK  ] Reached target Basic System.
         Starting Regular background program processing daemon...
[  OK  ] Started Regular background program processing daemon.
         Starting /etc/rc.local Compatibility...
         Starting System Logging Service...
         Starting Permit User Sessions...
[  OK  ] Started System Logging Service.
[  OK  ] Started /etc/rc.local Compatibility.
[  OK  ] Started Permit User Sessions.
         Starting Getty on tty1...
[  OK  ] Started Getty on tty1.
[  OK  ] Reached target Login Prompts.
[  OK  ] Reached target Multi-User System.
[  OK  ] Reached target Graphical Interface.
         Starting Update UTMP about System Runlevel Changes...
[  OK  ] Started Update UTMP about System Runlevel Changes.

Debian GNU/Linux 8 localhost tty1

localhost login: root[   10.060000] random: nonblocking pool is initialized

Password: 
Last login: Sun Apr 28 21:20:33 UTC 2019 on tty1
Linux localhost 4.3.5 #4 Mon Feb 1 00:26:30 Local time zone must be set--see zic manua i686

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
root@localhost:~#

==============================================================================================
20190429:
		Se incluyo el driver uml_dvk.c muy basico en  linux/arch/um/drivers
		y se modifico el Makefile para compilarlo.
		
		Al bootear 
		root@node0:/usr/src/dvs/vos/uml/uml1#  ./linux-dvk-uml con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdc6   mem=1024M 
		uno de los mensajes es:
			UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
			DEBUG 1:uml_dvk_init_module:132: UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)

		Se verifican los simbolos definidos 
			root@node0:~# grep dvk /proc/kallsyms                                                         
			0804aefd t uml_dvk_init_module
			0805f02c t set_dvk
			0805f063 t uml_dvk_release
			0805f09d t uml_dvk_open
			0805f13f t uml_dvk_ioctl
			080d5e9e t dvk_vm_rw_core
			080d60ab t dvk_vm_rw
			080df992 T dvk_rw_check_kvector
			081d8e04 T dvk_check_iovect
		
TODO: 	
		Se modifico el Kconfig de linux/arch/x86 
		
		root@node0:/usr/src/linux# grep DVK test.config 
			CONFIG_DVS_DVK=y

		Se modifico /usr/src/linux/arch/um/drivers/Kconfig.char 	
		#
		# UML Character Devices
		#
		CONFIG_UML_DVK=y
		
		
 .config - User Mode Linux/x86 4.9.88 Kernel Configuration
 qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
  lqqqqqqqqqqqqqqqq User Mode Linux/x86 4.9.88 Kernel Configuration qqqqqqqqqqqqqqqqk
  x  Arrow keys navigate the menu.  <Enter> selects submenus ---> (or empty         x
  x  submenus ----).  Highlighted letters are hotkeys.  Pressing <Y> includes, <N>  x
  x  excludes, <M> modularizes features.  Press <Esc><Esc> to exit, <?> for Help,   x
  x  </> for Search.  Legend: [*] built-in  [ ] excluded  <M> module  < > module    x
  x lqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk x
  x x        UML-specific options  --->                                           x x
  x x        General setup  --->                                                  x x
  x x    [*] Enable loadable module support  --->                                 x x
  x x    -*- Enable the block layer  --->                                         x x
  x x        UML Character Devices  --->    !!!!!!!!!!! AQUI                      x x
  x x        Device Drivers  --->                                                 x x
  x x    [*] Networking support  --->                                             x x
  x x        UML Network Devices  --->                                            x x
  x x        File systems  --->                                                   x x
  x x        Security options  --->                                               x x
  x x    -*- Cryptographic API  --->                                              x x
  x x        Library routines  --->                                               x x
  x mqqqqv(+)qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj x
  tqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqu
  x            <Select>    < Exit >    < Help >    < Save >    < Load >             x
  mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj


   UML Character Devices qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
  lqqqqqqqqqqqqqqqqqqqqqqqqqqqqq UML Character Devices qqqqqqqqqqqqqqqqqqqqqqqqqqqqqk
  x  Arrow keys navigate the menu.  <Enter> selects submenus ---> (or empty         x
  x  submenus ----).  Highlighted letters are hotkeys.  Pressing <Y> includes, <N>  x
  x  excludes, <M> modularizes features.  Press <Esc><Esc> to exit, <?> for Help,   x
  x  </> for Search.  Legend: [*] built-in  [ ] excluded  <M> module  < > module    x
  x lqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk x
  x x    [*] UML Distributed Virtualization Kernel (DVK) pseudo character device  x x <<<<<<<<<<<<<<<<
  x x    [*] stderr console                                                       x x
  x x    [*] Virtual serial line                                                  x x
  x x    [*] null channel support                                                 x x
  x x    [*] port channel support                                                 x x
  x x    [*] pty channel support                                                  x x
  x x    [*] tty channel support                                                  x x
  x x    [*] xterm channel support                                                x x
  x x    (fd:0,fd:1) Default main console channel initialization                  x x
  x x    (pts) Default console channel initialization                             x x
  x x    (pts) Default serial line channel initialization                         x x
  x x    <*> Sound support                                                        x x
  x mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj x
  tqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqu
  x            <Select>    < Exit >    < Help >    < Save >    < Load >             x
  mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj

  Probe a ver si se ve el driver
  
  SIN ARRANCAR EL DVS EN EL HOST 
root@uml-sdc6:~# mknod /dev/dvk c 33 0
root@uml-sdc6:~# echo hola > /dev/dvk
DEBUG 674:uml_dvk_open:81: dvk_dev=/dev/dvk
DEBUG 674:uml_dvk_open:89: rcode=-2
-bash: /dev/dvk: No such file or directory
root@uml-sdc6:~# ls -l /dev/dvk
crw-r--r-- 1 root root 33, 0 Apr 29 23:40 /dev/dvk

  ARRANCANDO EL DVS EN EL HOST 
 root@uml-sdc6:~# echo hola > /dev/dvk                                                         
DEBUG 674:uml_dvk_open:81: dvk_dev=/dev/dvk
DEBUG 674:uml_dvk_open:89: rcode=19
-bash: echo: write error: Invalid argument
DEBUG 674:uml_dvk_release:102: dvk_dev=/dev/dvk

DMESG EN UML 
root@uml-sdc6:~# dmesg | grep DEBUG
[    0.120000] DEBUG 1:uml_dvk_init_module:132: UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
[ 3275.080000] DEBUG 674:uml_dvk_open:81: dvk_dev=/dev/dvk
[ 3275.080000] DEBUG 674:uml_dvk_open:89: rcode=-2
[ 3423.180000] DEBUG 674:uml_dvk_open:81: dvk_dev=/dev/dvk
[ 3423.180000] DEBUG 674:uml_dvk_open:89: rcode=19
[ 3423.180000] DEBUG 674:uml_dvk_release:102: dvk_dev=/dev/dvk

DMESG EN HOST 
[ 9035.934351] DEBUG 3754:dvk_open:167: 
		
==============================================================================================
20190430 :
				
		EJECUCION DE UML DENTRO DEL NAMESPACE 
			En HOST
			cd /usr/src/dvs/dvk-tests
			./tests.sh 0 0
			cd /dev/shm
			. ./DC0.sh 
			cd /usr/src/dvs/vos/uml/uml1
			nsenter -p -t$DC0 ./linux-dvk-uml con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdc6 mem=1024M 		

			EN UML 	
			root@node0:/usr/src/dvs/dvk-tests# mknod /dev/dvk c 33 0

			TRATO DE EJECUTAR UN SERVIDOR DENTRO DEL UML 
			root@node0:/usr/src/dvs/dvk-proxies/test# ./copy_server 0 10
			DEBUG 647:dvk_open:47: Open dvk device file /dev/dvk
			DEBUG 647:uml_dvk_open:83: dvk_dev=/dev/dvk
			DEBUG 647:uml_dvk_open:91: rcode=23
			DEBUG 647:dvk_getdvsinfo:120: 
			DEBUG 647:uml_dvk_ioctl:62: cmd=8004E31B arg=BF998B68
			DEBUG 647:uml_dvk_ioctl:70: rcode=0
			DEBUG 647:dvk_getdvsinfo:122: ioctl ret=0
			 copy_server.c:main:47:local_nodeid=0
			 copy_server.c:main:48:d_nr_dcs=0 d_nr_nodes=0 d_nr_procs=0 d_nr_tasks=0 d_nr_sysprocs=0 
			DEBUG 647:dvk_getdcinfo:170: dcid=0
			DEBUG 647:uml_dvk_ioctl:62: cmd=8004E30E arg=BF998B24
			DEBUG 647:uml_dvk_ioctl:70: rcode=0
			DEBUG 647:dvk_getdcinfo:174: ioctl ret=0 errno=0
			 copy_server.c:main:58:dc_dcid=0 dc_nr_procs=0 dc_nr_tasks=0 dc_nr_sysprocs=0 dc_nr_nodes=0
			 copy_server.c:main:59:flags=0 dc_nodes=0 dc_pid=1073780313 dc_name=
			svr_ep must be > 0 and < 0
			DEBUG 647:uml_dvk_release:104: dvk_dev=/dev/dvk
					
			DMESG EN HOST 
			[ 3593.456788] DEBUG 6811:dvk_open:167: 
			[ 3593.458626] DEBUG 6811:dvk_ioctl:204: cmd=8004E31B arg=BF998B68
			[ 3593.458629] DEBUG 6811:dvk_ioctl:224: DVK_CALL=27 (getdvsinfo) 
			[ 3593.458732] DEBUG 6811:io_getdvsinfo:288: 
			[ 3593.458736] DEBUG 6811:new_getdvsinfo:1784: local_nodeid=0 
			[ 3593.463375] DEBUG 6811:dvk_ioctl:204: cmd=8004E30E arg=BF998B24
			[ 3593.463379] DEBUG 6811:dvk_ioctl:224: DVK_CALL=14 (getdcinfo) 
			[ 3593.463380] DEBUG 6811:io_getdcinfo:153: 
			[ 3593.463383] DEBUG 6811:new_getdcinfo:1813: dcid=0 
			[ 3593.463386] DEBUG 6811:check_caller:536: caller_pid=6811 caller_tgid=6811
			[ 3593.463387] ERROR: 6811:check_caller:570: rcode=-310
			[ 3593.463389] DEBUG 6811:new_getdcinfo:1831: RLOCK_DC dc=0 count=0
			[ 3593.463391] DEBUG 6811:new_getdcinfo:1833: RUNLOCK_DC dc=0 count=0
			[ 3593.464124] DVK: exit_unbind local_nodeid:0		
					
			DMESG UML
			[  242.870000] DEBUG 647:uml_dvk_open:83: dvk_dev=/dev/dvk
			[  242.880000] DEBUG 647:uml_dvk_open:91: rcode=23
			[  242.880000] DEBUG 647:uml_dvk_ioctl:62: cmd=8004E31B arg=BF998B68
			[  242.880000] DEBUG 647:uml_dvk_ioctl:70: rcode=0
			[  242.880000] DEBUG 647:uml_dvk_ioctl:62: cmd=8004E30E arg=BF998B24
			[  242.880000] DEBUG 647:uml_dvk_ioctl:70: rcode=0
			[  242.880000] DEBUG 647:uml_dvk_release:104: dvk_dev=/dev/dvk 

PROBLEMA:
			EL PARAMETRO DE ADDRESS QUE PASA EL PROCESO DENTRO DE UML NO ES EL VERDADERO
			POR LO TANTO LA COPIA DESDE EL DVK HACIA EL PROCESO DENTRO DE UML NO ESCRIBE EN EL LUGAR CORRECTO
			
PRUEBA:		HACER UN PROGRAMA QUE HAGA BIND Y LUEGO GETEP 

root@node0:/usr/src/dvs/dvk-tests# ./test_bind 0 10
DEBUG 651:dvk_open:47: Open dvk device file /dev/dvk
DEBUG 651:uml_dvk_open:83: dvk_dev=/dev/dvk
DEBUG 651:uml_dvk_open:91: rcode=23
PARENT dvk_bind Binding process 651 to DC0 with p_nr=10
DEBUG 651:dvk_bind_X:607: cmd=0 dcid=0 pid=-1 endpoint=10 nodeid=-1
DEBUG 651:uml_dvk_ioctl:62: cmd=4004E309 arg=BFF31CD8
DEBUG 651:uml_dvk_ioctl:70: rcode=-7
DEBUG 651:dvk_bind_X:616: ioctl ret=-1 errno=7
DEBUG 651:dvk_getep:109: pid=651
DEBUG 651:uml_dvk_ioctl:62: cmd=8004E31A arg=28B
DEBUG 651:uml_dvk_ioctl:70: rcode=-310
DEBUG 651:dvk_getep:111: ioctl ret=-1 errno=310
ERROR: 651:dvk_getep:112: rcode=-310
PARENT ep=-1 dvk_getep=-310
PARENT dvk_lclbind 652 to DC0 with p_nr+index=11
DEBUG 651:dvk_bind_X:607: cmd=1 dcid=0 pid=652 endpoint=11 nodeid=-1
DEBUG 651:uml_dvk_ioctl:62: cmd=4004E309 arg=BFF31CD8
DEBUG 651:uml_dvk_ioctl:70: rcode=-7
DEBUG 651:dvk_bind_X:616: ioctl ret=-1 errno=7
DEBUG 651:dvk_getep:109: pid=652
CHILD[1] dvk_lclbind
DEBUG 651:uml_dvk_ioctl:62: cmd=8004E31A arg=28C
DEBUG 651:uml_dvk_ioctl:70: rcode=-310
DEBUG 651:dvk_getep:111: ioctl ret=-1 errno=310
ERROR: 651:dvk_getep:112: rcode=-310
PARENT ep=-1 dvk_getep=-310
CHILD[2] dvk_replbind Binding process 653 to DC0 with p_nr=12
DEBUG 653:dvk_bind_X:607: cmd=4 dcid=0 pid=653 endpoint=12 nodeid=-1
DEBUG 653:uml_dvk_ioctl:62: cmd=4004E309 arg=BFF31CD8
DEBUG 653:uml_dvk_ioctl:70: rcode=-7
DEBUG 653:dvk_bind_X:616: ioctl ret=-1 errno=7
DEBUG 653:dvk_getep:109: pid=653
PARENT waiting child index=2
DEBUG 653:uml_dvk_ioctl:62: cmd=8004E31A arg=28D
DEBUG 653:uml_dvk_ioctl:70: rcode=-310
DEBUG 653:dvk_getep:111: ioctl ret=-1 errno=310
ERROR: 653:dvk_getep:112: rcode=-310
CHILD[2] ep=-1 dvk_getep=-310
DEBUG 652:dvk_getep:109: pid=652
DEBUG 652:uml_dvk_ioctl:62: cmd=8004E31A arg=28C
DEBUG 652:uml_dvk_ioctl:70: rcode=-310
DEBUG 652:dvk_getep:111: ioctl ret=-1 errno=310
ERROR: 652:dvk_getep:112: rcode=-310
CHILD[1] dvk_getep=-310

EN HOST 
[ 3914.739362] DEBUG 6811:dvk_open:167: 
[ 3914.741520] DEBUG 6811:dvk_ioctl:204: cmd=4004E309 arg=BFF31CD8
[ 3914.741523] DEBUG 6811:dvk_ioctl:224: DVK_CALL=9 (bind) 
[ 3914.741524] DEBUG 6811:io_bind:97: 
[ 3914.741531] ERROR: 6811:io_bind:99: rcode=-7
[ 3914.741533] ERROR: 6811:dvk_ioctl:228: rcode=-7
[ 3914.742277] DEBUG 6811:dvk_ioctl:204: cmd=8004E31A arg=28B
[ 3914.742279] DEBUG 6811:dvk_ioctl:224: DVK_CALL=26 (getep) 
[ 3914.742347] DEBUG 6811:io_getep:279: 
[ 3914.742349] DEBUG 6811:new_getep:1966: pid=651
[ 3914.742352] DEBUG 6811:check_caller:536: caller_pid=6811 caller_tgid=6811
[ 3914.742353] ERROR: 6811:check_caller:570: rcode=-310
[ 3914.742355] ERROR: 6811:dvk_ioctl:228: rcode=-310
[ 3914.771912] DEBUG 6811:dvk_ioctl:204: cmd=4004E309 arg=BFF31CD8
[ 3914.771916] DEBUG 6811:dvk_ioctl:224: DVK_CALL=9 (bind) 
[ 3914.771917] DEBUG 6811:io_bind:97: 
[ 3914.771924] ERROR: 6811:io_bind:99: rcode=-7
[ 3914.771926] ERROR: 6811:dvk_ioctl:228: rcode=-7
[ 3914.797432] DEBUG 6811:dvk_ioctl:204: cmd=8004E31A arg=28C
[ 3914.797436] DEBUG 6811:dvk_ioctl:224: DVK_CALL=26 (getep) 
[ 3914.797437] DEBUG 6811:io_getep:279: 
[ 3914.797439] DEBUG 6811:new_getep:1966: pid=652
[ 3914.797442] DEBUG 6811:check_caller:536: caller_pid=6811 caller_tgid=6811
[ 3914.797444] ERROR: 6811:check_caller:570: rcode=-310
[ 3914.797445] ERROR: 6811:dvk_ioctl:228: rcode=-310
[ 3914.811079] DEBUG 6811:dvk_ioctl:204: cmd=4004E309 arg=BFF31CD8
[ 3914.811082] DEBUG 6811:dvk_ioctl:224: DVK_CALL=9 (bind) 
[ 3914.811084] DEBUG 6811:io_bind:97: 
[ 3914.811089] ERROR: 6811:io_bind:99: rcode=-7
[ 3914.811091] ERROR: 6811:dvk_ioctl:228: rcode=-7
[ 3914.832395] DEBUG 6811:dvk_ioctl:204: cmd=8004E31A arg=28D
[ 3914.832401] DEBUG 6811:dvk_ioctl:224: DVK_CALL=26 (getep) 
[ 3914.832402] DEBUG 6811:io_getep:279: 
[ 3914.832404] DEBUG 6811:new_getep:1966: pid=653
[ 3914.832408] DEBUG 6811:check_caller:536: caller_pid=6811 caller_tgid=6811
[ 3914.832409] ERROR: 6811:check_caller:570: rcode=-310
[ 3914.832411] ERROR: 6811:dvk_ioctl:228: rcode=-310
[ 3919.787014] DEBUG 6811:dvk_ioctl:204: cmd=8004E31A arg=28C
[ 3919.787018] DEBUG 6811:dvk_ioctl:224: DVK_CALL=26 (getep) 
[ 3919.787019] DEBUG 6811:io_getep:279: 
[ 3919.787021] DEBUG 6811:new_getep:1966: pid=652
[ 3919.787024] DEBUG 6811:check_caller:536: caller_pid=6811 caller_tgid=6811
[ 3919.787025] ERROR: 6811:check_caller:570: rcode=-310
[ 3919.787026] ERROR: 6811:dvk_ioctl:228: rcode=-310
[ 3954.156308] DVK: exit_unbind local_nodeid:0


==============================================================================================
20190430.  EL PROBLEMA SON LAS DIRECCIONES EN MODO USUARIO. 

Se modifico temporalemente um_dvk.c funcion uml_dvk_ioctl()
Se distingue cuando es el pedido de GETDVSINFO del resto.
Para GETDVSINFO se copia en forma local la estructura de datos y luego se la transfiere a 
modo usuario. De esta forma funciona

DEBUG 643:dvk_getdvsinfo:122: ioctl ret=0
 copy_server.c:main:47:local_nodeid=0
 copy_server.c:main:48:d_nr_dcs=32 d_nr_nodes=32 d_nr_procs=221 d_nr_tasks=35 d_nr_sysprocs=64 
	
	
Se pueden decodificar los IOCTL con 
/* used to decode ioctl numbers.. */
#define _IOC_DIR(nr)		(((nr) >> _IOC_DIRSHIFT) & _IOC_DIRMASK)
#define _IOC_TYPE(nr)		(((nr) >> _IOC_TYPESHIFT) & _IOC_TYPEMASK)
#define _IOC_NR(nr)		(((nr) >> _IOC_NRSHIFT) & _IOC_NRMASK)
#define _IOC_SIZE(nr)		(((nr) >> _IOC_SIZESHIFT) & _IOC_SIZEMASK)


TODOS LOS PROCESOS DE USUARIO UML SE EJECUTAN CON EL MISMO PID !!! 	
es PORQUE es EL PID DEL UML-KERNEL 

[ 5779.817420] DEBUG 5834:dvk_open:167:
[ 5841.790515] DEBUG 5834:dvk_open:167: 
[ 5875.286673] DEBUG 5834:dvk_open:167: 

DEBUG 1:uml_dvk_init_module:149: UML-kernel PID=292  UML-kernel TID=292 <<<< ESTOS SON LO VPID Y VTID 

root@node0:/usr/src/dvs/dvk-proxies/test# more /proc/cpuinfo
processor       : 0
vendor_id       : User Mode Linux
model name      : UML
mode            : skas <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
host            : Linux node0 4.9.88 #13 SMP Sat Apr 13 02:07:32 -03 2019 i686
bogomips        : 1810.43


DEBUG EN HOST 
[29326.449835] DEBUG 9443:dvk_open:167: 
[29326.450513] DEBUG 9443:dvk_ioctl:204: cmd=8004E31B arg=491F6680
[29326.450515] DEBUG 9443:dvk_ioctl:224: DVK_CALL=27 (getdvsinfo) 
[29326.450517] DEBUG 9443:io_getdvsinfo:288: 
[29326.450519] DEBUG 9443:new_getdvsinfo:1784: local_nodeid=0 
[29326.453381] DEBUG 9443:dvk_ioctl:204: cmd=8004E30E arg=BFBA2B24
[29326.453385] DEBUG 9443:dvk_ioctl:224: DVK_CALL=14 (getdcinfo) 
[29326.453387] DEBUG 9443:io_getdcinfo:153: 
[29326.453398] DEBUG 9443:new_getdcinfo:1813: dcid=0 
[29326.453401] DEBUG 9443:check_caller:536: caller_pid=9443 caller_tgid=9443
[29326.453403] ERROR: 9443:check_caller:570: rcode=-310
[29326.453405] DEBUG 9443:new_getdcinfo:1831: RLOCK_DC dc=0 count=0
[29326.453407] DEBUG 9443:new_getdcinfo:1833: RUNLOCK_DC dc=0 count=0
[29326.470500] DVK: exit_unbind local_nodeid:0

DEBUG EN UMLoot@node0:/usr/src/dvs/dvk-proxies/test# dmesg -c                                                    
[  401.060000] DEBUG 657:uml_dvk_open:95: dvk_dev=/dev/dvk
[  401.060000] DEBUG 657:uml_dvk_open:103: rcode=23
[  401.060000] DEBUG 657:uml_dvk_ioctl:65: cmd=8004E31B arg=BFBA2B68
[  401.060000] DEBUG 657:uml_dvk_ioctl:82: rcode=0
[  401.060000] DEBUG 657:uml_dvk_ioctl:65: cmd=8004E30E arg=BFBA2B24
[  401.060000] DEBUG 657:uml_dvk_ioctl:82: rcode=0
[  401.080000] DEBUG 657:uml_dvk_release:116: dvk_dev=/dev/dv


DEBUG EN CLIENT UML 
root@node0:/usr/src/dvs/dvk-proxies/test# ./copy_server 0 10
DEBUG 657:dvk_open:47: Open dvk device file /dev/dvk
DEBUG 657:uml_dvk_open:95: dvk_dev=/dev/dvk
DEBUG 657:uml_dvk_open:103: rcode=23
DEBUG 657:dvk_getdvsinfo:120: 
DEBUG 657:uml_dvk_ioctl:65: cmd=8004E31B arg=BFBA2B68
DEBUG 657:uml_dvk_ioctl:82: rcode=0
DEBUG 657:dvk_getdvsinfo:122: ioctl ret=0
 copy_server.c:main:47:local_nodeid=0
 copy_server.c:main:48:d_nr_dcs=32 d_nr_nodes=32 d_nr_procs=221 d_nr_tasks=35 d_nr_sysprocs=64 
DEBUG 657:dvk_getdcinfo:170: dcid=0
DEBUG 657:uml_dvk_ioctl:65: cmd=8004E30E arg=BFBA2B24
DEBUG 657:uml_dvk_ioctl:82: rcode=0
DEBUG 657:dvk_getdcinfo:174: ioctl ret=0 errno=0
 copy_server.c:main:58:dc_dcid=0 dc_nr_procs=0 dc_nr_tasks=0 dc_nr_sysprocs=0 dc_nr_nodes=0
 copy_server.c:main:59:flags=0 dc_nodes=0 dc_pid=1073780313 dc_name=
svr_ep must be > 0 and < 0
DEBUG 657:uml_dvk_release:116: dvk_dev=/dev/dvk

------------------- SIN ARRANCAR EL NAMESPACE ----------------------
root@node0:/usr/src/dvs/vos/uml/uml1# ./linux-dvk-uml con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/
sdb6   mem=1024M clear

DEBUG 1:uml_dvk_init_module:144: UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
DEBUG 1:uml_dvk_init_module:149: UML-kernel PID=10018  UML-kernel TID=10018

DEBUG DEL PROCESO 
root@node0:/usr/src/dvs/dvk-proxies/test# ./copy_server 0 10                             
DEBUG 647:dvk_open:47: Open dvk device file /dev/dvk
DEBUG 647:uml_dvk_open:95: dvk_dev=/dev/dvk
DEBUG 647:uml_dvk_open:103: rcode=19
DEBUG 647:dvk_getdvsinfo:120: 
DEBUG 647:uml_dvk_ioctl:65: cmd=8004E31B arg=BF9E8B68
DEBUG 647:uml_dvk_ioctl:82: rcode=0
DEBUG 647:dvk_getdvsinfo:122: ioctl ret=0
 copy_server.c:main:47:local_nodeid=0
 copy_server.c:main:48:d_nr_dcs=32 d_nr_nodes=32 d_nr_procs=221 d_nr_tasks=35 d_nr_sysprocs=64 
DEBUG 647:dvk_getdcinfo:170: dcid=0
DEBUG 647:uml_dvk_ioctl:65: cmd=8004E30E arg=BF9E8B24
DEBUG 647:uml_dvk_ioctl:82: rcode=0
DEBUG 647:dvk_getdcinfo:174: ioctl ret=0 errno=0
 copy_server.c:main:58:dc_dcid=0 dc_nr_procs=0 dc_nr_tasks=0 dc_nr_sysprocs=0 dc_nr_nodes=0
 copy_server.c:main:59:flags=0 dc_nodes=0 dc_pid=1073780313 dc_name=
svr_ep must be > 0 and < 0
DEBUG 647:uml_dvk_release:116: dvk_dev=/dev/dvk


DEBUG DE UML#
[  121.950000] DEBUG 647:uml_dvk_open:95: dvk_dev=/dev/dvk
[  121.950000] DEBUG 647:uml_dvk_open:103: rcode=19
[  121.950000] DEBUG 647:uml_dvk_ioctl:65: cmd=8004E31B arg=BF9E8B68
[  121.950000] DEBUG 647:uml_dvk_ioctl:82: rcode=0
[  121.950000] DEBUG 647:uml_dvk_ioctl:65: cmd=8004E30E arg=BF9E8B24
[  121.950000] DEBUG 647:uml_dvk_ioctl:82: rcode=0
[  121.950000] DEBUG 647:uml_dvk_release:116: dvk_dev=/dev/dvk

DEBUG EN EL HOST 
[29697.762381] DEBUG 10018:dvk_open:167: 
[29697.763292] DEBUG 10018:dvk_ioctl:204: cmd=8004E31B arg=4920DAC0
[29697.763294] DEBUG 10018:dvk_ioctl:224: DVK_CALL=27 (getdvsinfo) 
[29697.763296] DEBUG 10018:io_getdvsinfo:288: 
[29697.763298] DEBUG 10018:new_getdvsinfo:1784: local_nodeid=0 
[29697.766098] DEBUG 10018:dvk_ioctl:204: cmd=8004E30E arg=BF9E8B24
[29697.766101] DEBUG 10018:dvk_ioctl:224: DVK_CALL=14 (getdcinfo) 
[29697.766102] DEBUG 10018:io_getdcinfo:153: 
[29697.766123] DEBUG 10018:new_getdcinfo:1813: dcid=0 
[29697.766126] DEBUG 10018:check_caller:536: caller_pid=10018 caller_tgid=10018
[29697.766128] ERROR: 10018:check_caller:570: rcode=-310
[29697.766130] DEBUG 10018:new_getdcinfo:1831: RLOCK_DC dc=0 count=0
[29697.766140] DEBUG 10018:new_getdcinfo:1833: RUNLOCK_DC dc=0 count=0
[29697.767270] DVK: exit_unbind local_nodeid:0

ESTO DEMUESTRA QUE EL QUE HACE LA PETICION ES EL UML-KERNEL (10018)



==============================================================================================

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

CAMBIO DE ESTRATEGIA!!

UML solo maneja 2 procesos UML-USER y UML-KERNEL con Address spaces separados.

Esto solo permitirá manejar 2 endpoints!!!  
		UML-USER y UML-KERNEL 
	
	En UML-USER podemos poner un WEBSERVER
	En UML-KERNEL podemos poner un driver del RDISK 
		
Utiliza SKAS0, por lo que hay codigo en el tope del proceso UML-USER 
Aqui hay:
	1- Hacer el open del FD del DVK (fd_dvk) para guardarlo en una variable global.
	2- Detectar cuando se hace una invocacion a ioctl()
		En este caso ver si el (fd == fd_dvk)
		y en este caso se cambia por un os_ioctl_generic(fd_dvk, cmd,  data)

PROBLEMAS:
          Cuando el UML-USER hace una dvk_call() sin llamar a UML-KERNEL y queda bloqueado entonces TODO UML-USER queda bloqueado !!!! 

POSIBLE SOLUCION:
          Crear un thread que se encargue de las operaciones de DVK.
Ver como hace ubd que crea un thread
      CLONE_VM (since Linux 2.0)If CLONE_VM is set, the calling process and the child process run in the same memory space.
int start_io_thread(unsigned long sp, int *fd_out)
pid = clone(io_thread, (void *) sp, CLONE_FILES | CLONE_VM, NULL);


PREGUNTA: Puede caber todo este codigo en el extremo SKAS se UML_USER ??

struct cpu_task {
	int pid;
	void *task;
};


SE PODRIA ASOCIAR UN THREAD EN EL UML-KERNEL A CADA PROCESO UML-PID 

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

- El problema aparente esta en las direcciones de memoria de los procesos UML.

1- Verificar que cada proceso UML es un proceso HOST.
2- Imprimir gettid y getpid para ver que usan 
3- en la funcion uml_dvk_ioctl de um_dvk.c se deberían discriminar las llamadas al DVK según el tipo de parametro.
		Si es de entrada o salida
		Si es de un entero o una estructura de datos 
		Cantidad de parametros 
		
4- Como convertir las direcciones virtuales UML a virtuales de HOST ???
virt_to_phys()

HACER: 
UML# more /proc/cpuinfo
processor : 0
vendor_id : User Mode Linux
model name : UML
mode : skas <<<<<<<<<<<<<<<<<< Separeted Kernel Address Space 
host : Linux tp.

In skas mode, this is not the case. The UML kernel runs entirely
within a single process, using longjmp to switch between kernel
stacks on context switches. gdb

CONFIRMADO se usa mode SKAS 
In contrast, in skas3 mode, the UML kernel resides
entirely in a different host address space.

Cuando un proceso UML_user hace un SysCall está cambiando de proceso porque pasa
al Adress Space del UML_kernel

PROBLEMON!!!!!
Quiere decir que el que en realidad hace las ioctl() de DVK es el kernel!!! 

APARENTEMENTE, EL MODO DE USO ES SKAS0 DONDE EN EL TOPE HAY UN STUB 
              PIDb      PIDa 
           ---------  ---------  
		   ! STUB  !  ! 	  !
		   ! SKAS  !  !       !
           ---------  !       !  
		   !       !  !  UML  !
		   !       !  ! KERNEL!
		   !  USER !  !       !
		   !  PROCS!  !       !
		   !       !  !       !
		   !       !  !       !
		   !       !  !       !
           ---------  ---------
		   
PREGUNTA: Como hacer  para saber el PID/TID del proceso de usuario??

/arch/um/kernel/skas/process.c
static int __init start_kernel_proc(void *unused)
{
	int pid;

	block_signals();
	pid = os_getpid(); <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< PONER UN DEBUG 

	cpu_tasks[0].pid = pid;
	cpu_tasks[0].task = current;

	start_kernel();
	return 0;
}

void __switch_mm(struct mm_id *mm_idp)
{
	userspace_pid[0] = mm_idp->u.pid;
}

En 
int start_userspace(unsigned long stub_stack)
esta el PID del userspace 

	pid = clone(userspace_tramp, (void *) sp, flags, (void *) stub_stack);
	if (pid < 0) {
		err = -errno;
		printk(UM_KERN_ERR "start_userspace : clone failed, "
		       "errno = %d\n", errno);
		return err;
	}


/arch/um/os-Linux/skas/process.c
static void handle_trap(int pid, struct uml_pt_regs *regs,
			int local_using_sysemu)
Que invoca a handle_syscall(regs);
			
/arch/um/kernel/skas/syscall.c
Aqui maneja los syscalls

En la estructura 
struct uml_pt_regs {
	unsigned long gp[MAX_REG_NR];
	unsigned long fp[MAX_FP_NR];
	struct faultinfo faultinfo;
	long syscall; <<<<<<<<<<<<<<<<<<<<< SYSCALL 
	int is_user;
};


#define NR_CPUS 1
int userspace_pid[NR_CPUS]; <<<<<<<<<<<<<<<<<<<< USER SPACE PID 

/arch/um/kernel/process.c
static inline int external_pid(void)
{
	/* FIXME: Need to look up userspace_pid by cpu */
	return userspace_pid[0];
}


TENER EN CUENTA
I start uml with the following command line:
linux root=/dev/ubda ubd0=/umls/uml1.rootfs ubd1=/umls/uml1.swapfs mem=128M
con=pty con0=fd:0,fd:1 eth0=tuntap,tap0,,192.168.1.1 umid=uml1

Se compilo el 


 ./linux-dvk-uml con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6   mem=1024M 

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
					RESUMEN DE ESTRATEGIA
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

UML-USER es un proceso y UML-KERNEL es un proceso.
UML-USER no es facilmente modificable porque hay que modificar el stub SKAS
Estrategia:  Crear un driver DVK que crea un thread por cada UML-Process 
Para ello:
		Se necesita relacionar el hilo de UML-Kernel con el UML-PID del UML-USER
		Como son espacios de direcciones diferentes, averiguar si UML-KERNEL
		utiliza memory map del UML-USER. De esa forma se dispone en UML-KERNEL
		de las direcciones de memoria de UML-USER y se pueden hacer transferencias
		de mensajes y datos entre  DVK<->UML-KERNEL (mapeado en UML-USER)
		Se requiere tambien disponer del UML-PID para relacionarlo al DVK-thread
		Se requiere saber como se pone en marcha o al menos en LISTO un UML-process 
		despues del que el DVK-Thread ha terminado con su tarea.
		external_pid(): retorna el pid de UML-USER 
		
fd = phys_mapping(to_phys(__syscall_stub_start), &offset);

 * The memory mapped memory of the temporary file is used as backing memory
 * of all user space processes/kernel tasks.
 */
void __init setup_physmem(unsigned long start, unsigned long reserve_end,
			  unsigned long len, unsigned long long highmem)
			--->  os_map_memory()
						----> 	loc = mmap64((void *) virt, len, prot, MAP_SHARED | MAP_FIXED,
		     fd, off);
lo importante aqui es que es MAP_SHARED !!!!!


Deberia hacer un driver y un proceso de usuario de prueba.

Proceso de usuario 
	- imprime su PID (UML-PID)
	- Toma una direccion de memoria de una variable donde almacena 0x12345678
	- Imprime la direccion 
	- Imprime el contenido
	- invoca ioctl() al driver 
	- El driver imprime el PID del proceso, la direccion de memoria y el contenido 
	
kernel process: Map a tmpfs region for each userspace process with 
read/write.
userspace process: Map the same tmpfs for the current process and 
userfaultfd the whole address space, and give the userfaultfd fd to the 
kernel somehow and process the page fault there and fill/copy the 
faulted page accordingly.

**
 * setup_physmem() - Setup physical memory for UML
 * @start:	Start address of the physical kernel memory,
 *		i.e start address of the executable image.
 * @reserve_end:	end address of the physical kernel memory.
 * @len:	Length of total physical memory that should be mapped/made
 *		available, in bytes.
 * @highmem:	Number of highmem bytes that should be mapped/made available.
 *
 * Creates an unlinked temporary file of size (len + highmem) and memory maps
 * it on the last executable image address (uml_reserved).
 *
 * The offset is needed as the length of the total physical memory
 * (len + highmem) includes the size of the memory used be the executable image,
 * but the mapped-to address is the last address of the executable image
 * (uml_reserved == end address of executable image).
 *
 * The memory mapped memory of the temporary file is used as backing memory
 * of all user space processes/kernel tasks.
 */
 
 
 
 Segun entiendo, desplaza el puntero del archivo hasta __syscall_stub_start
 y alli copy una pagina completa que contiene la gestion de syscall 
 
 	/*
	 * Special kludge - This page will be mapped in to userspace processes
	 * from physmem_fd, so it needs to be written out there.
	 */
	os_seek_file(physmem_fd, __pa(__syscall_stub_start));
	os_write_file(physmem_fd, __syscall_stub_start, PAGE_SIZE);
	os_fsync_file(physmem_fd);
	

arch/um/kernel/skas/mmu.c	
	pages[0] = virt_to_page(&__syscall_stub_start);
	pages[1] = virt_to_page(mm->context.id.stack);
	
	
	
 setup_physmem invoca a
	 create_mem_file
	  os_map_memory invoca a 
			loc = mmap64((void *) virt, len, prot, MAP_SHARED | MAP_FIXED, <<<<< SHARED 
		     fd, off);
O sea, esto pareceria ser el mapeo de TODA la memoria en el archivo 


void new_thread_handler(void)
	userspace(&current->thread.regs.regs);
		void userspace(struct uml_pt_regs *regs) 
			da trataiento a los SIGNALS de modo usuario y aparentemente esta en el SKAS
			

"umid=<name>\n"
"    This is used to assign a unique identity to this UML machine and\n"
"    is used for naming the pid file and management console socket


copy_thread(unsign
	handler = fork_handler;
	new_thread(task_stack_page(p), &p->thread.switch_buf, handler);
			

struct mm_id {
	union {
		int mm_fd;
		int pid;
	} u;
	unsigned long stack;
};


static inline long do_syscall_stub(struct mm_id * mm_idp, void **addr)
Se supone que el PID que aparece aqui es el UML-PID

err = ptrace(PTRACE_CONT, pid, 0, 0);
       PTRACE_CONT
              Restart the stopped tracee process.  If data is nonzero, it is
              interpreted as the number of a signal to be delivered to the
              tracee; otherwise, no signal is delivered.  Thus, for example,
              the tracer can control whether a signal sent to the tracee is
              delivered or not.  (addr is ignored.)
			  

UML needs this (one mapping for the "physical" memory area, zero or more
mappings into the kernel VM area, and zero or more mappings into process
address spaces).

The reason it won't work is that each thread is in a different address space, 
so the context switching code needs to know what it should map in to each 
process that runs.  So, somehow you need to keep track of the fact that one 
thread mmapped something in, and have the low-level context switcher mmap it 
in to each new thread that runs.


===============================================================================
20190511:
		Pruebas para determinar como trabaja la memoria y los PIDs.
		
root@node0:/usr/src/linux#  ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6   mem=1024M 
		


		
======================================= EN HOST =======================================

		
root@node0:/usr/src/dvs/dvk-tests# ps -ef | grep linux
root       354     1  0 17:14 tty1     00:00:00 /sbin/agetty --noclear tty1 linux
root     17272   551  5 18:45 pts/0    00:00:09 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root     17277 17272  0 18:45 pts/0    00:00:00 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root     17278 17272  8 18:45 pts/0    00:00:12 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root     17279 17272  0 18:45 pts/0    00:00:00 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root     17282 17272  0 18:45 pts/0    00:00:01 [linux]
root     17303 17272  0 18:46 pts/0    00:00:00 [linux]
root     17332 17272  0 18:46 pts/0    00:00:00 [linux]
root     17355 17272  0 18:46 pts/0    00:00:00 [linux]
root     17363 17272  0 18:46 pts/0    00:00:00 [linux]
root     17422 17272  0 18:46 pts/0    00:00:00 [linux]
root     17424 17272  0 18:46 pts/0    00:00:00 [linux]
root     17425 17272  0 18:46 pts/0    00:00:00 [linux]
root     17426 17272  0 18:46 pts/0    00:00:00 [linux]
root     17427 17272  0 18:46 pts/0    00:00:00 [linux]
root     17451 17272  0 18:47 pts/0    00:00:00 [linux]
root     17462 17272  0 18:47 pts/0    00:00:00 [linux]

  
 
 PRIMERA EJECUCION 
[ 5802.322100] DEBUG 17272:dvk_open:167: 
[ 5802.324160] DEBUG 17272:dvk_ioctl:201: cmd=4004E309 arg=488C9CD0
[ 5802.324164] DEBUG 17272:dvk_ioctl:221: DVK_CALL=9 (bind) 
[ 5802.324166] DEBUG 17272:io_bind:97: 
[ 5802.324170] DEBUG 17272:new_bind:1372: oper=0 dcid=0 param_pid=-1 endpoint=-2 nodeid=-1
[ 5802.324172] DEBUG 17272:new_bind:1394: RLOCK_DC dc=0 count=0
[ 5802.324174] DEBUG 17272:new_bind:1407: WLOCK_PROC ep=-2 count=0
[ 5802.324176] DEBUG 17272:init_proc_desc:16: p_name=$noname dcid=0
[ 5802.324180] DEBUG 17272:new_bind:1441: param_pid=-1 lpid=17272 vpid=17272 tid=17272
[ 5802.324181] DEBUG 17272:new_bind:1465: SELF_BIND param_pid=-1 lpid=17272 vpid=17272 tid=17272
[ 5802.324183] DEBUG 17272:new_bind:1487: WUNLOCK_PROC ep=-2 count=0
[ 5802.324184] DEBUG 17272:new_bind:1490: WLOCK_TASK pid=17272 count=0
[ 5802.324185] DEBUG 17272:new_bind:1491: WLOCK_PROC ep=-2 count=0
[ 5802.324254] DEBUG 17272:new_bind:1527: increment the reference count of the task struct=17272 count=2
[ 5802.324255] DEBUG 17272:new_bind:1538: process p_name=linux *p_name_ptr=linux
[ 5802.324258] DEBUG 17272:new_bind:1595: nr=-2 endp=-2 dcid=0 flags=0 misc=20 lpid=17272 vpid=17272 nodeid=0 name=linux 
[ 5802.324261] DEBUG 17272:new_bind:1596: nr=-2 endp=-2 dcid=0 lpid=17272 p_cpumask=FFFFFFFF nodemap=1 name=linux 
[ 5802.324262] DEBUG 17272:new_bind:1610: WUNLOCK_TASK pid=17272 count=0
[ 5802.324263] DEBUG 17272:new_bind:1616: WUNLOCK_PROC ep=-2 count=0
[ 5802.324264] DEBUG 17272:new_bind:1618: DC_INCREF counter=1
[ 5802.324266] DEBUG 17272:new_bind:1619: RUNLOCK_DC dc=0 count=0
[ 5802.324267] ERROR: 17272:dvk_ioctl:225: rcode=-2
[ 5802.325070] DEBUG 17272:dvk_ioctl:201: cmd=8004E31B arg=B786AB68
[ 5802.325072] DEBUG 17272:dvk_ioctl:221: DVK_CALL=27 (getdvsinfo) 
[ 5802.325116] DEBUG 17272:io_getdvsinfo:288: 
[ 5802.325118] DEBUG 17272:new_getdvsinfo:1789: local_nodeid=0 
[ 5802.328238] DEBUG 17272:dvk_ioctl:201: cmd=8004E30E arg=BF8B2B24
[ 5802.328241] DEBUG 17272:dvk_ioctl:221: DVK_CALL=14 (getdcinfo) 
[ 5802.328243] DEBUG 17272:io_getdcinfo:153: 
[ 5802.328264] DEBUG 17272:new_getdcinfo:1818: dcid=0 
[ 5802.371135] DEBUG 17272:check_caller:536: caller_pid=17272 caller_tgid=17272
[ 5802.372608] DEBUG 17272:check_caller:572: WLOCK_PROC ep=-2 count=0
[ 5802.372611] DEBUG 17272:check_caller:601: WUNLOCK_PROC ep=-2 count=0
[ 5802.372613] DEBUG 17272:check_caller:604: dcid=0
[ 5802.372615] DEBUG 17272:check_caller:608: RLOCK_DC dc=0 count=0
[ 5802.372616] DEBUG 17272:check_caller:612: RUNLOCK_DC dc=0 count=0
[ 5802.372618] DEBUG 17272:check_caller:618: caller_pid=17272 
[ 5802.372620] DEBUG 17272:new_getdcinfo:1836: RLOCK_DC dc=0 count=0
[ 5802.372633] DEBUG 17272:new_getdcinfo:1838: RUNLOCK_DC dc=0 count=0

HIZO EL BIND!!! 
root@node0:/usr/src/dvs/dvk-tests# cat /proc/dvs/DC0/procs 
DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2 17272/17272  0    0   20 27342 27342 27342 27342 linux
 
SEGUNDA EJECUCION !!! 
[ 6293.012942] DEBUG 17272:dvk_open:167: 
[ 6293.015110] DEBUG 17272:dvk_ioctl:201: cmd=4004E309 arg=490E7CD0
[ 6293.015113] DEBUG 17272:dvk_ioctl:221: DVK_CALL=9 (bind) 
[ 6293.015115] DEBUG 17272:io_bind:97: 
[ 6293.015119] DEBUG 17272:new_bind:1372: oper=0 dcid=0 param_pid=-1 endpoint=-2 nodeid=-1
[ 6293.015121] DEBUG 17272:new_bind:1394: RLOCK_DC dc=0 count=0
[ 6293.015123] DEBUG 17272:new_bind:1407: WLOCK_PROC ep=-2 count=0
[ 6293.015127] DEBUG 17272:new_bind:1411: nr=-2 endp=-2 dcid=0 flags=0 misc=20 lpid=17272 vpid=17272 nodeid=0 name=linux 
[ 6293.015128] DEBUG 17272:new_bind:1412: WUNLOCK_PROC ep=-2 count=0
[ 6293.015129] DEBUG 17272:new_bind:1413: RUNLOCK_DC dc=0 count=0
[ 6293.015131] ERROR: 17272:new_bind:1413: rcode=-337
[ 6293.015132] ERROR: 17272:dvk_ioctl:225: rcode=-337
[ 6293.016587] DEBUG 17272:dvk_ioctl:201: cmd=8004E31B arg=B7B06B68
[ 6293.016590] DEBUG 17272:dvk_ioctl:221: DVK_CALL=27 (getdvsinfo) 
[ 6293.016592] DEBUG 17272:io_getdvsinfo:288: 
[ 6293.016593] DEBUG 17272:new_getdvsinfo:1789: local_nodeid=0 
[ 6293.070556] DEBUG 17272:dvk_ioctl:201: cmd=8004E30E arg=BFB4EB24
[ 6293.070560] DEBUG 17272:dvk_ioctl:221: DVK_CALL=14 (getdcinfo) 
[ 6293.070561] DEBUG 17272:io_getdcinfo:153: 
[ 6293.070583] DEBUG 17272:new_getdcinfo:1818: dcid=0 
[ 6293.070587] DEBUG 17272:check_caller:536: caller_pid=17272 caller_tgid=17272
[ 6293.070589] DEBUG 17272:check_caller:572: WLOCK_PROC ep=-2 count=0
[ 6293.070591] DEBUG 17272:check_caller:601: WUNLOCK_PROC ep=-2 count=0
[ 6293.070592] DEBUG 17272:check_caller:604: dcid=0
[ 6293.070594] DEBUG 17272:check_caller:608: RLOCK_DC dc=0 count=0
[ 6293.070595] DEBUG 17272:check_caller:612: RUNLOCK_DC dc=0 count=0
[ 6293.070596] DEBUG 17272:check_caller:618: caller_pid=17272 
[ 6293.070598] DEBUG 17272:new_getdcinfo:1836: RLOCK_DC dc=0 count=0
[ 6293.070600] DEBUG 17272:new_getdcinfo:1838: RUNLOCK_DC dc=0 count=0
 
 ======================================= EN UML =====================================

DMESG UML PREVIO 
root@node0:/usr/src/dvs/dvk-proxies/test# dmesg | grep dvk
[    0.100000] UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
[    0.100000] DEBUG 1:uml_dvk_init_module:200: UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
[    0.100000] DEBUG 1:uml_dvk_init_module:205: UML-kernel PID=17272  UML-kernel TID=17272

PRIMERA EJECUCION
root@node0:/usr/src/dvs/dvk-proxies/test# ./copy_server 0 11
DEBUG 677:dvk_open:47: Open dvk device file /dev/dvk
DEBUG 677:uml_dvk_open:146: dvk_dev=/dev/dvk
DEBUG 677:uml_dvk_open:154: dvk_fd=19
DEBUG 677:uml_bind_X:64: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
DEBUG 677:uml_bind_X:72: os_ioctl_generic ret=-2
DEBUG 677:uml_dvk_open:165: dvk_bind ep=-2
DEBUG 677:dvk_getdvsinfo:120: 
DEBUG 677:uml_dvk_ioctl:113: uml_pid=17498 cmd=8004E31B arg=BF8B2B68
DEBUG 677:uml_dvk_ioctl:120: uml_pid=17498 dvsu_ptr=B786AB68 arg=BF8B2B68
DEBUG 677:uml_dvk_ioctl:132: rcode=0
DEBUG 677:dvk_getdvsinfo:122: ioctl ret=0
 copy_server.c:main:47:local_nodeid=0
 copy_server.c:main:48:d_nr_dcs=0 d_nr_nodes=0 d_nr_procs=0 d_nr_tasks=0 d_nr_sysprocs=0 
DEBUG 677:dvk_getdcinfo:170: dcid=0
DEBUG 677:uml_dvk_ioctl:113: uml_pid=17498 cmd=8004E30E arg=BF8B2B24
DEBUG 677:uml_dvk_ioctl:132: rcode=0
DEBUG 677:dvk_getdcinfo:174: ioctl ret=0 errno=0
 copy_server.c:main:58:dc_dcid=0 dc_nr_procs=0 dc_nr_tasks=0 dc_nr_sysprocs=0 dc_nr_nodes=0
 copy_server.c:main:59:flags=0 dc_nodes=0 dc_pid=1073780313 dc_name=
svr_ep must be > 0 and < 0
DEBUG 677:uml_dvk_release:172: dvk_dev=/dev/dvk

DMESG UML LUEGO DE EJECUTAR 
[  204.670000] DEBUG 677:uml_dvk_open:146: dvk_dev=/dev/dvk
[  204.670000] DEBUG 677:uml_dvk_open:154: dvk_fd=19
[  204.670000] DEBUG 677:uml_bind_X:64: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
[  204.670000] DEBUG 677:uml_bind_X:72: os_ioctl_generic ret=-2
[  204.670000] DEBUG 677:uml_dvk_open:165: dvk_bind ep=-2
[  204.670000] DEBUG 677:uml_dvk_ioctl:113: uml_pid=17498 cmd=8004E31B arg=BF8B2B68
[  204.670000] DEBUG 677:uml_dvk_ioctl:120: uml_pid=17498 dvsu_ptr=B786AB68 arg=BF8B2B68
[  204.670000] DEBUG 677:uml_dvk_ioctl:132: rcode=0
[  204.670000] DEBUG 677:uml_dvk_ioctl:113: uml_pid=17498 cmd=8004E30E arg=BF8B2B24
[  204.720000] DEBUG 677:uml_dvk_ioctl:132: rcode=0
[  204.730000] DEBUG 677:uml_dvk_release:172: dvk_dev=/dev/dvk


SEGUNDA EJECUCION 
root@node0:/usr/src/dvs/dvk-proxies/test# ./copy_server 0 12
DEBUG 679:dvk_open:47: Open dvk device file /dev/dvk
DEBUG 679:uml_dvk_open:146: dvk_dev=/dev/dvk
DEBUG 679:uml_dvk_open:154: dvk_fd=19
DEBUG 679:uml_bind_X:64: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
DEBUG 679:uml_bind_X:72: os_ioctl_generic ret=-337
DEBUG 679:uml_dvk_open:165: dvk_bind ep=-337
DEBUG 679:dvk_getdvsinfo:120: 
DEBUG 679:uml_dvk_ioctl:113: uml_pid=17507 cmd=8004E31B arg=BFB4EB68
DEBUG 679:uml_dvk_ioctl:120: uml_pid=17507 dvsu_ptr=B7B06B68 arg=BFB4EB68
DEBUG 679:uml_dvk_ioctl:132: rcode=0
DEBUG 679:dvk_getdvsinfo:122: ioctl ret=0
 copy_server.c:main:47:local_nodeid=0
 copy_server.c:main:48:d_nr_dcs=0 d_nr_nodes=0 d_nr_procs=0 d_nr_tasks=0 d_nr_sysprocs=0 
DEBUG 679:dvk_getdcinfo:170: dcid=0
DEBUG 679:uml_dvk_ioctl:113: uml_pid=17507 cmd=8004E30E arg=BFB4EB24
DEBUG 679:uml_dvk_ioctl:132: rcode=0
DEBUG 679:dvk_getdcinfo:174: ioctl ret=0 errno=0
 copy_server.c:main:58:dc_dcid=0 dc_nr_procs=0 dc_nr_tasks=0 dc_nr_sysprocs=0 dc_nr_nodes=0
 copy_server.c:main:59:flags=0 dc_nodes=0 dc_pid=1073780313 dc_name=
svr_ep must be > 0 and < 0
DEBUG 679:uml_dvk_release:172: dvk_dev=/dev/dvk

[  695.810000] DEBUG 679:uml_dvk_open:146: dvk_dev=/dev/dvk
[  695.810000] DEBUG 679:uml_dvk_open:154: dvk_fd=19
[  695.810000] DEBUG 679:uml_bind_X:64: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
[  695.810000] DEBUG 679:uml_bind_X:72: os_ioctl_generic ret=-337
[  695.810000] DEBUG 679:uml_dvk_open:165: dvk_bind ep=-337
[  695.810000] DEBUG 679:uml_dvk_ioctl:113: uml_pid=17507 cmd=8004E31B arg=BFB4EB68
[  695.810000] DEBUG 679:uml_dvk_ioctl:120: uml_pid=17507 dvsu_ptr=B7B06B68 arg=BFB4EB68
[  695.810000] DEBUG 679:uml_dvk_ioctl:132: rcode=0
[  695.860000] DEBUG 679:uml_dvk_ioctl:113: uml_pid=17507 cmd=8004E30E arg=BFB4EB24
[  695.870000] DEBUG 679:uml_dvk_ioctl:132: rcode=0
[  695.960000] DEBUG 679:uml_dvk_release:172: dvk_dev=/dev/dvk


ATENCION:
uml_pid = userspace_pid[0]; 
Aparentemente el PID no es de UML, es del HOST.

Se modifico
	int uml_pid = get_current_pid();

================================== SEGUNDO SET DE PRUEBAS ================================

EN EL HOST 
root@node0:/usr/src/dvs/dvk-tests# ps -ef | grep linux
root       354     1  0 17:14 tty1     00:00:00 /sbin/agetty --noclear tty1 linux
root     20142 17587 10 19:31 pts/2    00:00:02 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root     20147 20142  0 19:31 pts/2    00:00:00 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root     20148 20142  5 19:31 pts/2    00:00:01 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root     20149 20142  0 19:31 pts/2    00:00:00 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root     20152 20142  1 19:31 pts/2    00:00:00 [linux]
root     20173 20142  0 19:31 pts/2    00:00:00 [linux]
root     20196 20142  0 19:31 pts/2    00:00:00 [linux]
root     20280 20142  0 19:31 pts/2    00:00:00 [linux]
root     20282 20142  0 19:31 pts/2    00:00:00 [linux]
root     20297 20142  0 19:31 pts/2    00:00:00 [linux]
root     20298 20142  0 19:31 pts/2    00:00:00 [linux]
root     20299 20142  0 19:31 pts/2    00:00:00 [linux]
root     20300 20142  0 19:31 pts/2    00:00:00 [linux]
root     20301 20142  0 19:31 pts/2    00:00:00 [linux]
root     20302 20142  0 19:31 pts/2    00:00:00 [linux]
root     20307 17434  0 19:31 pts/1    00:00:00 grep linux

EN UML 

root@node0:/usr/src/dvs/dvk-proxies/test# mknod /dev/dvk c 33 0
root@node0:/usr/src/dvs/dvk-proxies/test# ./copy_server 0 13                                         
DEBUG 676:dvk_open:47: Open dvk device file /dev/dvk
DEBUG 676:uml_dvk_open:149: dvk_dev=/dev/dvk
DEBUG 676:uml_dvk_open:157: dvk_fd=19
DEBUG 676:uml_bind_X:66: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
DEBUG 676:uml_bind_X:74: os_ioctl_generic ret=-2
DEBUG 676:uml_dvk_open:168: dvk_bind ep=-2
DEBUG 676:dvk_getdvsinfo:120: 
DEBUG 676:uml_dvk_ioctl:116: uml_pid=676 cmd=8004E31B arg=BF981B68
DEBUG 676:uml_dvk_ioctl:123: uml_pid=676 dvsu_ptr=B7939B68 arg=BF981B68
DEBUG 676:uml_dvk_ioctl:135: rcode=0
DEBUG 676:dvk_getdvsinfo:122: ioctl ret=0
 copy_server.c:main:47:local_nodeid=0
 copy_server.c:main:48:d_nr_dcs=0 d_nr_nodes=0 d_nr_procs=0 d_nr_tasks=0 d_nr_sysprocs=0 
DEBUG 676:dvk_getdcinfo:170: dcid=0
DEBUG 676:uml_dvk_ioctl:116: uml_pid=676 cmd=8004E30E arg=BF981B24 
DEBUG 676:uml_dvk_ioctl:135: rcode=0
DEBUG 676:dvk_getdcinfo:174: ioctl ret=0 errno=0
 copy_server.c:main:58:dc_dcid=0 dc_nr_procs=0 dc_nr_tasks=0 dc_nr_sysprocs=0 dc_nr_nodes=0
 copy_server.c:main:59:flags=0 dc_nodes=0 dc_pid=1073780313 dc_name=
svr_ep must be > 0 and < 0
DEBUG 676:uml_dvk_release:175: dvk_dev=/dev/dvk

[  150.200000] DEBUG 676:uml_dvk_open:149: dvk_dev=/dev/dvk
[  150.210000] DEBUG 676:uml_dvk_open:157: dvk_fd=19
[  150.210000] DEBUG 676:uml_bind_X:66: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
[  150.210000] DEBUG 676:uml_bind_X:74: os_ioctl_generic ret=-2
[  150.210000] DEBUG 676:uml_dvk_open:168: dvk_bind ep=-2
[  150.210000] DEBUG 676:uml_dvk_ioctl:116: uml_pid=676 cmd=8004E31B arg=BF981B68
[  150.210000] DEBUG 676:uml_dvk_ioctl:123: uml_pid=676 dvsu_ptr=B7939B68 arg=BF981B68
[  150.210000] DEBUG 676:uml_dvk_ioctl:135: rcode=0
[  150.210000] DEBUG 676:uml_dvk_ioctl:116: uml_pid=676 cmd=8004E30E arg=BF981B24
[  150.210000] DEBUG 676:uml_dvk_ioctl:135: rcode=0
[  150.210000] DEBUG 676:uml_dvk_release:175: dvk_dev=/dev/dvk


EN EL HOST 
root@node0:/usr/src/dvs/dvk-tests# cat /proc/dvs/DC0/procs 
DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0  -2    -2 20142/20142  0    0   20 27342 27342 27342 27342 linux 
 
  8491.974276] DEBUG 20142:dvk_open:167: 
[ 8491.974643] DEBUG 20142:dvk_ioctl:201: cmd=4004E309 arg=487D7CD0
[ 8491.974645] DEBUG 20142:dvk_ioctl:221: DVK_CALL=9 (bind) 
[ 8491.974647] DEBUG 20142:io_bind:97: 
[ 8491.974651] DEBUG 20142:new_bind:1372: oper=0 dcid=0 param_pid=-1 endpoint=-2 nodeid=-1
[ 8491.974653] DEBUG 20142:new_bind:1394: RLOCK_DC dc=0 count=0
[ 8491.974655] DEBUG 20142:new_bind:1407: WLOCK_PROC ep=-2 count=0
[ 8491.974657] DEBUG 20142:init_proc_desc:16: p_name=$noname dcid=0
[ 8491.974660] DEBUG 20142:new_bind:1441: param_pid=-1 lpid=20142 vpid=20142 tid=20142
[ 8491.974662] DEBUG 20142:new_bind:1465: SELF_BIND param_pid=-1 lpid=20142 vpid=20142 tid=20142
[ 8491.974663] DEBUG 20142:new_bind:1487: WUNLOCK_PROC ep=-2 count=0
[ 8491.974665] DEBUG 20142:new_bind:1490: WLOCK_TASK pid=20142 count=0
[ 8491.974666] DEBUG 20142:new_bind:1491: WLOCK_PROC ep=-2 count=0
[ 8491.974668] DEBUG 20142:new_bind:1527: increment the reference count of the task struct=20142 count=2
[ 8491.974669] DEBUG 20142:new_bind:1538: process p_name=linux *p_name_ptr=linux
[ 8491.974672] DEBUG 20142:new_bind:1595: nr=-2 endp=-2 dcid=0 flags=0 misc=20 lpid=20142 vpid=20142 nodeid=0 name=linux 
[ 8491.974674] DEBUG 20142:new_bind:1596: nr=-2 endp=-2 dcid=0 lpid=20142 p_cpumask=FFFFFFFF nodemap=1 name=linux 
[ 8491.974676] DEBUG 20142:new_bind:1610: WUNLOCK_TASK pid=20142 count=0
[ 8491.974677] DEBUG 20142:new_bind:1616: WUNLOCK_PROC ep=-2 count=0
[ 8491.974678] DEBUG 20142:new_bind:1618: DC_INCREF counter=1
[ 8491.974680] DEBUG 20142:new_bind:1619: RUNLOCK_DC dc=0 count=0
[ 8491.974681] ERROR: 20142:dvk_ioctl:225: rcode=-2
[ 8491.975420] DEBUG 20142:dvk_ioctl:201: cmd=8004E31B arg=B7939B68
[ 8491.975422] DEBUG 20142:dvk_ioctl:221: DVK_CALL=27 (getdvsinfo) 
[ 8491.975423] DEBUG 20142:io_getdvsinfo:288: 
[ 8491.975425] DEBUG 20142:new_getdvsinfo:1789: local_nodeid=0 
[ 8491.977152] DEBUG 20142:dvk_ioctl:201: cmd=8004E30E arg=BF981B24
[ 8491.977154] DEBUG 20142:dvk_ioctl:221: DVK_CALL=14 (getdcinfo) 
[ 8491.977156] DEBUG 20142:io_getdcinfo:153: 
[ 8491.977173] DEBUG 20142:new_getdcinfo:1818: dcid=0 
[ 8491.977176] DEBUG 20142:check_caller:536: caller_pid=20142 caller_tgid=20142
[ 8491.977178] DEBUG 20142:check_caller:572: WLOCK_PROC ep=-2 count=0
[ 8491.977179] DEBUG 20142:check_caller:601: WUNLOCK_PROC ep=-2 count=0
[ 8491.977180] DEBUG 20142:check_caller:604: dcid=0
[ 8491.977182] DEBUG 20142:check_caller:608: RLOCK_DC dc=0 count=0
[ 8491.977183] DEBUG 20142:check_caller:612: RUNLOCK_DC dc=0 count=0
[ 8491.977184] DEBUG 20142:check_caller:618: caller_pid=20142 
[ 8491.977186] DEBUG 20142:new_getdcinfo:1836: RLOCK_DC dc=0 count=0
[ 8491.977195] DEBUG 20142:new_getdcinfo:1838: RUNLOCK_DC dc=0 count=0

SEGUNDA EJECUCION 
=========================================== EN UML ==============================
root@node0:/usr/src/dvs/dvk-proxies/test# ./copy_server 0 14
DEBUG 679:dvk_open:47: Open dvk device file /dev/dvk
DEBUG 679:uml_dvk_open:149: dvk_dev=/dev/dvk
DEBUG 679:uml_dvk_open:157: dvk_fd=19
DEBUG 679:uml_bind_X:66: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
DEBUG 679:uml_bind_X:74: os_ioctl_generic ret=-337
DEBUG 679:uml_dvk_open:168: dvk_bind ep=-337
DEBUG 679:dvk_getdvsinfo:120: 
DEBUG 679:uml_dvk_ioctl:116: uml_pid=679 cmd=8004E31B arg=BFC64B68
DEBUG 679:uml_dvk_ioctl:123: uml_pid=679 dvsu_ptr=B7C1CB68 arg=BFC64B68
DEBUG 679:uml_dvk_ioctl:135: rcode=0
DEBUG 679:dvk_getdvsinfo:122: ioctl ret=0
 copy_server.c:main:47:local_nodeid=0
 copy_server.c:main:48:d_nr_dcs=0 d_nr_nodes=0 d_nr_procs=0 d_nr_tasks=0 d_nr_sysprocs=0 
DEBUG 679:dvk_getdcinfo:170: dcid=0
DEBUG 679:uml_dvk_ioctl:116: uml_pid=679 cmd=8004E30E arg=BFC64B24
DEBUG 679:uml_dvk_ioctl:135: rcode=0
DEBUG 679:dvk_getdcinfo:174: ioctl ret=0 errno=0
 copy_server.c:main:58:dc_dcid=0 dc_nr_procs=0 dc_nr_tasks=0 dc_nr_sysprocs=0 dc_nr_nodes=0
 copy_server.c:main:59:flags=0 dc_nodes=0 dc_pid=1073780313 dc_name=
svr_ep must be > 0 and < 0
DEBUG 679:uml_dvk_release:175: dvk_dev=/dev/dvk

[  370.740000] DEBUG 679:uml_dvk_open:149: dvk_dev=/dev/dvk
[  370.740000] DEBUG 679:uml_dvk_open:157: dvk_fd=19
[  370.740000] DEBUG 679:uml_bind_X:66: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
[  370.740000] DEBUG 679:uml_bind_X:74: os_ioctl_generic ret=-337
[  370.740000] DEBUG 679:uml_dvk_open:168: dvk_bind ep=-337
[  370.740000] DEBUG 679:uml_dvk_ioctl:116: uml_pid=679 cmd=8004E31B arg=BFC64B68
[  370.740000] DEBUG 679:uml_dvk_ioctl:123: uml_pid=679 dvsu_ptr=B7C1CB68 arg=BFC64B68
[  370.740000] DEBUG 679:uml_dvk_ioctl:135: rcode=0
[  370.740000] DEBUG 679:uml_dvk_ioctl:116: uml_pid=679 cmd=8004E30E arg=BFC64B24
[  370.740000] DEBUG 679:uml_dvk_ioctl:135: rcode=0
[  370.770000] DEBUG 679:uml_dvk_release:175: dvk_dev=/dev/dvk

=========================================== EN HOST ===========================

[ 8712.521935] DEBUG 20142:dvk_open:167: 
[ 8712.524454] DEBUG 20142:dvk_ioctl:201: cmd=4004E309 arg=487D7CD0
[ 8712.524458] DEBUG 20142:dvk_ioctl:221: DVK_CALL=9 (bind) 
[ 8712.524459] DEBUG 20142:io_bind:97: 
[ 8712.524464] DEBUG 20142:new_bind:1372: oper=0 dcid=0 param_pid=-1 endpoint=-2 nodeid=-1
[ 8712.524466] DEBUG 20142:new_bind:1394: RLOCK_DC dc=0 count=0
[ 8712.524468] DEBUG 20142:new_bind:1407: WLOCK_PROC ep=-2 count=0
[ 8712.524471] DEBUG 20142:new_bind:1411: nr=-2 endp=-2 dcid=0 flags=0 misc=20 lpid=20142 vpid=20142 nodeid=0 name=linux 
[ 8712.524472] DEBUG 20142:new_bind:1412: WUNLOCK_PROC ep=-2 count=0
[ 8712.524473] DEBUG 20142:new_bind:1413: RUNLOCK_DC dc=0 count=0
[ 8712.524475] ERROR: 20142:new_bind:1413: rcode=-337
[ 8712.524476] ERROR: 20142:dvk_ioctl:225: rcode=-337
[ 8712.525058] DEBUG 20142:dvk_ioctl:201: cmd=8004E31B arg=B7C1CB68
[ 8712.525060] DEBUG 20142:dvk_ioctl:221: DVK_CALL=27 (getdvsinfo) 
[ 8712.525061] DEBUG 20142:io_getdvsinfo:288: 
[ 8712.525063] DEBUG 20142:new_getdvsinfo:1789: local_nodeid=0 
[ 8712.525929] DEBUG 20142:dvk_ioctl:201: cmd=8004E30E arg=BFC64B24
[ 8712.525931] DEBUG 20142:dvk_ioctl:221: DVK_CALL=14 (getdcinfo) 
[ 8712.525932] DEBUG 20142:io_getdcinfo:153: 
[ 8712.525941] DEBUG 20142:new_getdcinfo:1818: dcid=0 
[ 8712.525944] DEBUG 20142:check_caller:536: caller_pid=20142 caller_tgid=20142
[ 8712.525945] DEBUG 20142:check_caller:572: WLOCK_PROC ep=-2 count=0
[ 8712.525947] DEBUG 20142:check_caller:601: WUNLOCK_PROC ep=-2 count=0
[ 8712.525948] DEBUG 20142:check_caller:604: dcid=0
[ 8712.525949] DEBUG 20142:check_caller:608: RLOCK_DC dc=0 count=0
[ 8712.525951] DEBUG 20142:check_caller:612: RUNLOCK_DC dc=0 count=0
[ 8712.525952] DEBUG 20142:check_caller:618: caller_pid=20142 
[ 8712.525954] DEBUG 20142:new_getdcinfo:1836: RLOCK_DC dc=0 count=0
[ 8712.525955] DEBUG 20142:new_getdcinfo:1838: RUNLOCK_DC dc=0 count=0


COMPROBADO EN UML !!!!!!
root@node0:/usr/src/dvs/dvk-proxies/test# ./copy_server 0 14 &
[1] 681 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<PID EN UML

root@node0:/usr/src/dvs/dvk-proxies/test# DEBUG 681:dvk_open:47: Open dvk device file /dev/dvk
DEBUG 681:uml_dvk_open:149: dvk_dev=/dev/dvk
DEBUG 681:uml_dvk_open:157: dvk_fd=19
DEBUG 681:uml_bind_X:66: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
DEBUG 681:uml_bind_X:74: os_ioctl_generic ret=-337
DEBUG 681:uml_dvk_open:168: dvk_bind ep=-337
DEBUG 681:dvk_getdvsinfo:120: 
DEBUG 681:uml_dvk_ioctl:116: uml_pid=681 cmd=8004E31B arg=BFC68B68       <<<<<<<< PID UML 
DEBUG 681:uml_dvk_ioctl:123: uml_pid=681 dvsu_ptr=B7C20B68 arg=BFC68B68
DEBUG 681:uml_dvk_ioctl:135: rcode=0
DEBUG 681:dvk_getdvsinfo:122: ioctl ret=0
 copy_server.c:main:47:local_nodeid=0
 copy_server.c:main:48:d_nr_dcs=0 d_nr_nodes=0 d_nr_procs=0 d_nr_tasks=0 d_nr_sysprocs=0 
DEBUG 681:dvk_getdcinfo:170: dcid=0
DEBUG 681:uml_dvk_ioctl:116: uml_pid=681 cmd=8004E30E arg=BFC68B24
DEBUG 681:uml_dvk_ioctl:135: rcode=0
DEBUG 681:dvk_getdcinfo:174: ioctl ret=0 errno=0
 copy_server.c:main:58:dc_dcid=0 dc_nr_procs=0 dc_nr_tasks=0 dc_nr_sysprocs=0 dc_nr_nodes=0
 copy_server.c:main:59:flags=0 dc_nodes=0 dc_pid=1073780313 dc_name=
svr_ep must be > 0 and < 0
DEBUG 681:uml_dvk_release:175: dvk_dev=/dev/dvk
[1]+  Exit 1                  ./copy_server 0 14

=========================================================================================================
=========================================================================================================
=========================================================================================================
SE TRATA DE HACER BIND AL PROCESO UML 

	} else if ( cmd == DVK_IOCSDVKBIND){ 
		bind_ptr = to_phys(arg);
		DVKDEBUG(DBGPARAMS,"uml_pid=%d uml_vpid=%d cmd=%X arg=%X\n", uml_pid, uml_vpid, cmd, arg);
		DVKDEBUG(DBGPARAMS, "BEFORE cmd=%d dcid=%d pid=%d endpoint=%d nodeid=%d\n", 
			bind_ptr->parm_cmd, bind_ptr->parm_dcid, bind_ptr->parm_pid, bind_ptr->parm_ep, bind_ptr->parm_nodeid);
		bind_ptr->parm_cmd  = LCL_BIND;
		bind_ptr->parm_dcid = DCID0;
		bind_ptr->parm_pid  = uml_pid;
		bind_ptr->parm_nodeid   = LOCALNODE;
		DVKDEBUG(DBGPARAMS, "AFTER cmd=%d dcid=%d pid=%d endpoint=%d nodeid=%d\n", 
			bind_ptr->parm_cmd, bind_ptr->parm_dcid, bind_ptr->parm_pid, bind_ptr->parm_ep, bind_ptr->parm_nodeid);		
		rcode = os_ioctl_generic(file->private_data, cmd, dvsu_ptr);
		
		
EN UML 
root@node0:/usr/src/dvs/dvk-tests# ./test_bind  0 15 
DEBUG 674:dvk_open:47: Open dvk device file /dev/dvk
DEBUG 674:uml_dvk_open:170: dvk_dev=/dev/dvk
DEBUG 674:uml_dvk_open:178: dvk_fd=19
DEBUG 674:uml_bind_X:76: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
DEBUG 674:uml_bind_X:84: os_ioctl_generic ret=-337
DEBUG 674:uml_dvk_open:188: dvk_bind ep=-337
PARENT dvk_bind Binding process 674 to DC0 with p_nr=15
DEBUG 674:dvk_bind_X:607: cmd=0 dcid=0 pid=-1 endpoint=15 nodeid=-1
DEBUG 674:uml_dvk_ioctl:126: uml_pid=28274 uml_vpid=674 cmd=4004E309 arg=BFD54CD8
DEBUG 674:uml_dvk_ioctl:141: uml_pid=28274 uml_vpid=674 cmd=4004E309 arg=BFD54CD8

EIP: 0073:[<08065bae>] CPU: 0 Not tainted ESP: 007b:49037de0
 EFLAGS: 00010216
    Not tainted
EAX: 00000051 EBX: bfd54cd8 ECX: 00000006 EDX: 0832eca8
ESI: 4004e309 EDI: b7d0ccd8 EBP: 49037e18 DS: 007b ES: 007b
Kernel panic - not syncing: Kernel tried to access user memory at addr 0xb7d0cce4, ip 0x8065bae
CPU: 0 PID: 674 Comm: test_bind Not tainted 4.9.88 #3
Stack:
 082db19e 000002a2 0827cc20 0000008d 00006e72 000002a2 4004e309 bfd54cd8
 000002a2 00006e72 48656de0 bfd54cd8 00000003 484a66d0 49037e2c 080e75fa
 484bae60 4004e309 bfd54cd8 49037ea4 080e8123 484bae60 4004e309 bfd54cd8
Call Trace:
 [<080e75fa>] vfs_ioctl+0x20/0x2c
 [<080e8123>] do_vfs_ioctl+0x59b/0x9b0
 [<080daf23>] ? vfs_write+0x111/0x14a
 [<080e8564>] SyS_ioctl+0x2c/0x49
 [<0805c577>] handle_syscall+0x6f/0x84
 [<0806a42b>] userspace+0x2d6/0x332
 [<0806d538>] ? os_set_thread_area+0x13/0x25
 [<0806c75c>] ? do_set_thread_area+0x14/0x35
 [<0806c8ae>] ? arch_switch_tls+0xc9/0xec
 [<08059fae>] fork_handler+0x56/0x5b
Abortado


NUEVA PRUEBA MODIFICANDO 
root@node0:/usr/src/dvs/dvk-tests# ./test_bind 0 15
DEBUG 672:dvk_open:47: Open dvk device file /dev/dvk
DEBUG 672:uml_dvk_open:171: dvk_dev=/dev/dvk
DEBUG 672:uml_dvk_open:179: dvk_fd=19
DEBUG 672:uml_bind_X:76: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
DEBUG 672:uml_bind_X:84: os_ioctl_generic ret=-2
DEBUG 672:uml_dvk_open:189: dvk_bind ep=-2
PARENT dvk_bind Binding process 672 to DC0 with p_nr=15
DEBUG 672:dvk_bind_X:607: cmd=0 dcid=0 pid=-1 endpoint=15 nodeid=-1
DEBUG 672:uml_dvk_ioctl:126: uml_pid=31019 uml_vpid=672 cmd=4004E309 arg=BF95CCE8
DEBUG 672:uml_dvk_ioctl:142: uml_pid=31019 uml_vpid=672 cmd=4004E309 arg=BF95CCE8
DEBUG 672:uml_dvk_ioctl:144: BEFORE cmd=0 dcid=0 pid=0 endpoint=0 nodeid=0        <<<<<<<<<<<<< ESTA TODO MAL 
DEBUG 672:uml_dvk_ioctl:150: AFTER cmd=1 dcid=0 pid=31019 endpoint=0 nodeid=-1
DEBUG 672:uml_dvk_ioctl:157: rcode=-336        <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< EDVSSLOTUSED
DEBUG 672:dvk_bind_X:616: ioctl ret=-1 errno=336
ERROR: 672:dvk_bind_X:623: rcode=-336
ERROR: test_bind.c:main:27: rcode=-336
DEBUG 672:dvk_getep:109: pid=672
DEBUG 672:uml_dvk_ioctl:126: uml_pid=31019 uml_vpid=672 cmd=8004E31A arg=2A0
DEBUG 672:uml_dvk_ioctl:157: rcode=-338 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< EDVSBADRANGE
DEBUG 672:dvk_getep:111: ioctl ret=-1 errno=338
ERROR: 672:dvk_getep:112: rcode=-338
PARENT ep=-336 dvk_getep=-338
PARENT dvk_lclbind 673 to DC0 with p_nr+index=16
DEBUG 672:dvk_bind_X:607: cmd=1 dcid=0 pid=673 endpoint=16 nodeid=-1
DEBUG 672:uml_dvk_ioctl:126: uml_pid=31019 uml_vpid=672 cmd=4004E309 arg=BF95CCE8
DEBUG 672:uml_dvk_ioctl:142: uml_pid=31019 uml_vpid=672 cmd=4004E309 arg=BF95CCE8
DEBUG 672:uml_dvk_ioctl:144: BEFORE cmd=1 dcid=0 pid=31019 endpoint=0 nodeid=-1
DEBUG 672:uml_dvk_ioctl:150: AFTER cmd=1 dcid=0 pid=31019 endpoint=0 nodeid=-1
DEBUG 672:uml_dvk_ioctl:157: rcode=-336
CHILD[1] dvk_lclbind
DEBUG 672:dvk_bind_X:616: ioctl ret=-1 errno=336
ERROR: 672:dvk_bind_X:623: rcode=-336
ERROR: test_bind.c:main:44: rcode=-336
DEBUG 672:dvk_getep:109: pid=673
DEBUG 672:uml_dvk_ioctl:126: uml_pid=31019 uml_vpid=672 cmd=8004E31A arg=2A1
DEBUG 672:uml_dvk_ioctl:157: rcode=-338
DEBUG 672:dvk_getep:111: ioctl ret=-1 errno=338
ERROR: 672:dvk_getep:112: rcode=-338
PARENT ep=-336 dvk_getep=-338
CHILD[2] dvk_replbind Binding process 674 to DC0 with p_nr=17
DEBUG 674:dvk_bind_X:607: cmd=4 dcid=0 pid=674 endpoint=17 nodeid=-1
DEBUG 674:uml_dvk_ioctl:126: uml_pid=31021 uml_vpid=674 cmd=4004E309 arg=BF95CCE8
DEBUG 674:uml_dvk_ioctl:142: uml_pid=31021 uml_vpid=674 cmd=4004E309 arg=BF95CCE8
DEBUG 674:uml_dvk_ioctl:144: BEFORE cmd=1 dcid=0 pid=31019 endpoint=0 nodeid=-1
DEBUG 674:uml_dvk_ioctl:150: AFTER cmd=1 dcid=0 pid=31021 endpoint=0 nodeid=-1
DEBUG 674:uml_dvk_ioctl:157: rcode=-336
PARENT waiting child index=2
DEBUG 674:dvk_bind_X:616: ioctl ret=-1 errno=336
ERROR: 674:dvk_bind_X:623: rcode=-336
ERROR: test_bind.c:main:53: rcode=-336
DEBUG 674:dvk_getep:109: pid=674
DEBUG 674:uml_dvk_ioctl:126: uml_pid=31021 uml_vpid=674 cmd=8004E31A arg=2A2
DEBUG 674:uml_dvk_ioctl:157: rcode=-338
DEBUG 674:dvk_getep:111: ioctl ret=-1 errno=338
ERROR: 674:dvk_getep:112: rcode=-338
CHILD[2] ep=-336 dvk_getep=-338
DEBUG 673:dvk_getep:109: pid=673
DEBUG 673:uml_dvk_ioctl:126: uml_pid=31020 uml_vpid=673 cmd=8004E31A arg=2A1
DEBUG 673:uml_dvk_ioctl:157: rcode=-338
DEBUG 673:dvk_getep:111: ioctl ret=-1 errno=338
ERROR: 673:dvk_getep:112: rcode=-338
CHILD[1] dvk_getep=-338

		
RESUMEN: NO ES LA DIRECCION DE MEMORIA CORRECTA

	SOLUCION COMPLICADA:
			Si no se encuentra la forma de localizar la direccion del proceso UML entonces se va a tener que manejar con copias
			Para ellos hay que:
				Cada proceso UML que haga BIND debera crear un hilo en el kernel que hara el bind 
				Cada IPC que haga el proceso UML sera hecha por su hilo correspondiente
				Hay que mantener una relacion proceso_UML-Thread_KERNEL_UML
				

DONDE HAY mmap()????????
kernel/syscall.c:long old_mmap(unsigned long addr, unsigned long len,
kernel/tlb.c:static int add_mmap(unsigned long virt, unsigned long phys, unsigned long len,
kernel/tlb.c:				ret = add_mmap(addr, pte_val(*pte) & PAGE_MASK,
kernel/skas/mmu.c:void arch_exit_mmap(struct mm_struct *mm)
include/asm/mmu_context.h:static inline void arch_dup_mmap(struct mm_struct *oldmm, struct mm_struct *mm)
include/asm/mmu_context.h:extern void arch_exit_mmap(struct mm_struct *mm);
os-Linux/mem.c:	addr = mmap(NULL, UM_KERN_PAGE_SIZE,
os-Linux/skas/process.c:		addr = mmap((void *) STUB_DATA,
os-Linux/skas/process.c:	stack = mmap(NULL, UM_KERN_PAGE_SIZE,
drivers/mmapper_kern.c:static int mmapper_mmap(struct file *file, struct vm_area_struct *vma)

EN QUE DIRECTORIO CREA LOS ARCHIVOS TEMPORALES ???
os-Linux/skas/process.c
	static int userspace_tramp(void *stack){
		
	}


Skas effects on the host
You will notice some differences on the host. If you run ps, you 
will notice only four processes per UML rather than the dozens 
that you see in tt mode. They are 
The UML kernel thread, which runs in the separate kernel 
address space, executes kernel code, and does system call 
interception on UML processes 
•
The UML userspace thread, which runs all UML process 
code and switches between host address spaces on each 
UML context switch 
•
The ubd driver asynchronous IO thread •
The write SIGIO emulation thread  •

Quien usa clone??
drivers/ubd_user.c:     pid = clone(io_thread, (void *) sp, CLONE_FILES | CLONE_VM, NULL);
os-Linux/helper.c:      pid = clone(helper_child, (void *) sp, CLONE_VM, &data);
os-Linux/helper.c:      pid = clone(proc, (void *) sp, flags, arg);
os-Linux/skas/process.c:        pid = clone(userspace_tramp, (void *) sp, flags, (void *) stub_stack);
os-Linux/process.c: * syscalls, and also breaks with clone(), which does not unshare the TLS.


PARA CONSIDERAR!!!!!!!!!!!!!!!!!1111
En el kernel se puede obtener el task_ptr a partir el uml_vpid
Como se convierte una direccion desde la tarea al kernel ??
https://slideplayer.com/slide/13193958/79/images/28/UML+tt%2Fskas3%2Fskas0+Modes.jpg

CONFIRMADO:  SE CREA UN PROCESO EN LINUX POR CADA PROCESO EN UML-USER 
Seguramente todos comparten el mismo 

En UML
root@node0:~# read "hola" &
[1] 673
[1]+  Stopped                 read "hola"
root@node0:~# read "hola" &
[2] 675
[2]+  Stopped                 read "hola"
root@node0:~# read "hola" &
[3] 676
[3]+  Stopped                 read "hola"
root@node0:~# read "hola" &
[4] 677
root@node0:~# read "hola" &
[5] 678
[4]-  Stopped                 read "hola"
[5]+  Stopped                 read "hola"
root@node0:~# read "hola" &
[6] 679
[6]+  Stopped                 read "hola"

En HOST 
root@node0:/usr/src/linux/arch/um# ps -ef | grep linux 
root       442     1  0 20:58 tty1     00:00:00 /sbin/agetty --noclear tty1 linux
root       680   670  2 21:15 pts/1    00:00:03 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root       686   680  0 21:15 pts/1    00:00:00 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root       687   680  0 21:15 pts/1    00:00:00 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root       688   680  0 21:15 pts/1    00:00:00 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M
root       690   680  0 21:15 pts/1    00:00:00 [linux]
root       712   680  0 21:15 pts/1    00:00:00 [linux]
root       732   680  0 21:15 pts/1    00:00:00 [linux]
root       817   680  0 21:15 pts/1    00:00:00 [linux]
root       818   680  0 21:15 pts/1    00:00:00 [linux]
root       833   680  0 21:15 pts/1    00:00:00 [linux]
root       834   680  0 21:15 pts/1    00:00:00 [linux]
root       835   680  0 21:15 pts/1    00:00:00 [linux]
root       836   680  0 21:15 pts/1    00:00:00 [linux]
root       837   680  0 21:15 pts/1    00:00:00 [linux]
root       847   680  0 21:16 pts/1    00:00:00 [linux] <<<< 
root       858   680  0 21:16 pts/1    00:00:00 [linux] <<<<
root       864   680  0 21:16 pts/1    00:00:00 [linux] <<<<
root       870   680  0 21:17 pts/1    00:00:00 [linux] <<<<
root       871   680  0 21:17 pts/1    00:00:00 [linux] <<<<
root       872   680  0 21:17 pts/1    00:00:00 [linux] <<<<
root       873   680  0 21:17 pts/1    00:00:00 [linux] <<<<
root       874   680  0 21:17 pts/1    00:00:00 [linux] <<<<
root       879   620  0 21:17 pts/0    00:00:00 grep linux

  PID TTY      STAT   TIME  MAJFL   TRS   DRS   RSS %MEM COMMAND
  872 pts/1    t+     0:00      0  3529 4191458 340  0.0      \_ [linux]
  873 pts/1    t+     0:00      0  3529 4191458 340  0.0      \_ [linux]
  874 pts/1    t+     0:00      0  3529 4191458 340  0.0      \_ [linux]
  893 pts/1    t+     0:00      0  3529 4191458 340  0.0      \_ [linux]
  895 pts/1    t+     0:00      0  3529 4191462 340  0.0      \_ [linux]
  897 pts/1    t+     0:00      0  3529 4191462 340  0.0      \_ [linux]



skas0 Mode
More recently, an Italian college student, Paolo Giarrusso, who had been doing good work on UML,
thought that it might be possible to implement something like skas3 on hosts without the skas3 patch.

His basic idea was to insert just enough code into the address space of each UML process to perform
the address space updates and information retrieval for which skas3 requires a host patch. 
As I implemented it over the following weekend, this inserted code takes the form of two pages 
mapped by the UML kernel at the top of each process address space. 
One of these pages is for a SIGSEGV signal frame and is mapped with write permission, 
and the other contains UML code and is mapped read-only.

The code page contains a function that invokes mmap, munmap, and mprotect as requested by the UML kernel.
The page also contains the SIGSEGV signal handler. The function is invoked whenever address space 
changes are needed in a UML process and is the equivalent of requesting an address space change 
through a /proc/mm file descriptor. 

The signal handler implements the equivalent of PTRACE_FAULTINFO by receiving the SIGSEGV signal, 
reading all of the fault information from its stack, and putting it in a convenient form where 
the UML kernel can read it.

Without changes in the host kernel, we have no way to create new host address spaces without 
creating new host processes. So, skas0 mode resembles tt mode in having one host process  <<<<<<<<<<<<<<<<<<<<<<<<<<<<
for each UML process.

This is the only similarity between skas0 mode and tt mode. In skas0 mode, the UML kernel 
runs in a separate host process and has a separate host address space from its processes. 
All of the skas3 benefits to security and performance flow from this property. 

The fact that the UML kernel is controlling many more processes than in skas3 mode 
means that we have the same wasted kernel memory that tt mode has.

This makes skas0 mode somewhat less efficient than skas3 mode but still a large improvement over tt mode.

C:\Users\Usuario\AppData\Local\Temp\scp32181\usr\src\linux\arch\um\kernel\skas\syscall.c
	void handle_syscall(struct uml_pt_regs *r)
	{
		struct pt_regs *regs = container_of(r, struct pt_regs, regs);
		int syscall;
		
		static int pid, vpid ;
			if( vpid != get_current_pid()) {
				pid = os_getpid();
				vpid = get_current_pid();
			}
	
	
		syscall = UPT_SYSCALL_NR(r);
#define SYSCALL_IOCTL	54	
	if( syscall == SYSCALL_IOCTL)
		printk("UML pid=%d vpid=%d ioctl syscall=%d\n", pid, vpid, syscall);
	

En 
/usr/src/linux/arch/x86/include/generated/asm/syscalls_32.h
esta la lista de SYSCALLS
donde 
__SYSCALL_I386(54, sys_ioctl, )

UML pid=2421 vpid=661 ioctl syscall=54
UML pid=2421 vpid=661 ioctl syscall=54
UML pid=2421 vpid=661 ioctl syscall=54
UML pid=2421 vpid=661 ioctl syscall=54
UML pid=2421 vpid=660 ioctl syscall=54
UML pid=2421 vpid=660 ioctl syscall=54
UML pid=2421 vpid=660 ioctl syscall=54
UML pid=2421 vpid=660 ioctl syscall=54
Debian GNU/Linux 9 node0 tty1
UML pid=2421 vpid=660 ioctl syscall=54
UML pid=2421 vpid=660 ioctl syscall=54
UML pid=2421 vpid=660 ioctl syscall=54
node0 login: UML pid=2421 vpid=660 ioctl syscall=54
UML pid=2421 vpid=660 ioctl syscall=54
UML pid=2421 vpid=660 ioctl syscall=54
UML pid=2421 vpid=660 ioctl syscall=54

Esto demuestra que el PID que ejecuta los syscalls es el PID del KERNEL

root@node0:~# cat /etc/network/interfaces
UML pid=2421 vpid=670 ioctl syscall=54             <<<<< 670 es la shell 
UML pid=2421 vpid=670 ioctl syscall=54
UML pid=2421 vpid=670 ioctl syscall=54
UML pid=2421 vpid=670 ioctl syscall=54
UML pid=2421 vpid=670 ioctl syscall=54
UML pid=2421 vpid=675 ioctl syscall=54 				<<<<< 675 es el cat 
# interfaces(5) file used by ifup(8) and ifdown(8)
# Include files from /etc/network/interfaces.d:
source-directory /etc/network/interfaces.d
UML pid=2421 vpid=670 ioctl syscall=54
UML pid=2421 vpid=670 ioctl syscall=54
UML pid=2421 vpid=670 ioctl syscall=54
UML pid=2421 vpid=670 ioctl syscall=54
UML pid=2421 vpid=670 ioctl syscall=54

POR LO TANTO, aqui se puede ver cuando el proceso hace un IOCTL al DVK 

====================================================================================================
20190513:

			SE INCORPORO LA LECTURA DE PARAMETROS EN LA LINEA DE COMANDOS (dcid=23 uml_ep=-4 rd_ep=3)
			
			root@node0:/usr/src/linux#  ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3 
		>>>>	uml_dcid: dcid=0
		>>>>	uml_uml_ep: uml_ep=-2
		>>>>	uml_rd_ep: rd_ep=3
				Locating the bottom of the address space ... 0x0
				Locating the top of the address space ... 0xc0000000
				Core dump limits :
						soft - 0
						hard - NONE
				Checking that ptrace can change system call numbers...OK
				Checking syscall emulation patch for ptrace...OK
				Checking advanced syscall emulation patch for ptrace...OK
				Checking environment variables for a tempdir...none found
				Checking if /dev/shm is on tmpfs...OK
				Checking PROT_EXEC mmap in /dev/shm...OK
				Adding 11911168 bytes to physical memory to account for exec-shield gap
				DEBUG 0:start_kernel_proc:30: UML-kernel PID=31362  UML-kernel TID=31362
				DEBUG 0:start_kernel_proc:36: DVK device file successfully opened!! dvk_fd=3
				Linux version 4.9.88 (root@node0) (gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1) ) #29 Tue May 14 00:01:20 -03 2019
				Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 262981
				Kernel command line: con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3 root=98:0
				PID hash table entries: 4096 (order: 2, 16384 bytes)
				Dentry cache hash table entries: 262144 (order: 8, 1048576 bytes)
				Inode-cache hash table entries: 131072 (order: 7, 524288 bytes)
				Memory: 1035020K/1060208K available (2184K kernel code, 627K rwdata, 620K rodata, 81K init, 125K bss, 25188K reserved, 0K cma-reserved)
				NR_IRQS:15
				clocksource: timer: mask: 0xffffffffffffffff max_cycles: 0x1cd42e205, max_idle_ns: 881590404426 ns
				Calibrating delay loop... 1836.64 BogoMIPS (lpj=9183232)
				pid_max: default: 32768 minimum: 301
				Mount-cache hash table entries: 4096 (order: 2, 16384 bytes)
				Mountpoint-cache hash table entries: 4096 (order: 2, 16384 bytes)
				Checking for host processor cmov support...Yes
				Checking that host ptys support output SIGIO...Yes
				Checking that host ptys support SIGIO on close...No, enabling workaround
				devtmpfs: initialized
				Using 2.6 host AIO
				clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns
				futex hash table entries: 256 (order: -1, 3072 bytes)
				NET: Registered protocol family 16
				clocksource: Switched to clocksource timer
				VFS: Disk quotas dquot_6.6.0
				VFS: Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
				NET: Registered protocol family 2
				TCP established hash table entries: 16384 (order: 4, 65536 bytes)
				TCP bind hash table entries: 16384 (order: 4, 65536 bytes)
				TCP: Hash tables configured (established 16384 bind 16384)
				UDP hash table entries: 1024 (order: 2, 16384 bytes)
				UDP-Lite hash table entries: 1024 (order: 2, 16384 bytes)
				NET: Registered protocol family 1
				console [stderr0] disabled
				mconsole (version 2) initialized on /root/.uml/wHVYj1/mconsole
				Checking host MADV_REMOVE support...OK
				UML Audio Relay (host dsp = /dev/sound/dsp, host mixer = /dev/sound/mixer)
		>>>>>   UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
		>>>>>   DEBUG 1:uml_dvk_init_module:298: UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
		>>>>>	DEBUG 1:uml_dvk_init_module:303: UML-kernel PID=31362  UML-kernel TID=31362
				Host TLS support detected
				Detected host type: i386 (GDT indexes 6 to 9)
				workingset: timestamp_bits=30 max_order=18 bucket_order=0
				io scheduler noop registered
				io scheduler deadline registered (default)
				io scheduler cfq registered
				loop: module loaded
				nbd: registered device at major 43
				tun: Universal TUN/TAP device driver, 1.6
				tun: (C) 1999-2004 Max Krasnyansky <maxk@qualcomm.com>
				PPP generic driver version 2.4.2
				SLIP: version 0.8.4-NET3.019-NEWTTY (dynamic channels, max=256).
				NET: Registered protocol family 17
				Initialized stdio console driver
				Console initialized on /dev/tty0
				console [tty0] enabled
				Initializing software serial port version 1
				console [mc-1] enabled
				EXT4-fs (ubda): couldn't mount as ext3 due to feature incompatibilities
				EXT4-fs (ubda): mounting ext2 file system using the ext4 subsystem
				EXT4-fs (ubda): mounted filesystem without journal. Opts: (null)
				VFS: Mounted root (ext2 filesystem) readonly on device 98:0.
				devtmpfs: mounted
				This architecture does not have kernel memory protection.
				random: fast init done
				systemd[1]: systemd 232 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN)
				systemd[1]: Detected virtualization vmware.
				systemd[1]: Detected architecture x86.

				Welcome to Debian GNU/Linux 9 (stretch)!

				systemd[1]: Set hostname to <node0>.
				systemd[1]: Failed to enable kbrequest handling: Inappropriate ioctl for device
				systemd[1]: Created slice System Slice.
				[  OK  ] Created slice System Slice.
				systemd[1]: Reached target Slices.
				[  OK  ] Reached target Slices.
				systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
				[  OK  ] Started Dispatch Password Requests to Console Directory Watch.
				systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
				[  OK  ] Set up automount Arbitrary Executabâ¦rmats File System Automount Point.
				systemd[1]: dev-hugepages.mount: Couldn't determine result for ConditionVirtualization=!private-users, assuming failed: No such file or directory
				[  OK  ] Reached target Remote File Systems.
						 Mounting POSIX Message Queue File System...
				[  OK  ] Reached target Swap.
				[  OK  ] Listening on Journal Socket (/dev/log).
				[  OK  ] Listening on udev Control Socket.
				[  OK  ] Listening on udev Kernel Socket.
				[  OK  ] Created slice system-getty.slice.
				[  OK  ] Started Forward Password Requests to Wall Directory Watch.
				[  OK  ] Reached target Encrypted Volumes.
				[  OK  ] Reached target Paths.
				[  OK  ] Listening on Journal Socket.
						 Starting Remount Root and Kernel File Systems...
				[  OK  ] Listening on Syslog Socket.
						 Starting Journal Service...
						 Starting Load Kernel Modules...
						 Starting Create Static Device Nodes in /dev...
				[  OK  ] Listening on /dev/initctl Compatibility Named Pipe.
				[  OK  ] Reached target Sockets.
				[  OK  ] Mounted POSIX Message Queue File System.
				[  OK  ] Started Remount Root and Kernel File Systems.
						 Starting Load/Save Random Seed...
						 Starting udev Coldplug all Devices...
				[  OK  ] Started Load Kernel Modules.
						 Starting Apply Kernel Variables...
				[  OK  ] Started Journal Service.
				[  OK  ] Started Load/Save Random Seed.
						 Starting Flush Journal to Persistent Storage...
				[  OK  ] Started Create Static Device Nodes in /dev.
						 Starting udev Kernel Device Manager...
				[  OK  ] Reached target Local File Systems (Pre).
				[  OK  ] Reached target Local File Systems.
				[  OK  ] Started Apply Kernel Variables.
				systemd-journald[351]: Received request to flush runtime journal from PID 1
				[  OK  ] Started Flush Journal to Persistent Storage.
						 Starting Create Volatile Files and Directories...
						 Starting Raise network interfaces...
				[  OK  ] Started udev Kernel Device Manager.
				[  OK  ] Started udev Coldplug all Devices.
				[FAILED] Failed to start Create Volatile Files and Directories.
				See 'systemctl status systemd-tmpfiles-setup.service' for details.
				[FAILED] Failed to start Network Time Synchronization.
				See 'systemctl status systemd-timesyncd.service' for details.
				[  OK  ] Reached target System Time Synchronized.
						 Starting Update UTMP about System Boot/Shutdown...
				[  OK  ] Stopped Network Time Synchronization.
				[FAILED] Failed to start Network Time Synchronization.
				See 'systemctl status systemd-timesyncd.service' for details.
				[  OK  ] Stopped Network Time Synchronization.
				[FAILED] Failed to start Network Time Synchronization.
				See 'systemctl status systemd-timesyncd.service' for details.
				[FAILED] Failed to start Update UTMP about System Boot/Shutdown.
				See 'systemctl status systemd-update-utmp.service' for details.
				[DEPEND] Dependency failed for Update UTMP about System Runlevel Changes.
				[  OK  ] Stopped Network Time Synchronization.
				[FAILED] Failed to start Network Time Synchronization.
				See 'systemctl status systemd-timesyncd.service' for details.
				[  OK  ] Reached target System Initialization.
				[  OK  ] Reached target Basic System.
				[  OK  ] Started Daily Cleanup of Temporary Directories.
				[  OK  ] Started Daily apt download activities.
				[  OK  ] Started Daily apt upgrade and clean activities.
				[  OK  ] Reached target Timers.
						 Starting System Logging Service...
						 Starting getty on tty2-tty6 if dbus and logind are not available...
				[  OK  ] Started Regular background program processing daemon.
				[  OK  ] Stopped Network Time Synchronization.
				[FAILED] Failed to start Network Time Synchronization.
				See 'systemctl status systemd-timesyncd.service' for details.
				[  OK  ] Started System Logging Service.
				[  OK  ] Started Raise network interfaces.
				[  OK  ] Reached target Network.
						 Starting Permit User Sessions...
				[  OK  ] Stopped Network Time Synchronization.
				[FAILED] Failed to start Network Time Synchronization.
				See 'systemctl status systemd-timesyncd.service' for details.
				[  OK  ] Started getty on tty2-tty6 if dbus and logind are not available.
				[  OK  ] Started Permit User Sessions.
				[  OK  ] Started Getty on tty2.
				[  OK  ] Started Getty on tty4.
				[  OK  ] Started Getty on tty1.
				[  OK  ] Started Getty on tty3.
				[  OK  ] Started Getty on tty6.
				[  OK  ] Started Getty on tty5.
				[  OK  ] Reached target Login Prompts.
				[  OK  ] Reached target Multi-User System.
				[  OK  ] Reached target Graphical Interface.

				Debian GNU/Linux 9 node0 tty1

		
		SE LEE INFO DEL DC Y DEL DVS en el open del device /dev/dvk 
			root@node0:~# mknod /dev/dvk c 33 0
			random: crng init done
			root@node0:~# echo > /dev/dvk
			DEBUG 668:uml_dvk_open:224: dvk_dev=/dev/dvk
			DEBUG 668:uml_dvk_open:232: dvk_fd=20
			
			DEBUG 668:uml_getdvsinfo:96: 
			DEBUG 668:uml_getdvsinfo:98: os_ioctl_generic ret=0
			DEBUG 668:uml_getdvsinfo:100: d_nr_dcs=32 d_nr_nodes=32 d_nr_procs=221 d_nr_tasks=35 d_nr_sysprocs=64 
			
			DEBUG 668:uml_dvk_open:247: local_nodeid=0
			DEBUG 668:uml_getdcinfo:82: dcid=0
			DEBUG 668:uml_getdcinfo:86: os_ioctl_generic ret=0
			DEBUG 668:uml_getdcinfo:88: dc_dcid=0 dc_nr_procs=221 dc_nr_tasks=34 dc_nr_sysprocs=64 dc_nr_nodes=32
			DEBUG 668:uml_getdcinfo:89: flags=0 dc_nodes=3 dc_pid=16698 dc_name=DC0

			DEBUG 668:uml_bind_X:126: cmd=0 dcid=0 pid=-1 endpoint=-2 nodeid=-1
			DEBUG 668:uml_bind_X:134: os_ioctl_generic ret=-2
			DEBUG 668:uml_dvk_open:257: uml_bind ep=-2
			DEBUG 668:uml_getprocinfo:109: dcid=0 p_nr=-2 
			DEBUG 668:uml_getprocinfo:114: os_ioctl_generic ret=0
			DEBUG 668:uml_getprocinfo:116: nr=-2 endp=-2 dcid=0 flags=0 misc=20 lpid=31362 vpid=31362 nodeid=0 name=linux 
			-bash: echo: write error: Invalid argument
			DEBUG 668:uml_dvk_release:270: dvk_dev=/dev/dvk

		EN EL HOST 
			root@node0:/usr/src/linux# cat /proc/dvs/DC0/procs 
			DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
			 0  -2    -2 31362/31362  0    0   20 27342 27342 27342 27342 linux

====================================================================================================
20190514:
		Se incluyeron todas las funciones de la libreria stub_dvkcall.c como fuentes
		dentro de um_dvk.c
		Obviamente se modifico completa la stub_dvkcall.c pero de esta forma se mantiene
		compatibilidad a futuro.
		Se especifican dcid, uml_ep, rd_ep y rd_cfg.
		
		
		# cd /usr/src/dvs/dvk-tests/
		# ./tests.sh 0 0
		# . /dev/shm/DC0.sh 
		# cd /usr/src/linux 
		# nsenter -p -t$DC0 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3 rd_cfg="rdisk.cfg"

		EN UML 
		UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
		DEBUG 1:uml_dvk_init_module:185: UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
		DEBUG 1:uml_dvk_init_module:190: UML-kernel PID=2  UML-kernel TID=2

		winch_thread : TIOCSCTTY failed on fd 1 err = 1 <<<<<<<!!!!!!!!!! WHY ?????????
		
		root@node0:~# mknod /dev/dvk c 33 0
		random: crng init done
		root@node0:~# echo > /dev/dvk 
		DEBUG 664:uml_dvk_open:116: dvk_dev=/dev/dvk
		DEBUG 2:dvk_open:61: Open dvk device file /dev/dvk
		DEBUG 2:dvk_getdvsinfo:176: 
		DEBUG 2:dvk_getdvsinfo:184: ioctl ret=0
		DEBUG 664:uml_dvk_open:131: local_nodeid=0
		DEBUG 664:uml_dvk_open:132: d_nr_dcs=32 d_nr_nodes=32 d_nr_procs=221 d_nr_tasks=35 d_nr_sysprocs=64 
		DEBUG 2:dvk_getdcinfo:254: dcid=0
		DEBUG 2:dvk_getdcinfo:264: ioctl ret=0
		DEBUG 664:uml_dvk_open:138: dc_dcid=0 dc_nr_procs=221 dc_nr_tasks=34 dc_nr_sysprocs=64 dc_nr_nodes=32
		DEBUG 664:uml_dvk_open:139: flags=0 dc_nodes=3 dc_pid=30977 dc_name=DC0
		DEBUG 2:dvk_bind_X:922: cmd=0 dcid=0 pid=2 endpoint=-2 nodeid=-1
		DEBUG 2:dvk_bind_X:941: ioctl ret=-2
		DEBUG 664:uml_dvk_open:142: uml_bind uml_ep=-2 ep=-2
		DEBUG 2:dvk_getprocinfo:890: dcid=0 p_nr=-2 
		DEBUG 2:dvk_getprocinfo:901: ioctl ret=0
		DEBUG 664:uml_dvk_open:150: nr=-2 endp=-2 dcid=0 flags=0 misc=20 lpid=1739 vpid=2 nodeid=0 name=linux 
		-bash: echo: write error: Invalid argument
		DEBUG 664:uml_dvk_release:157: dvk_dev=/dev/dvk 

		EN UML 
		[   31.370000] DEBUG 664:uml_dvk_open:116: dvk_dev=/dev/dvk
		[   31.370000] DEBUG 2:dvk_open:61: Open dvk device file /dev/dvk
		[   31.370000] DEBUG 2:dvk_getdvsinfo:176: 
		[   31.370000] DEBUG 2:dvk_getdvsinfo:184: ioctl ret=0
		[   31.370000] DEBUG 664:uml_dvk_open:131: local_nodeid=0
		[   31.370000] DEBUG 664:uml_dvk_open:132: d_nr_dcs=32 d_nr_nodes=32 d_nr_procs=221 d_nr_tasks=35 d_nr_sysprocs=64 
		[   31.370000] DEBUG 2:dvk_getdcinfo:254: dcid=0
		[   31.370000] DEBUG 2:dvk_getdcinfo:264: ioctl ret=0
		[   31.370000] DEBUG 664:uml_dvk_open:138: dc_dcid=0 dc_nr_procs=221 dc_nr_tasks=34 dc_nr_sysprocs=64 dc_nr_nodes=32
		[   31.370000] DEBUG 664:uml_dvk_open:139: flags=0 dc_nodes=3 dc_pid=30977 dc_name=DC0
		[   31.370000] DEBUG 2:dvk_bind_X:922: cmd=0 dcid=0 pid=2 endpoint=-2 nodeid=-1
		[   31.370000] DEBUG 2:dvk_bind_X:941: ioctl ret=-2
		[   31.370000] DEBUG 664:uml_dvk_open:142: uml_bind uml_ep=-2 ep=-2
		[   31.370000] DEBUG 2:dvk_getprocinfo:890: dcid=0 p_nr=-2 
		[   31.370000] DEBUG 2:dvk_getprocinfo:901: ioctl ret=0
		[   31.370000] DEBUG 664:uml_dvk_open:150: nr=-2 endp=-2 dcid=0 flags=0 misc=20 lpid=1739 vpid=2 nodeid=0 name=linux 
		[   31.370000] DEBUG 664:uml_dvk_release:157: dvk_dev=/dev/dvk


		EN EL HOST 
		root@node0:/usr/src/linux# cat /proc/dvs/DC0/procs 
		DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
		 0  -2    -2  1739/2      0    0   20 27342 27342 27342 27342 linux   
 
		
		root@node0:/usr/src/linux# ps -ef | grep linux
		root       451     1  0 19:05 tty1     00:00:00 /sbin/agetty --noclear tty1 linux
		root      1738  1721  0 20:58 pts/1    00:00:00 nsenter -p -t30977 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3 rd_cfg=rdisk.cfg
		root      1739  1738  1 20:58 ?        00:00:02 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3 rd_cfg=rdisk.cfg
		root      1744  1739  0 20:58 ?        00:00:00 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3 rd_cfg=rdisk.cfg
		root      1745  1739  0 20:58 ?        00:00:00 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3 rd_cfg=rdisk.cfg
		root      1746  1739  0 20:58 ?        00:00:00 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3 rd_cfg=rdisk.cfg
		root      1748  1739  0 20:58 ?        00:00:00 [linux] <defunct>
		root      1749  1739  0 20:58 ?        00:00:00 [linux]
		root      1779  1739  0 20:58 ?        00:00:00 [linux]
		root      1791  1739  0 20:58 ?        00:00:00 [linux]
		root      1857  1739  0 20:58 ?        00:00:00 [linux]
		root      1863  1739  0 20:58 ?        00:00:00 [linux]
		root      1889  1739  0 20:58 ?        00:00:00 [linux] <defunct> <<<<<<< QUE LE HABRA PASASO ?????
		root      1890  1739  0 20:58 ?        00:00:00 [linux]
		root      1892  1739  0 20:58 ?        00:00:00 [linux]
		root      1893  1739  0 20:58 ?        00:00:00 [linux]
		root      1894  1739  0 20:58 ?        00:00:00 [linux]
		root      1895  1739  0 20:58 ?        00:00:00 [linux]
		root      1896  1739  0 20:59 ?        00:00:00 [linux]
		root      1907  1739  0 20:59 ?        00:00:00 [linux]



====================================================================================================
20190518:
			Modifique mol/drivers/rdisk 
			Incorpore um/drivers/rdisk_user.*
			
			ATENCION: hay que modificar el Kconfig.char del directorio arch/um/
			
config UML_RDISK 
	bool "UML Replicated Disk proxy"
	default y
	help
	This options enable RDISK proxy to the host RDISK.
	
	
config UML_DVK 
	bool "UML Distributed Virtualization Kernel (DVK) pseudo character device"
	default y
	help
	This options enable DVK pseudo device driver as a pass-through to the host-DVK.
	
	
	
> UML Character Devices qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
  lqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq UML Character Devices qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk
  x  Arrow keys navigate the menu.  <Enter> selects submenus ---> (or empty submenus  x
  x  ----).  Highlighted letters are hotkeys.  Pressing <Y> includes, <N> excludes,   x
  x  <M> modularizes features.  Press <Esc><Esc> to exit, <?> for Help, </> for       x
  x  Search.  Legend: [*] built-in  [ ] excluded  <M> module  < > module capable      x
  x lqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk x
  x x    [*] UML Replicated Disk proxy                                              x x <<<<<<<<<<<<<<<
  x x    [*] UML Distributed Virtualization Kernel (DVK) pseudo character device    x x <<<<<<<<<<<<<<<
  x x    [ ] stderr console                                                         x x
  x x    [ ] Virtual serial line                                                    x x
  x x    [ ] null channel support                                                   x x
  x x    [ ] port channel support                                                   x x
  x x    [ ] pty channel support                                                    x x
  x x    [ ] tty channel support                                                    x x
  x x    [ ] xterm channel support                                                  x x
  x x    (fd:0,fd:1) Default main console channel initialization                    x x
  x x    (xterm) Default console channel initialization                             x x
  x x    (pty) Default serial line channel initialization                           x x
  x x    [ ] Sound support                                                          x x
  x x                                                                               x x
  x x                                                                               x x
  x mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj x
  tqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqu
  x             <Select>    < Exit >    < Help >    < Save >    < Load >              x
  mqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj

====================================================================================================
20190520:

		# cd /usr/src/dvs/dvk-tests/
		# ./tests.sh 0 0
		# . /dev/shm/DC0.sh 
		# cd /dev/shm 
		# nsenter -p -u -F -t$DC0 /usr/src/dvs/vos/mol/drivers/rdisk/rdisk -d 0 -e 3 -c /dev/shm/rdisk.cfg > /dev/shm/rdisk.out 2> /dev/shm/rdisk.err &
		# cat /proc/dvs/DC0/procs 
		# cd /usr/src/linux 
		# nsenter -p -t$DC0 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3 
		


root@node0:/usr/src/linux# nsenter -p -t$DC0 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3
				uml_dcid: dcid=0
				uml_uml_ep: uml_ep=-2
				uml_rd_ep: rd_ep=3
				Locating the bottom of the address space ... 0x0
				Locating the top of the address space ... 0xc0000000
				Core dump limits :
						soft - 0
						hard - NONE
				Checking that ptrace can change system call numbers...OK
				Checking syscall emulation patch for ptrace...OK
				Checking advanced syscall emulation patch for ptrace...OK
				Checking environment variables for a tempdir...none found
				Checking if /dev/shm is on tmpfs...OK
				Checking PROT_EXEC mmap in /dev/shm...OK
				Adding 14602240 bytes to physical memory to account for exec-shield gap
				Abortado

LO QUE FALTA ES 
				DEBUG 0:start_kernel_proc:30: UML-kernel PID=31362  UML-kernel TID=31362
				DEBUG 0:start_kernel_proc:36: DVK device file successfully opened!! dvk_fd=3
				Linux version 4.9.88 (root@node0) (gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1) ) #29 Tue May 14 00:01:20 -03 2019
				Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 262981


EL PROBLEMA APARENTEMENTE ESTA EN LOS DVKDEBUG 
SI SE LOS REMUEVE DA EL RESULTADO DE ABAJO 

static int __init start_kernel_proc(void *unused)
{
	int pid, tid;

	block_signals();
	
#ifdef CONFIG_UML_DVK
	pid = os_getpid();
	tid = os_gettid();
	printf("UML-kernel PID=%d  UML-kernel TID=%d\n", pid, tid);
//	DVKDEBUG(INTERNAL, "UML-kernel PID=%d  UML-kernel TID=%d\n", pid, tid);
	os_flush_stdout();
	
	dvk_fd = (-1);
	dvk_fd = os_open_file(UML_DVK_DEV, of_set_rw(OPENFLAGS(), 1, 1), 0);
	if ( dvk_fd < 0){
		ERROR_PRINT(dvk_fd);
	}else{
//		DVKDEBUG(INTERNAL, "DVK device file successfully opened!! dvk_fd=%d\n", dvk_fd);
printf("DVK device file successfully opened!! dvk_fd=%d\n", dvk_fd);
	}
	os_flush_stdout();
#endif // CONFIG_UML_DVK
		
	cpu_tasks[0].pid = pid;
	cpu_tasks[0].task = current;

	start_kernel();
	return 0;
}


root@node0:/usr/src/linux# nsenter -p -t$DC0 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3
uml_dcid: dcid=0
uml_uml_ep: uml_ep=-2
uml_rd_ep: rd_ep=3
Locating the bottom of the address space ... 0x0
Locating the top of the address space ... 0xc0000000
Core dump limits :
        soft - 0
        hard - NONE
Checking that ptrace can change system call numbers...OK
Checking syscall emulation patch for ptrace...OK
Checking advanced syscall emulation patch for ptrace...OK
Checking environment variables for a tempdir...none found
Checking if /dev/shm is on tmpfs...OK
Checking PROT_EXEC mmap in /dev/shm...OK
Adding 21426176 bytes to physical memory to account for exec-shield gap
UML-kernel PID=99  UML-kernel TID=99
DVK device file successfully opened!! dvk_fd=3
Abortado


==============================================================================================
20190523:
			Se termino parcialmente rdisk driver .
			
root@node0:/usr/src/linux# nsenter -p -t$DC0 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3
uml_dcid: dcid=0
uml_uml_ep: uml_ep=-2
uml_rd_ep: rd_ep=3
Locating the bottom of the address space ... 0x0
Locating the top of the address space ... 0xc0000000
Core dump limits :
        soft - 0
        hard - NONE
Checking that ptrace can change system call numbers...OK
Checking syscall emulation patch for ptrace...OK
Checking advanced syscall emulation patch for ptrace...OK
Checking environment variables for a tempdir...none found
Checking if /dev/shm is on tmpfs...OK
Checking PROT_EXEC mmap in /dev/shm...OK
Adding 19259392 bytes to physical memory to account for exec-shield gap
DEBUG start_kernel_proc:32: UML-kernel PID=2  UML-kernel TID=2
DEBUG start_kernel_proc:41: DVK device file successfully opened!! dvk_fd=3
Linux version 4.9.88 (root@node0) (gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1) ) #34 Tue May 21 07:56:20 -03 2019
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 264761
Kernel command line: con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3 root=98:0
PID hash table entries: 4096 (order: 2, 16384 bytes)
Dentry cache hash table entries: 262144 (order: 8, 1048576 bytes)
Inode-cache hash table entries: 131072 (order: 7, 524288 bytes)
Memory: 1034944K/1067384K available (2188K kernel code, 632K rwdata, 620K rodata, 81K init, 125K bss, 32440K reserved, 0K cma-reserved)
NR_IRQS:15
clocksource: timer: mask: 0xffffffffffffffff max_cycles: 0x1cd42e205, max_idle_ns: 881590404426 ns
Calibrating delay loop... 1797.32 BogoMIPS (lpj=8986624)
pid_max: default: 32768 minimum: 301
Mount-cache hash table entries: 4096 (order: 2, 16384 bytes)
Mountpoint-cache hash table entries: 4096 (order: 2, 16384 bytes)
Checking for host processor cmov support...Yes
Checking that host ptys support output SIGIO...Yes
Checking that host ptys support SIGIO on close...No, enabling workaround
devtmpfs: initialized
Using 2.6 host AIO
clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604462750000 ns
futex hash table entries: 256 (order: -1, 3072 bytes)
NET: Registered protocol family 16
clocksource: Switched to clocksource timer
VFS: Disk quotas dquot_6.6.0
VFS: Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
NET: Registered protocol family 2
TCP established hash table entries: 16384 (order: 4, 65536 bytes)
TCP bind hash table entries: 16384 (order: 4, 65536 bytes)
TCP: Hash tables configured (established 16384 bind 16384)
UDP hash table entries: 1024 (order: 2, 16384 bytes)
UDP-Lite hash table entries: 1024 (order: 2, 16384 bytes)
NET: Registered protocol family 1
console [stderr0] disabled
mconsole (version 2) initialized on /root/.uml/SGISDp/mconsole
Checking host MADV_REMOVE support...OK
UML Audio Relay (host dsp = /dev/sound/dsp, host mixer = /dev/sound/mixer)
UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
DEBUG uml_dvk_init_module:147: UML Distributed Virtualization Kernel (host dvk_dev = /dev/dvk)
DEBUG uml_dvk_init_module:152: UML-kernel PID=2  UML-kernel TID=2
Host TLS support detected
Detected host type: i386 (GDT indexes 6 to 9)
workingset: timestamp_bits=30 max_order=18 bucket_order=0
io scheduler noop registered
io scheduler deadline registered (default)
io scheduler cfq registered
loop: module loaded
nbd: registered device at major 43
tun: Universal TUN/TAP device driver, 1.6
tun: (C) 1999-2004 Max Krasnyansky <maxk@qualcomm.com>
PPP generic driver version 2.4.2
SLIP: version 0.8.4-NET3.019-NEWTTY (dynamic channels, max=256).
NET: Registered protocol family 17
Initialized stdio console driver
Console initialized on /dev/tty0
console [tty0] enabled
Initializing software serial port version 1
console [mc-1] enabled
winch_thread : TIOCSCTTY failed on fd 2 err = 1
EXT4-fs (ubda): couldn't mount as ext3 due to feature incompatibilities
EXT4-fs (ubda): mounting ext2 file system using the ext4 subsystem
EXT4-fs (ubda): mounted filesystem without journal. Opts: (null)
VFS: Mounted root (ext2 filesystem) readonly on device 98:0.
devtmpfs: mounted
This architecture does not have kernel memory protection.
random: fast init done
systemd[1]: systemd 232 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN)
systemd[1]: Detected virtualization vmware.
systemd[1]: Detected architecture x86.

Welcome to Debian GNU/Linux 9 (stretch)!

systemd[1]: Set hostname to <node0>.
systemd[1]: Failed to enable kbrequest handling: Inappropriate ioctl for device
systemd[1]: Created slice System Slice.
[  OK  ] Created slice System Slice.
systemd[1]: Listening on udev Control Socket.
[  OK  ] Listening on udev Control Socket.
systemd[1]: dev-hugepages.mount: Couldn't determine result for ConditionVirtualization=!private-users, assuming failed: No such file or directory
systemd[1]: Listening on Journal Socket.
[  OK  ] Listening on Journal Socket.
systemd[1]: Starting Load Kernel Modules...
         Starting Load Kernel Modules...
[  OK  ] Reached target Remote File Systems.
[  OK  ] Created slice system-getty.slice.
         Mounting POSIX Message Queue File System...
[  OK  ] Listening on Syslog Socket.
[  OK  ] Listening on Journal Socket (/dev/log).
[  OK  ] Reached target Swap.
[  OK  ] Listening on /dev/initctl Compatibility Named Pipe.
         Starting Remount Root and Kernel File Systems...
[  OK  ] Listening on udev Kernel Socket.
[  OK  ] Reached target Slices.
[  OK  ] Started Dispatch Password Requests to Console Directory Watch.
[  OK  ] Reached target Sockets.
         Starting Journal Service...
[  OK  ] Set up automount Arbitrary Executabâ¦rmats File System Automount Point.
[  OK  ] Started Forward Password Requests to Wall Directory Watch.
[  OK  ] Reached target Encrypted Volumes.
[  OK  ] Reached target Paths.
         Starting Create Static Device Nodes in /dev...
[  OK  ] Mounted POSIX Message Queue File System.
[  OK  ] Started Load Kernel Modules.
[  OK  ] Started Remount Root and Kernel File Systems.
         Starting udev Coldplug all Devices...
         Starting Load/Save Random Seed...
         Starting Apply Kernel Variables...
[  OK  ] Started Journal Service.
[  OK  ] Started Create Static Device Nodes in /dev.
         Starting udev Kernel Device Manager...
[  OK  ] Reached target Local File Systems (Pre).
[  OK  ] Reached target Local File Systems.
         Starting Flush Journal to Persistent Storage...
[  OK  ] Started Load/Save Random Seed.
[  OK  ] Started Apply Kernel Variables.
[  OK  ] Started udev Kernel Device Manager.
systemd-journald[352]: Received request to flush runtime journal from PID 1
         Starting Raise network interfaces...
[  OK  ] Started Flush Journal to Persistent Storage.
         Starting Create Volatile Files and Directories...
[FAILED] Failed to start Create Volatile Files and Directories.
See 'systemctl status systemd-tmpfiles-setup.service' for details.
[FAILED] Failed to start Network Time Synchronization.
See 'systemctl status systemd-timesyncd.service' for details.
[  OK  ] Reached target System Time Synchronized.
         Starting Update UTMP about System Boot/Shutdown...
[  OK  ] Stopped Network Time Synchronization.
[FAILED] Failed to start Network Time Synchronization.
See 'systemctl status systemd-timesyncd.service' for details.
[  OK  ] Stopped Network Time Synchronization.
[FAILED] Failed to start Network Time Synchronization.
See 'systemctl status systemd-timesyncd.service' for details.
[  OK  ] Started udev Coldplug all Devices.
[  OK  ] Stopped Network Time Synchronization.
[FAILED] Failed to start Network Time Synchronization.
See 'systemctl status systemd-timesyncd.service' for details.
[FAILED] Failed to start Update UTMP about System Boot/Shutdown.
See 'systemctl status systemd-update-utmp.service' for details.
[DEPEND] Dependency failed for Update UTMP about System Runlevel Changes.
[  OK  ] Stopped Network Time Synchronization.
[FAILED] Failed to start Network Time Synchronization.
See 'systemctl status systemd-timesyncd.service' for details.
[  OK  ] Reached target System Initialization.
[  OK  ] Started Daily Cleanup of Temporary Directories.
[  OK  ] Started Daily apt download activities.
[  OK  ] Started Daily apt upgrade and clean activities.
[  OK  ] Reached target Timers.
[  OK  ] Reached target Basic System.
[  OK  ] Started Regular background program processing daemon.
         Starting System Logging Service...
         Starting getty on tty2-tty6 if dbus and logind are not available...
[  OK  ] Started System Logging Service.
[  OK  ] Started getty on tty2-tty6 if dbus and logind are not available.
[  OK  ] Started Raise network interfaces.
[  OK  ] Reached target Network.
         Starting Permit User Sessions...
[  OK  ] Stopped Network Time Synchronization.
[FAILED] Failed to start Network Time Synchronization.
See 'systemctl status systemd-timesyncd.service' for details.
[  OK  ] Started Permit User Sessions.
[  OK  ] Started Getty on tty4.
[  OK  ] Started Getty on tty5.
[  OK  ] Started Getty on tty6.
[  OK  ] Started Getty on tty3.
[  OK  ] Started Getty on tty1.
[  OK  ] Started Getty on tty2.
[  OK  ] Reached target Login Prompts.
[  OK  ] Reached target Multi-User System.
[  OK  ] Reached target Graphical Interface.
winch_thread : TIOCSCTTY failed on fd 1 err = 1

Debian GNU/Linux 9 node0 tty1

node0 login:

==============================================================================================
20190529:
		Se modifico RDISK pero hay un problema en rdisk_user.c 
Aparentemente ignora la constante de configuracion CONFIG_UML_RDISK y no compila si la 
siguiente lineas estan habilitadas
 	
// #ifdef CONFIG_UML_RDISK 
.....
// #endif // CONFIG_UML_RDISK 


EN EL HOST
[ 1850.940406] DEBUG dvk_open:167: 
[ 1851.086936] DEBUG dvk_open:167: 
[ 1851.086946] DEBUG dvk_ioctl:201: cmd=8004E31B arg=83C6A20
[ 1851.086948] DEBUG dvk_ioctl:221: DVK_CALL=27 (getdvsinfo) 
[ 1851.086949] DEBUG io_getdvsinfo:288: 
[ 1851.086951] DEBUG new_getdvsinfo:1789: local_nodeid=0 
[ 1851.086960] DEBUG dvk_ioctl:201: cmd=8004E30E arg=48958FA8
[ 1851.086961] DEBUG dvk_ioctl:221: DVK_CALL=14 (getdcinfo) 
[ 1851.086963] DEBUG io_getdcinfo:153: 
[ 1851.086964] DEBUG new_getdcinfo:1818: dcid=0 
[ 1851.087053] DEBUG check_caller:536: caller_pid=13424 caller_tgid=13424
[ 1851.087055] ERROR: 13424:check_caller:570: rcode=-310
[ 1851.087057] DEBUG new_getdcinfo:1836: RLOCK_DC dc=0 count=0
[ 1851.087059] DEBUG new_getdcinfo:1838: RUNLOCK_DC dc=0 count=0
[ 1851.087071] DEBUG dvk_ioctl:201: cmd=4004E309 arg=48958F88
[ 1851.087073] DEBUG dvk_ioctl:221: DVK_CALL=9 (bind) 
[ 1851.087074] DEBUG io_bind:97: 
[ 1851.087076] DEBUG new_bind:1372: oper=0 dcid=0 param_pid=10 endpoint=30 nodeid=-1
[ 1851.087078] DEBUG new_bind:1394: RLOCK_DC dc=0 count=0
[ 1851.087079] DEBUG new_bind:1407: WLOCK_PROC ep=30 count=0
[ 1851.087081] DEBUG init_proc_desc:16: p_name=$noname dcid=0
[ 1851.087084] DEBUG new_bind:1441: param_pid=10 lpid=13424 vpid=10 tid=13424
[ 1851.087085] DEBUG new_bind:1465: SELF_BIND param_pid=10 lpid=13424 vpid=10 tid=13424
[ 1851.087087] DEBUG new_bind:1487: WUNLOCK_PROC ep=30 count=0
[ 1851.087088] DEBUG new_bind:1490: WLOCK_TASK pid=13424 count=0
[ 1851.087089] DEBUG new_bind:1491: WLOCK_PROC ep=30 count=0
[ 1851.087090] DEBUG new_bind:1527: increment the reference count of the task struct=13424 count=2
[ 1851.087091] DEBUG new_bind:1538: process p_name=linux *p_name_ptr=linux
[ 1851.087094] DEBUG new_bind:1595: nr=30 endp=30 dcid=0 flags=0 misc=20 lpid=13424 vpid=10 nodeid=0 name=linux 
[ 1851.087096] DEBUG new_bind:1596: nr=30 endp=30 dcid=0 lpid=13424 p_cpumask=FFFFFFFF nodemap=1 name=linux 
[ 1851.087098] DEBUG new_bind:1610: WUNLOCK_TASK pid=13424 count=0
[ 1851.087099] DEBUG new_bind:1616: WUNLOCK_PROC ep=30 count=0
[ 1851.087099] DEBUG new_bind:1618: DC_INCREF counter=2
[ 1851.087101] DEBUG new_bind:1619: RUNLOCK_DC dc=0 count=0
[ 1851.087106] DEBUG dvk_ioctl:201: cmd=8004E30F arg=48958F8C
[ 1851.087107] DEBUG dvk_ioctl:221: DVK_CALL=15 (getprocinfo) 
[ 1851.087108] DEBUG io_getprocinfo:164: 
[ 1851.087109] DEBUG new_getprocinfo:1898: dcid=0 p_nr=30
[ 1851.087111] DEBUG check_caller:536: caller_pid=13424 caller_tgid=13424
[ 1851.087112] DEBUG check_caller:572: WLOCK_PROC ep=30 count=0
[ 1851.087113] DEBUG check_caller:601: WUNLOCK_PROC ep=30 count=0
[ 1851.087114] DEBUG check_caller:604: dcid=0
[ 1851.087115] DEBUG check_caller:608: RLOCK_DC dc=0 count=0
[ 1851.087116] DEBUG check_caller:612: RUNLOCK_DC dc=0 count=0
[ 1851.087117] DEBUG check_caller:618: caller_pid=13424 
[ 1851.087118] DEBUG new_getprocinfo:1915: RLOCK_DC dc=0 count=0
[ 1851.087119] DEBUG new_getprocinfo:1920: RUNLOCK_DC dc=0 count=0
[ 1851.087120] DEBUG new_getprocinfo:1922: RLOCK_PROC ep=30 count=0
[ 1851.087121] DEBUG new_getprocinfo:1923: lpid=13424 name=linux
[ 1851.087123] DEBUG new_getprocinfo:1925: RUNLOCK_PROC ep=30 count=0

[ 1854.765504] DEBUG dvk_ioctl:201: cmd=4004E305 arg=48169C2C
[ 1854.765508] DEBUG dvk_ioctl:221: DVK_CALL=5 (mini_sendrec) 
[ 1854.765509] DEBUG io_mini_sendrec:56: 
[ 1854.765510] DEBUG new_mini_sendrec:507: srcdst_ep=3
[ 1854.765512] DEBUG check_caller:536: caller_pid=13416 caller_tgid=13416
[ 1854.765514] ERROR: 13416:check_caller:570: rcode=-310
[ 1854.765515] ERROR: 13416:new_mini_sendrec:511: rcode=-310 <<<<<<<<<<<<<<<<< EDVSNOTBIND
[ 1854.765516] ERROR: 13416:dvk_ioctl:225: rcode=-310

[ 1884.620082] DEBUG dvk_ioctl:221: DVK_CALL=5 (mini_sendrec) 
[ 1884.620083] DEBUG io_mini_sendrec:56: 
[ 1884.620085] DEBUG new_mini_sendrec:507: srcdst_ep=3
[ 1884.620087] DEBUG check_caller:536: caller_pid=13416 caller_tgid=13416
[ 1884.620088] ERROR: 13416:check_caller:570: rcode=-310
[ 1884.620090] ERROR: 13416:new_mini_sendrec:511: rcode=-310
[ 1884.620091] ERROR: 13416:dvk_ioctl:225: rcode=-310
[ 1884.625925] DEBUG dvk_ioctl:201: cmd=4004E305 arg=48C07CC0
[ 1884.625928] DEBUG dvk_ioctl:221: DVK_CALL=5 (mini_sendrec) 
[ 1884.625929] DEBUG io_mini_sendrec:56: 
[ 1884.625931] DEBUG new_mini_sendrec:507: srcdst_ep=3
[ 1884.625933] DEBUG check_caller:536: caller_pid=13416 caller_tgid=13416
[ 1884.625935] ERROR: 13416:check_caller:570: rcode=-310
[ 1884.625936] ERROR: 13416:new_mini_sendrec:511: rcode=-310
[ 1884.625937] ERROR: 13416:dvk_ioctl:225: rcode=-310
[ 1884.641001] DVK: exit_unbind local_nodeid:0

root@node0:/usr/src/dvs/vos/mol/drivers/rdisk# cat /proc/dvs/DC0/procs 
DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
 0   3     3   695/695    0    8   20 31438 27342 27342 27342 rdisk          
 0  30    30 13424/10     0    0   20 27342 27342 27342 27342 linux 

PROBLEMA: 
[ 1851.087096] DEBUG new_bind:1596: nr=30 endp=30 dcid=0 lpid=13424 <<<<<< p_cpumask=FFFFFFFF nodemap=1 name=linux 

[ 1854.765512] DEBUG check_caller:536: caller_pid=13416 caller_tgid=13416<<<<<<<<<
   


EN UML 

root@node0:~# mount /dev/rdiska /mnt
DEBUG rd_open:654: 
DEBUG rd_open_dev:276: major=3 minor=0
DEBUG rd_open_dev:287: source=1219208292 type=1030 m2i1=0 m2i2=30 m2i3=0 m2l1=0 m2l2=1219208192 m2p1=  (null)
DEBUG 2:dvk_sendrec_T:701: endpoint=3 timeout=30000
DEBUG 2:dvk_sendrec_T:712: ioctl ret=-310
ERROR: 2:dvk_sendrec_T:714: rcode=-310
ERROR: 682:rd_open_dev:289: rcode=-310
rdiska: Can't open: errno = 310
DEBUG rd_open:654: 
DEBUG rd_open_dev:276: major=3 minor=0
DEBUG rd_open_dev:287: source=1219208292 type=1030 m2i1=0 m2i2=30 m2i3=0 m2l1=0 m2l2=1219208192 m2p1=  (null)
DEBUG 2:dvk_sendrec_T:701: endpoint=3 timeout=30000
DEBUG 2:dvk_sendrec_T:712: ioctl ret=-310
ERROR: 2:dvk_sendrec_T:714: rcode=-310
ERROR: 682:rd_open_dev:289: rcode=-310
rdiska: Can't open: errno = 310
mount: mount /dev/rdiska on /mnt failed: Unknown error 310
DVK: exit_unbind local_nodeid:0
DVK: old_exit_unbind code:8192
root@node0:~# DVK: exit_unbind local_nodeid:0
DVK: old_exit_unbind code:0
DVK: exit_unbind local_nodeid:0
DVK: old_exit_unbind code:0


==============================================================================================
20190531:
	Sesion 1:
		Arrancar rtest.sh 
		Arrancar rdisk.sh 
		root@node0:/usr/src/linux/arch/um# cat /proc/dvs/DC0/procs 
			DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
			 0   3     3   695/695    0    8   20 31438 27342 27342 27342 rdisk
		
	Sesion 2:
		. /dev/shm/DC0.sh
		cd /usr/src/linux 
		nsenter -p -t$DC0 ./linux con0=null,fd:2 con1=fd:0,fd:1 con=null ssl=null ubda=/dev/sdb6 mem=1024M dcid=0 uml_ep=-2 rd_ep=3
		
	Aqui se bindea RDISK CLIENT con el mayor nombre disponible
		root@node0:/usr/src/linux/arch/um# cat /proc/dvs/DC0/procs 
		DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name        
		 0   3     3   695/695    0    8   20 31438 27342 27342 27342 rdisk          
		
	Luego hacer DENTRO de UML 
		mknod /dev/dvk c 33 0 
		echo > /dev/dvk  <<<<<<<<<<<< ESTO FUERZA EL OPEN DEL DVK y por lo tanto hace el BIND del UML con endpoint=SYSTASK 
		
	root@node0:/usr/src/linux/arch/um# cat /proc/dvs/DC0/procs 
	DC pnr -endp -lpid/vpid- nd flag misc -getf -sndt -wmig -prxy name
	 0  -2    -2 13416/2      0    0   20 27342 27342 27342 27342 linux  <<<<<<<<< UML KERNEL 
	 0   3     3   695/695    0    8   20 31438 27342 27342 27342 rdisk          
	 0  30    30 13424/10     0    0   20 27342 27342 27342 27342 linux  <<<<<<<<<<<< RDISK CLIENT 
	  
	  
		EN EL BOOTEO DE UML 
	  DEBUG rd_open:651: 
		DEBUG rd_open_dev:273: major=3 minor=0
		DEBUG rd_open_dev:284: source=1205896292 type=1030 m2i1=0 m2i2=0 m2i3=0 m2l1=0 m2l2=1205896192 m2p1=  (null)
		DEBUG 2:dvk_sendrec_T:701: endpoint=3 timeout=30000
		DEBUG 2:dvk_sendrec_T:712: ioctl ret=-310
		ERROR: 2:dvk_sendrec_T:714: rcode=-310
		ERROR: 579:rd_open_dev:286: rcode=-310
		rdiska: Can't open: errno = 310

	  
	 Cuando se trata de hacer el mount del RDISK en UML 
root@node0:~# mount /dev/rdiska /mnt
DEBUG rd_open:651: 
DEBUG rd_open_dev:273: major=3 minor=0
DEBUG rd_open_dev:284: source=1218733156 type=1030 m2i1=0 m2i2=30 m2i3=0 m2l1=0 m2l2=1218733056 m2p1=  (null)
DEBUG 226:dvk_sendrec_T:701: endpoint=3 timeout=30000
DEBUG 226:dvk_sendrec_T:712: ioctl ret=0
DEBUG rd_open_dev:287: source=3 type=68 m2i1=30 m2i2=0 m2i3=0 m2l1=0 m2l2=1218733056 m2p1=  (null)
DEBUG rd_open:651: 
DEBUG rd_open_dev:273: major=3 minor=0
DEBUG rd_open_dev:284: source=1218733156 type=1030 m2i1=0 m2i2=30 m2i3=0 m2l1=0 m2l2=1218733056 m2p1=  (null)
DEBUG 226:dvk_sendrec_T:701: endpoint=3 timeout=30000
DEBUG 226:dvk_sendrec_T:712: ioctl ret=0
DEBUG rd_open_dev:287: source=3 type=68 m2i1=30 m2i2=-16 m2i3=0 m2l1=0 m2l2=1218733056 m2p1=  (null)
DEBUG do_rdisk:877: op=0 offset=0 length=4096 sectorsize=512 error=0
DEBUG rdisk_rw:857: source=4 type=1027 m2i1=0 m2i2=30 m2i3=4096 m2l1=0 m2l2=0 m2p1=46d33000
DEBUG 234:dvk_sendrec_T:701: endpoint=3 timeout=30000
DEBUG 234:dvk_sendrec_T:712: ioctl ret=-108
ERROR: 234:dvk_sendrec_T:714: rcode=-108
ERROR: 0:rdisk_rw:859: rcode=-108
do_rdisk - read failed, err = -108
find_irq_by_fd doesn't have descriptor 14
DEBUG do_rdisk:877: op=0 offset=0 length=4096 sectorsize=512 error=0
DEBUG rdisk_rw:857: source=1204 type=1027 m2i1=0 m2i2=30 m2i3=4096 m2l1=0 m2l2=0 m2p1=46d34000
DEBUG 234:dvk_sendrec_T:701: endpoint=3 timeout=30000
DEBUG 234:dvk_sendrec_T:712: ioctl ret=-105
ERROR: 234:dvk_sendrec_T:714: rcode=-105
ERROR: 0:rdisk_rw:859: rcode=-105
do_rdisk - read failed, err = -105

RDISK VE 
 driver.c:driver_task:114:M3-IPC Listening ...
DEBUG 597:dvk_receive_T:677: endpoint=31438 timeout=-1
DEBUG 597:dvk_receive_T:683: ioctl ret=0 errno=0
 driver.c:driver_task:129:
RECEIVE: m_source=-2, m_type=1030, DEVICE=0, IO_ENDPT=0, POSITION=0, COUNT=0, ADDRESS:0, compress(m2_l2):1205896192
 driver.c:driver_task:140:device_caller= -2, mess.m_source= -2
 driver.c:driver_task:147:m_type: 1030 - DEV_OPEN
 rdisk.c:m_do_open:711:m_do_open - device number: 0 - OK to open
 rdisk.c:m_do_open:717:rcode 0
 rdisk.c:m_do_open:726:Open imagen FD=4
 rdisk.c:m_do_open:743:Aligned Buffer size=4096 on address 246E000, device=0
 rdisk.c:m_do_open:744:Local Buffer 246E000
 rdisk.c:m_do_open:745:Buffer size 4096
 rdisk.c:m_do_open:748:Device 0 is active_flag 1
 rdisk.c:m_prepare:262:device = 0
 rdisk.c:get_geometry:966:img_fd=4 dev_owner=-2 st_size=102400000 st_blksize=4096 localbuff=246E000 active=1 available=1
 rdisk.c:get_geometry:972:base=0 size=102400000 cyl=97 heads=64 sec=32
 rdisk.c:m_do_open:810:img_fd=4 dev_owner=-2 st_size=102400000 st_blksize=4096 localbuff=246E000 active=1 available=1
 rdisk.c:m_do_open:812:END m_do_open
 driver.c:driver_task:230:SEND msg a DEVICE_CALLER: -2 -> m_type=68, (REP_ENDPT)=0, (REP_STATUS)=0
DEBUG 597:dvk_send_T:653: endpoint=-2 timeout=-1
DEBUG 597:dvk_send_T:659: ioctl ret=76 errno=0
 driver.c:driver_task:114:M3-IPC Listening ...
DEBUG 597:dvk_receive_T:677: endpoint=31438 timeout=-1
DEBUG 597:dvk_receive_T:683: ioctl ret=0 errno=0
 driver.c:driver_task:129:
RECEIVE: m_source=-2, m_type=1030, DEVICE=0, IO_ENDPT=0, POSITION=0, COUNT=0, ADDRESS:0, compress(m2_l2):1205896192
 driver.c:driver_task:140:device_caller= -2, mess.m_source= -2
 driver.c:driver_task:147:m_type: 1030 - DEV_OPEN
 rdisk.c:m_do_open:711:m_do_open - device number: 0 - OK to open
 driver.c:driver_task:230:SEND msg a DEVICE_CALLER: -2 -> m_type=68, (REP_ENDPT)=0, (REP_STATUS)=-16
DEBUG 597:dvk_send_T:653: endpoint=-2 timeout=-1
DEBUG 597:dvk_send_T:659: ioctl ret=76 errno=0
 driver.c:driver_task:114:M3-IPC Listening ...
 

==============================================================================================
20190601:
	
UML MOUNT 	
root@node0:~# mount /dev/rdiska /mnt/
DEBUG rd_open:651: 
DEBUG rd_open_dev:273: major=3 minor=0
DEBUG rd_open_dev:284: source=1231062116 type=1030 m2i1=0 m2i2=30 m2i3=0 m2l1=0 m2l2=1231062016 m2p1=  (null)
DEBUG 2:dvk_sendrec_T:701: endpoint=3 timeout=30000
DEBUG 2:dvk_sendrec_T:712: ioctl ret=0
DEBUG rd_open_dev:287: source=3 type=68 m2i1=30 m2i2=0 m2i3=0 m2l1=0 m2l2=1231062016 m2p1=  (null)
DEBUG rd_open:651: 
DEBUG rd_open_dev:273: major=3 minor=0
DEBUG rd_open_dev:284: source=1231062116 type=1030 m2i1=0 m2i2=30 m2i3=0 m2l1=0 m2l2=1231062016 m2p1=  (null)
DEBUG 2:dvk_sendrec_T:701: endpoint=3 timeout=30000
DEBUG 2:dvk_sendrec_T:712: ioctl ret=0
DEBUG rd_open_dev:287: source=3 type=68 m2i1=30 m2i2=0 m2i3=0 m2l1=0 m2l2=1231062016 m2p1=  (null)
DEBUG do_rdisk:877: op=0 offset=0 length=4096 sectorsize=512 error=0
DEBUG rdisk_rw:857: source=4 type=1027 m2i1=0 m2i2=30 m2i3=4096 m2l1=0 m2l2=0 m2p1=47918000
DEBUG 10:dvk_sendrec_T:701: endpoint=3 timeout=30000
DEBUG 10:dvk_sendrec_T:712: ioctl ret=0
DEBUG rdisk_rw:860: source=3 type=68 m2i1=30 m2i2=4096 m2i3=4096 m2l1=0 m2l2=0 m2p1=47918000
find_irq_by_fd doesn't have descriptor 14 <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
DEBUG do_rdisk:877: op=0 offset=0 length=4096 sectorsize=512 error=0
DEBUG rdisk_rw:857: source=3 type=1027 m2i1=0 m2i2=30 m2i3=4096 m2l1=0 m2l2=0 m2p1=47919000
DEBUG 10:dvk_sendrec_T:701: endpoint=3 timeout=30000
DEBUG 10:dvk_sendrec_T:712: ioctl ret=0
DEBUG rdisk_rw:860: source=3 type=68 m2i1=30 m2i2=4096 m2i3=4096 m2l1=0 m2l2=0 m2p1=47919000

RDISK REPORTA 		 
driver.c:driver_task:114:M3-IPC Listening ...
DEBUG 597:dvk_receive_T:677: endpoint=31438 timeout=-1
DEBUG 597:dvk_receive_T:683: ioctl ret=0 errno=0
 driver.c:driver_task:129:
RECEIVE: m_source=-2, m_type=1030, DEVICE=0, IO_ENDPT=30, POSITION=0, COUNT=0, ADDRESS:0, compress(m2_l2):1231062016
 driver.c:driver_task:140:device_caller= -2, mess.m_source= -2
 driver.c:driver_task:147:m_type: 1030 - DEV_OPEN
 rdisk.c:m_do_open:719:m_do_open - device number: 0 - OK to open
 rdisk.c:m_do_open:728:rcode 0
 rdisk.c:m_do_open:737:Open imagen FD=4
 rdisk.c:m_do_open:754:Aligned Buffer size=4096 on address 154F000, device=0
 rdisk.c:m_do_open:755:Local Buffer 154F000
 rdisk.c:m_do_open:756:Buffer size 4096
 rdisk.c:m_do_open:759:Device 0 is active_flag 1
 rdisk.c:m_prepare:262:device = 0
 rdisk.c:get_geometry:977:img_fd=4 dev_owner=-2 st_size=102400000 st_blksize=4096 localbuff=154F000 active=1 available=1
 rdisk.c:get_geometry:983:base=0 size=102400000 cyl=97 heads=64 sec=32
 rdisk.c:m_do_open:821:img_fd=4 dev_owner=-2 st_size=102400000 st_blksize=4096 localbuff=154F000 active=1 available=1
 rdisk.c:m_do_open:823:END m_do_open
 driver.c:driver_task:230:SEND msg a DEVICE_CALLER: -2 -> m_type=68, (REP_ENDPT)=30, (REP_STATUS)=0
DEBUG 597:dvk_send_T:653: endpoint=-2 timeout=-1
DEBUG 597:dvk_send_T:659: ioctl ret=76 errno=0
 driver.c:driver_task:114:M3-IPC Listening ...
DEBUG 597:dvk_receive_T:677: endpoint=31438 timeout=-1
DEBUG 597:dvk_receive_T:683: ioctl ret=0 errno=0
 driver.c:driver_task:129:
RECEIVE: m_source=-2, m_type=1030, DEVICE=0, IO_ENDPT=30, POSITION=0, COUNT=0, ADDRESS:0, compress(m2_l2):1231062016
 driver.c:driver_task:140:device_caller= -2, mess.m_source= -2
 driver.c:driver_task:147:m_type: 1030 - DEV_OPEN
 rdisk.c:m_do_open:719:m_do_open - device number: 0 - OK to open
 rdisk.c:m_do_open:728:rcode 0
 rdisk.c:m_do_open:737:Open imagen FD=5
 rdisk.c:m_do_open:754:Aligned Buffer size=4096 on address 1551000, device=0
 rdisk.c:m_do_open:755:Local Buffer 1551000
 rdisk.c:m_do_open:756:Buffer size 4096
 rdisk.c:m_do_open:759:Device 0 is active_flag 1
 rdisk.c:m_prepare:262:device = 0
 rdisk.c:get_geometry:977:img_fd=5 dev_owner=-2 st_size=102400000 st_blksize=4096 localbuff=1551000 active=1 available=1
 rdisk.c:get_geometry:983:base=0 size=102400000 cyl=97 heads=64 sec=32
 rdisk.c:m_do_open:821:img_fd=5 dev_owner=-2 st_size=102400000 st_blksize=4096 localbuff=1551000 active=1 available=1
 rdisk.c:m_do_open:823:END m_do_open
 driver.c:driver_task:230:SEND msg a DEVICE_CALLER: -2 -> m_type=68, (REP_ENDPT)=30, (REP_STATUS)=0
DEBUG 597:dvk_send_T:653: endpoint=-2 timeout=-1
DEBUG 597:dvk_send_T:659: ioctl ret=76 errno=0
 driver.c:driver_task:114:M3-IPC Listening ...
DEBUG 597:dvk_receive_T:677: endpoint=31438 timeout=-1
DEBUG 597:dvk_receive_T:683: ioctl ret=0 errno=0
 driver.c:driver_task:129:
RECEIVE: m_source=-2, m_type=1030, DEVICE=0, IO_ENDPT=30, POSITION=0, COUNT=0, ADDRESS:0, compress(m2_l2):1231062016
 driver.c:driver_task:140:device_caller= -2, mess.m_source= -2
 driver.c:driver_task:147:m_type: 1030 - DEV_OPEN
 rdisk.c:m_do_open:719:m_do_open - device number: 0 - OK to open
 rdisk.c:m_do_open:728:rcode 0
 rdisk.c:m_do_open:737:Open imagen FD=6
 rdisk.c:m_do_open:754:Aligned Buffer size=4096 on address 1553000, device=0
 rdisk.c:m_do_open:755:Local Buffer 1553000
 rdisk.c:m_do_open:756:Buffer size 4096
 rdisk.c:m_do_open:759:Device 0 is active_flag 1
 rdisk.c:m_prepare:262:device = 0
 rdisk.c:get_geometry:977:img_fd=6 dev_owner=-2 st_size=102400000 st_blksize=4096 localbuff=1553000 active=1 available=1
 rdisk.c:get_geometry:983:base=0 size=102400000 cyl=97 heads=64 sec=32
 rdisk.c:m_do_open:821:img_fd=6 dev_owner=-2 st_size=102400000 st_blksize=4096 localbuff=1553000 active=1 available=1
 rdisk.c:m_do_open:823:END m_do_open
 driver.c:driver_task:230:SEND msg a DEVICE_CALLER: -2 -> m_type=68, (REP_ENDPT)=30, (REP_STATUS)=0
DEBUG 597:dvk_send_T:653: endpoint=-2 timeout=-1
DEBUG 597:dvk_send_T:659: ioctl ret=76 errno=0
 driver.c:driver_task:114:M3-IPC Listening ...
DEBUG 597:dvk_receive_T:677: endpoint=31438 timeout=-1
DEBUG 597:dvk_receive_T:683: ioctl ret=0 errno=0
 driver.c:driver_task:129:
RECEIVE: m_source=30, m_type=1027, DEVICE=0, IO_ENDPT=30, POSITION=0, COUNT=4096, ADDRESS:47918000, compress(m2_l2):0
 driver.c:driver_task:140:device_caller= 30, mess.m_source= 30
 driver.c:driver_task:164:m_type: 1027 - (DEV_READ= 1027 ? WRITE= 1028)
 driver.c:do_rdwt:267:mp->COUNT=4096
 driver.c:do_rdwt:277:mp->IO_ENDPT=30 - mp->ADDRESS:47918000 - mp->COUNT=4096
 rdisk.c:m_prepare:262:device = 0
 rdisk.c:get_geometry:977:img_fd=6 dev_owner=-2 st_size=102400000 st_blksize=4096 localbuff=1553000 active=1 available=1
 rdisk.c:get_geometry:983:base=0 size=102400000 cyl=97 heads=64 sec=32
 driver.c:do_rdwt:283:mp->m_type: 1027
 driver.c:do_rdwt:303:opcode: 1033 - DEV_GATHER=1033 - DEV_SCATTER=1032
 rdisk.c:m_transfer:299:m_device: 0
 rdisk.c:m_transfer:312:dv_size: 102400000
 rdisk.c:m_transfer:315:posit: 0
 rdisk.c:m_transfer:316:nr_req: 1
 rdisk.c:m_transfer:326:count: 4096
 rdisk.c:m_transfer:330:user_vir 47918000
 rdisk.c:m_transfer:351:
<DEV_GATHER>
 rdisk.c:m_transfer:357:bytes: 4096
 rdisk.c:m_transfer:361:pread: bytes=4096
DEBUG 597:dvk_vcopy:80: src_ep=3 dst_ep=30 bytes=4096
DEBUG 597:dvk_vcopy:89: ioctl ret=4096 errno=0
 rdisk.c:m_transfer:396:DRIVER: dvk_vcopy(DRIVER -> proc_nr) rcode=4096
 rdisk.c:m_transfer:397:bytes= 4096
 rdisk.c:m_transfer:398:DRIVER - Offset (read) 1553000
 rdisk.c:m_transfer:400:user_vir: 47918000 (in proc_nr 30)
 rdisk.c:m_transfer:413:user_vir (do-buffer) 47919000
 rdisk.c:m_transfer:416:count=0 stbytes=4096 position=4096
 rdisk.c:m_transfer:702:subtotal de bytes
 driver.c:do_rdwt:310:mp->m2_l2 =0, buffer_size=0
 driver.c:do_rdwt:311:dr_trasnfer = (r) 4096
 driver.c:driver_task:230:SEND msg a DEVICE_CALLER: 30 -> m_type=68, (REP_ENDPT)=30, (REP_STATUS)=4096
DEBUG 597:dvk_send_T:653: endpoint=30 timeout=-1
DEBUG 597:dvk_send_T:659: ioctl ret=76 errno=0
 driver.c:driver_task:114:M3-IPC Listening ...
DEBUG 597:dvk_receive_T:677: endpoint=31438 timeout=-1
DEBUG 597:dvk_receive_T:683: ioctl ret=0 errno=0
 driver.c:driver_task:129:
RECEIVE: m_source=30, m_type=1027, DEVICE=0, IO_ENDPT=30, POSITION=0, COUNT=4096, ADDRESS:47919000, compress(m2_l2):0
 driver.c:driver_task:140:device_caller= 30, mess.m_source= 30
 driver.c:driver_task:164:m_type: 1027 - (DEV_READ= 1027 ? WRITE= 1028)
 driver.c:do_rdwt:267:mp->COUNT=4096
 driver.c:do_rdwt:277:mp->IO_ENDPT=30 - mp->ADDRESS:47919000 - mp->COUNT=4096
 rdisk.c:m_prepare:262:device = 0
 rdisk.c:get_geometry:977:img_fd=6 dev_owner=-2 st_size=102400000 st_blksize=4096 localbuff=1553000 active=1 available=1
 rdisk.c:get_geometry:983:base=0 size=102400000 cyl=97 heads=64 sec=32
 driver.c:do_rdwt:283:mp->m_type: 1027
 driver.c:do_rdwt:303:opcode: 1033 - DEV_GATHER=1033 - DEV_SCATTER=1032
 rdisk.c:m_transfer:299:m_device: 0
 rdisk.c:m_transfer:312:dv_size: 102400000
 rdisk.c:m_transfer:315:posit: 0
 rdisk.c:m_transfer:316:nr_req: 1
 rdisk.c:m_transfer:326:count: 4096
 rdisk.c:m_transfer:330:user_vir 47919000
 rdisk.c:m_transfer:351:
<DEV_GATHER>
 rdisk.c:m_transfer:357:bytes: 4096
 rdisk.c:m_transfer:361:pread: bytes=4096
DEBUG 597:dvk_vcopy:80: src_ep=3 dst_ep=30 bytes=4096
DEBUG 597:dvk_vcopy:89: ioctl ret=4096 errno=0
 rdisk.c:m_transfer:396:DRIVER: dvk_vcopy(DRIVER -> proc_nr) rcode=4096
 rdisk.c:m_transfer:397:bytes= 4096
 rdisk.c:m_transfer:398:DRIVER - Offset (read) 1553000
 rdisk.c:m_transfer:400:user_vir: 47919000 (in proc_nr 30)
 rdisk.c:m_transfer:413:user_vir (do-buffer) 4791A000
 rdisk.c:m_transfer:416:count=0 stbytes=4096 position=4096
 rdisk.c:m_transfer:702:subtotal de bytes
 driver.c:do_rdwt:310:mp->m2_l2 =0, buffer_size=0
 driver.c:do_rdwt:311:dr_trasnfer = (r) 4096
 driver.c:driver_task:230:SEND msg a DEVICE_CALLER: 30 -> m_type=68, (REP_ENDPT)=30, (REP_STATUS)=4096
DEBUG 597:dvk_send_T:653: endpoint=30 timeout=-1
DEBUG 597:dvk_send_T:659: ioctl ret=76 errno=0
 driver.c:driver_task:114:M3-IPC Listening ...
 
 

	

================================== TODO ==================================================

Hacer que el UML-Kernel utilice M3-IPC no es problematico.
Se crean hilos por cada driver o FS y se manejan sin ningun problema. 
Proyecto1: uso de RDISK
Proyecto2: uso de MOLFS

PASO1: 
Imprimir info sobre DVS 
	Imprimir info sobre DC 
	Pasarle parametro por linea de comando “endpoint=XX”
	Bindear el UML-Kernel como SYSTEM (-2) o XX 
	Imprimir info del proceso 

PASO2:
	En base a dc_init crear uml_init
	Alli automaticamente se hace un fork/exec con UML 
	Modificar el UML para que haga wait4bind()

En definitiva: 
Si existe el parámetro “endpoint=XX”, entonces se bindea SOLO.
Si no existe, entonces hace wait4bind()

PASO3:
	Leer como muk.cfg un archivo de configuracion es decir
	Parametro config=”uml.cfg”

===============================================================
Como pasarle parametros al kernel desde la linea de comandos?


int Atoi(char *str)
{
    if (*str == '\0')
       return 0;
 
    int res = 0;		// Initialize result
    int sign = 1;		// Initialize sign as positive
    int i = 0;			// Initialize index of first digit
 
     if (str[0] == '-')
    {
        sign = -1;
        i++;  			// Also update index of first digit
    }
 
    for (; str[i] != '\0'; ++i)
    {
        if ( str[i] <= '0' || str[i] >= '9')	// If string contain character it will terminate
            return 0; 
            
        res = res*10 + str[i] - '0';
    }
 
    return sign*res;
}
















			
	
	
	
		





			 
		
		
